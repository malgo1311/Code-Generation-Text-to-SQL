[
  {
    "db_id": "city_record",
    "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "Competition",
      "FROM",
      "MATCH",
      "GROUP",
      "BY",
      "Competition"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "competition",
      "from",
      "match",
      "group",
      "by",
      "competition"
    ],
    "question": "Find the number of matches in different competitions.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "matches",
      "in",
      "different",
      "competitions",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "Competition",
      "FROM",
      "MATCH",
      "GROUP",
      "BY",
      "Competition"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "competition",
      "from",
      "match",
      "group",
      "by",
      "competition"
    ],
    "question": "For each competition, count the number of matches.",
    "question_toks": [
      "For",
      "each",
      "competition",
      ",",
      "count",
      "the",
      "number",
      "of",
      "matches",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT venue FROM MATCH ORDER BY date DESC",
    "query_toks": [
      "SELECT",
      "venue",
      "FROM",
      "MATCH",
      "ORDER",
      "BY",
      "date",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "venue",
      "from",
      "match",
      "order",
      "by",
      "date",
      "desc"
    ],
    "question": "List venues of all matches in the order of their dates starting from the most recent one.",
    "question_toks": [
      "List",
      "venues",
      "of",
      "all",
      "matches",
      "in",
      "the",
      "order",
      "of",
      "their",
      "dates",
      "starting",
      "from",
      "the",
      "most",
      "recent",
      "one",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT venue FROM MATCH ORDER BY date DESC",
    "query_toks": [
      "SELECT",
      "venue",
      "FROM",
      "MATCH",
      "ORDER",
      "BY",
      "date",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "venue",
      "from",
      "match",
      "order",
      "by",
      "date",
      "desc"
    ],
    "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
    "question_toks": [
      "What",
      "are",
      "the",
      "venues",
      "of",
      "all",
      "the",
      "matches",
      "?",
      "Sort",
      "them",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "match",
      "date",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "gdp",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Regional_Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "gdp",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "what is the GDP of the city with the largest population.",
    "question_toks": [
      "what",
      "is",
      "the",
      "GDP",
      "of",
      "the",
      "city",
      "with",
      "the",
      "largest",
      "population",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "gdp",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Regional_Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "gdp",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the GDP of the city with the largest regional population.",
    "question_toks": [
      "Find",
      "the",
      "GDP",
      "of",
      "the",
      "city",
      "with",
      "the",
      "largest",
      "regional",
      "population",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "t1.gdp",
      ",",
      "t1.Regional_Population",
      "FROM",
      "city",
      "AS",
      "T1",
      "JOIN",
      "hosting_city",
      "AS",
      "T2",
      "ON",
      "T1.city_id",
      "=",
      "T2.host_city",
      "GROUP",
      "BY",
      "t2.Host_City",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "gdp",
      ",",
      "t1",
      ".",
      "regional_population",
      "from",
      "city",
      "as",
      "t1",
      "join",
      "hosting_city",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_id",
      "=",
      "t2",
      ".",
      "host_city",
      "group",
      "by",
      "t2",
      ".",
      "host_city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the GDP and population of the city that already served as a host more than once?",
    "question_toks": [
      "What",
      "are",
      "the",
      "GDP",
      "and",
      "population",
      "of",
      "the",
      "city",
      "that",
      "already",
      "served",
      "as",
      "a",
      "host",
      "more",
      "than",
      "once",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "t1.gdp",
      ",",
      "t1.Regional_Population",
      "FROM",
      "city",
      "AS",
      "T1",
      "JOIN",
      "hosting_city",
      "AS",
      "T2",
      "ON",
      "T1.city_id",
      "=",
      "T2.host_city",
      "GROUP",
      "BY",
      "t2.Host_City",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "gdp",
      ",",
      "t1",
      ".",
      "regional_population",
      "from",
      "city",
      "as",
      "t1",
      "join",
      "hosting_city",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_id",
      "=",
      "t2",
      ".",
      "host_city",
      "group",
      "by",
      "t2",
      ".",
      "host_city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
    "question_toks": [
      "Which",
      "cities",
      "have",
      "served",
      "as",
      "host",
      "cities",
      "more",
      "than",
      "once",
      "?",
      "Return",
      "me",
      "their",
      "GDP",
      "and",
      "population",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name",
    "query_toks": [
      "SELECT",
      "individual_first_name",
      ",",
      "individual_middle_name",
      ",",
      "individual_last_name",
      "FROM",
      "individuals",
      "ORDER",
      "BY",
      "individual_last_name"
    ],
    "query_toks_no_value": [
      "select",
      "individual_first_name",
      ",",
      "individual_middle_name",
      ",",
      "individual_last_name",
      "from",
      "individuals",
      "order",
      "by",
      "individual_last_name"
    ],
    "question": "List every individual's first name, middle name and last name in alphabetical order by last name.",
    "question_toks": [
      "List",
      "every",
      "individual",
      "'s",
      "first",
      "name",
      ",",
      "middle",
      "name",
      "and",
      "last",
      "name",
      "in",
      "alphabetical",
      "order",
      "by",
      "last",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name",
    "query_toks": [
      "SELECT",
      "individual_first_name",
      ",",
      "individual_middle_name",
      ",",
      "individual_last_name",
      "FROM",
      "individuals",
      "ORDER",
      "BY",
      "individual_last_name"
    ],
    "query_toks_no_value": [
      "select",
      "individual_first_name",
      ",",
      "individual_middle_name",
      ",",
      "individual_last_name",
      "from",
      "individuals",
      "order",
      "by",
      "individual_last_name"
    ],
    "question": "What are the first, middle, and last names of all individuals, ordered by last name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "names",
      "of",
      "all",
      "individuals",
      ",",
      "ordered",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT form_type_code FROM forms",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "form_type_code",
      "FROM",
      "forms"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "form_type_code",
      "from",
      "forms"
    ],
    "question": "List all the types of forms.",
    "question_toks": [
      "List",
      "all",
      "the",
      "types",
      "of",
      "forms",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT form_type_code FROM forms",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "form_type_code",
      "FROM",
      "forms"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "form_type_code",
      "from",
      "forms"
    ],
    "question": "What are the different types of forms?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "forms",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.form_name",
      "FROM",
      "forms",
      "AS",
      "t1",
      "JOIN",
      "party_forms",
      "AS",
      "t2",
      "ON",
      "t1.form_id",
      "=",
      "t2.form_id",
      "GROUP",
      "BY",
      "t2.form_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "form_name",
      "from",
      "forms",
      "as",
      "t1",
      "join",
      "party_forms",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "form_id",
      "=",
      "t2",
      ".",
      "form_id",
      "group",
      "by",
      "t2",
      ".",
      "form_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the most popular party form.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "most",
      "popular",
      "party",
      "form",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [
        [
          0,
          42,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.form_name",
      "FROM",
      "forms",
      "AS",
      "t1",
      "JOIN",
      "party_forms",
      "AS",
      "t2",
      "ON",
      "t1.form_id",
      "=",
      "t2.form_id",
      "GROUP",
      "BY",
      "t2.form_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "form_name",
      "from",
      "forms",
      "as",
      "t1",
      "join",
      "party_forms",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "form_id",
      "=",
      "t2",
      ".",
      "form_id",
      "group",
      "by",
      "t2",
      ".",
      "form_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the party form that is most common?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "party",
      "form",
      "that",
      "is",
      "most",
      "common",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [
        [
          0,
          42,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "party_phone",
      "FROM",
      "parties",
      "WHERE",
      "party_email",
      "=",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "party_phone",
      "from",
      "parties",
      "where",
      "party_email",
      "=",
      "value"
    ],
    "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".",
    "question_toks": [
      "Find",
      "the",
      "payment",
      "method",
      "and",
      "phone",
      "of",
      "the",
      "party",
      "with",
      "email",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"enrico09@example.com\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "party_phone",
      "FROM",
      "parties",
      "WHERE",
      "party_email",
      "=",
      "``",
      "enrico09",
      "@",
      "example.com",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "party_phone",
      "from",
      "parties",
      "where",
      "party_email",
      "=",
      "value"
    ],
    "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "payment",
      "method",
      "code",
      "and",
      "party",
      "phone",
      "of",
      "the",
      "party",
      "with",
      "the",
      "email",
      "'enrico09",
      "@",
      "example.com",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"enrico09@example.com\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "t1.party_email",
      "FROM",
      "parties",
      "AS",
      "t1",
      "JOIN",
      "party_forms",
      "AS",
      "t2",
      "ON",
      "t1.party_id",
      "=",
      "t2.party_id",
      "WHERE",
      "t2.form_id",
      "=",
      "(",
      "SELECT",
      "form_id",
      "FROM",
      "party_forms",
      "GROUP",
      "BY",
      "form_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "party_email",
      "from",
      "parties",
      "as",
      "t1",
      "join",
      "party_forms",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "party_id",
      "=",
      "t2",
      ".",
      "party_id",
      "where",
      "t2",
      ".",
      "form_id",
      "=",
      "(",
      "select",
      "form_id",
      "from",
      "party_forms",
      "group",
      "by",
      "form_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "Find the emails of parties with the most popular party form.",
    "question_toks": [
      "Find",
      "the",
      "emails",
      "of",
      "parties",
      "with",
      "the",
      "most",
      "popular",
      "party",
      "form",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  8
                ]
              ]
            },
            "groupBy": [
              [
                0,
                42,
                false
              ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      42,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
    "query_toks": [
      "SELECT",
      "t1.party_email",
      "FROM",
      "parties",
      "AS",
      "t1",
      "JOIN",
      "party_forms",
      "AS",
      "t2",
      "ON",
      "t1.party_id",
      "=",
      "t2.party_id",
      "WHERE",
      "t2.form_id",
      "=",
      "(",
      "SELECT",
      "form_id",
      "FROM",
      "party_forms",
      "GROUP",
      "BY",
      "form_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "party_email",
      "from",
      "parties",
      "as",
      "t1",
      "join",
      "party_forms",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "party_id",
      "=",
      "t2",
      ".",
      "party_id",
      "where",
      "t2",
      ".",
      "form_id",
      "=",
      "(",
      "select",
      "form_id",
      "from",
      "party_forms",
      "group",
      "by",
      "form_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value",
      ")"
    ],
    "question": "What are the party emails associated with parties that used the party form that is the most common?",
    "question_toks": [
      "What",
      "are",
      "the",
      "party",
      "emails",
      "associated",
      "with",
      "parties",
      "that",
      "used",
      "the",
      "party",
      "form",
      "that",
      "is",
      "the",
      "most",
      "common",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  8
                ]
              ]
            },
            "groupBy": [
              [
                0,
                42,
                false
              ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
              "desc",
              [
                [
                  0,
                  [
                    3,
                    0,
                    false
                  ],
                  null
                ]
              ]
            ],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      42,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "asc"
    ],
    "question": "List all the name of organizations in order of the date formed.",
    "question_toks": [
      "List",
      "all",
      "the",
      "name",
      "of",
      "organizations",
      "in",
      "order",
      "of",
      "the",
      "date",
      "formed",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "asc"
    ],
    "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "organizations",
      ",",
      "ordered",
      "by",
      "the",
      "date",
      "they",
      "were",
      "formed",
      ",",
      "ascending",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the youngest organization.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "youngest",
      "organization",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the organization that was formed most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "organization",
      "that",
      "was",
      "formed",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t3.individual_last_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "JOIN",
      "individuals",
      "AS",
      "t3",
      "ON",
      "t2.individual_id",
      "=",
      "t3.individual_id",
      "WHERE",
      "t1.organization_name",
      "=",
      "``",
      "Labour",
      "Party",
      "''",
      "ORDER",
      "BY",
      "t2.date_contact_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "individual_last_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "join",
      "individuals",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "individual_id",
      "=",
      "t3",
      ".",
      "individual_id",
      "where",
      "t1",
      ".",
      "organization_name",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "date_contact_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the last name of the latest contact individual of the organization \"Labour Party\".",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "latest",
      "contact",
      "individual",
      "of",
      "the",
      "organization",
      "``",
      "Labour",
      "Party",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"Labour Party\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t3.individual_last_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "JOIN",
      "individuals",
      "AS",
      "t3",
      "ON",
      "t2.individual_id",
      "=",
      "t3.individual_id",
      "WHERE",
      "t1.organization_name",
      "=",
      "``",
      "Labour",
      "Party",
      "''",
      "ORDER",
      "BY",
      "t2.date_contact_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "individual_last_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "join",
      "individuals",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "individual_id",
      "=",
      "t3",
      ".",
      "individual_id",
      "where",
      "t1",
      ".",
      "organization_name",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "date_contact_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the last name of the contact individual from the Labour party organization who was contacted most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "name",
      "of",
      "the",
      "contact",
      "individual",
      "from",
      "the",
      "Labour",
      "party",
      "organization",
      "who",
      "was",
      "contacted",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"Labour Party\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t3.individual_last_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "JOIN",
      "individuals",
      "AS",
      "t3",
      "ON",
      "t2.individual_id",
      "=",
      "t3.individual_id",
      "WHERE",
      "t1.uk_vat_number",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "uk_vat_number",
      ")",
      "FROM",
      "organizations",
      ")",
      "ORDER",
      "BY",
      "t2.date_contact_to",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "individual_last_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "join",
      "individuals",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "individual_id",
      "=",
      "t3",
      ".",
      "individual_id",
      "where",
      "t1",
      ".",
      "uk_vat_number",
      "=",
      "(",
      "select",
      "max",
      "(",
      "uk_vat_number",
      ")",
      "from",
      "organizations",
      ")",
      "order",
      "by",
      "t2",
      ".",
      "date_contact_to",
      "asc",
      "limit",
      "value"
    ],
    "question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "first",
      "ever",
      "contact",
      "person",
      "of",
      "the",
      "organization",
      "with",
      "the",
      "highest",
      "UK",
      "Vat",
      "number",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      27,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t3.individual_last_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "JOIN",
      "individuals",
      "AS",
      "t3",
      "ON",
      "t2.individual_id",
      "=",
      "t3.individual_id",
      "WHERE",
      "t1.uk_vat_number",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "uk_vat_number",
      ")",
      "FROM",
      "organizations",
      ")",
      "ORDER",
      "BY",
      "t2.date_contact_to",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "individual_last_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "join",
      "individuals",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "individual_id",
      "=",
      "t3",
      ".",
      "individual_id",
      "where",
      "t1",
      ".",
      "uk_vat_number",
      "=",
      "(",
      "select",
      "max",
      "(",
      "uk_vat_number",
      ")",
      "from",
      "organizations",
      ")",
      "order",
      "by",
      "t2",
      ".",
      "date_contact_to",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "name",
      "of",
      "the",
      "first",
      "individual",
      "contacted",
      "from",
      "the",
      "organization",
      "with",
      "the",
      "maximum",
      "UK",
      "Vat",
      "number",
      "across",
      "all",
      "organizations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      27,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id",
    "query_toks": [
      "SELECT",
      "service_name",
      "FROM",
      "services",
      "EXCEPT",
      "SELECT",
      "t1.service_name",
      "FROM",
      "services",
      "AS",
      "t1",
      "JOIN",
      "party_services",
      "AS",
      "t2",
      "ON",
      "t1.service_id",
      "=",
      "t2.service_id"
    ],
    "query_toks_no_value": [
      "select",
      "service_name",
      "from",
      "services",
      "except",
      "select",
      "t1",
      ".",
      "service_name",
      "from",
      "services",
      "as",
      "t1",
      "join",
      "party_services",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "service_id",
      "=",
      "t2",
      ".",
      "service_id"
    ],
    "question": "Find name of the services that has never been used.",
    "question_toks": [
      "Find",
      "name",
      "of",
      "the",
      "services",
      "that",
      "has",
      "never",
      "been",
      "used",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                48,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              9
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  9,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id",
    "query_toks": [
      "SELECT",
      "service_name",
      "FROM",
      "services",
      "EXCEPT",
      "SELECT",
      "t1.service_name",
      "FROM",
      "services",
      "AS",
      "t1",
      "JOIN",
      "party_services",
      "AS",
      "t2",
      "ON",
      "t1.service_id",
      "=",
      "t2.service_id"
    ],
    "query_toks_no_value": [
      "select",
      "service_name",
      "from",
      "services",
      "except",
      "select",
      "t1",
      ".",
      "service_name",
      "from",
      "services",
      "as",
      "t1",
      "join",
      "party_services",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "service_id",
      "=",
      "t2",
      ".",
      "service_id"
    ],
    "question": "What are the names of the services that have never been used?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "services",
      "that",
      "have",
      "never",
      "been",
      "used",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                48,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              9
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  9,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
    "query_toks": [
      "SELECT",
      "town_city",
      "FROM",
      "addresses",
      "UNION",
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "town_city",
      "from",
      "addresses",
      "union",
      "select",
      "state_province_county",
      "from",
      "addresses"
    ],
    "question": "Find the name of all the cities and states.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "the",
      "cities",
      "and",
      "states",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
    "query_toks": [
      "SELECT",
      "town_city",
      "FROM",
      "addresses",
      "UNION",
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "town_city",
      "from",
      "addresses",
      "union",
      "select",
      "state_province_county",
      "from",
      "addresses"
    ],
    "question": "What are the names of all cities and states?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "cities",
      "and",
      "states",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many cities are there in state \"Colorado\"?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "state",
      "``",
      "Colorado",
      "''",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "Count the number of cities in the state of Colorado.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "the",
      "state",
      "of",
      "Colorado",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      "FROM",
      "parties",
      "GROUP",
      "BY",
      "payment_method_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      "from",
      "parties",
      "group",
      "by",
      "payment_method_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the payment method code used by more than 3 parties.",
    "question_toks": [
      "Find",
      "the",
      "payment",
      "method",
      "code",
      "used",
      "by",
      "more",
      "than",
      "3",
      "parties",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      "FROM",
      "parties",
      "GROUP",
      "BY",
      "payment_method_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      "from",
      "parties",
      "group",
      "by",
      "payment_method_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the payment method codes that have been used by more than 3 parties?",
    "question_toks": [
      "What",
      "are",
      "the",
      "payment",
      "method",
      "codes",
      "that",
      "have",
      "been",
      "used",
      "by",
      "more",
      "than",
      "3",
      "parties",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "Find the name of organizations whose names contain \"Party\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "organizations",
      "whose",
      "names",
      "contain",
      "``",
      "Party",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "What are the names of organizations that contain the word \"Party\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "organizations",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "Party",
      "''",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "How many distinct payment methods are used by parties?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "payment",
      "methods",
      "are",
      "used",
      "by",
      "parties",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "Count the number of different payment method codes used by parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "payment",
      "method",
      "codes",
      "used",
      "by",
      "parties",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.party_email",
      "FROM",
      "parties",
      "AS",
      "t1",
      "JOIN",
      "party_services",
      "AS",
      "t2",
      "ON",
      "t1.party_id",
      "=",
      "t2.customer_id",
      "GROUP",
      "BY",
      "t1.party_email",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "party_email",
      "from",
      "parties",
      "as",
      "t1",
      "join",
      "party_services",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "party_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "party_email",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which is the email of the party that has used the services the most number of times?",
    "question_toks": [
      "Which",
      "is",
      "the",
      "email",
      "of",
      "the",
      "party",
      "that",
      "has",
      "used",
      "the",
      "services",
      "the",
      "most",
      "number",
      "of",
      "times",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [
        [
          0,
          31,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.party_email",
      "FROM",
      "parties",
      "AS",
      "t1",
      "JOIN",
      "party_services",
      "AS",
      "t2",
      "ON",
      "t1.party_id",
      "=",
      "t2.customer_id",
      "GROUP",
      "BY",
      "t1.party_email",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "party_email",
      "from",
      "parties",
      "as",
      "t1",
      "join",
      "party_services",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "party_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "party_email",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the party email that has used party services the greatest number of times.",
    "question_toks": [
      "Return",
      "the",
      "party",
      "email",
      "that",
      "has",
      "used",
      "party",
      "services",
      "the",
      "greatest",
      "number",
      "of",
      "times",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              47,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [
        [
          0,
          31,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?",
    "question_toks": [
      "Which",
      "state",
      "can",
      "address",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "possibly",
      "be",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".",
    "question_toks": [
      "Give",
      "the",
      "state",
      "corresponding",
      "to",
      "the",
      "line",
      "number",
      "building",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.organization_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "GROUP",
      "BY",
      "t1.organization_name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "organization_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "group",
      "by",
      "t1",
      ".",
      "organization_name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of organization that has the greatest number of contact individuals?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "organization",
      "that",
      "has",
      "the",
      "greatest",
      "number",
      "of",
      "contact",
      "individuals",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          26,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.organization_name",
      "FROM",
      "organizations",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.organization_id",
      "=",
      "t2.organization_id",
      "GROUP",
      "BY",
      "t1.organization_name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "organization_name",
      "from",
      "organizations",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "organization_id",
      "=",
      "t2",
      ".",
      "organization_id",
      "group",
      "by",
      "t1",
      ".",
      "organization_name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the name of the organization which has the most contact individuals.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "organization",
      "which",
      "has",
      "the",
      "most",
      "contact",
      "individuals",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              33,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          26,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.individual_last_name",
      "FROM",
      "individuals",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.individual_id",
      "=",
      "t2.individual_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "individual_last_name",
      "from",
      "individuals",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "individual_id",
      "=",
      "t2",
      ".",
      "individual_id"
    ],
    "question": "Find the last name of the individuals that have been contact individuals of an organization.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "individuals",
      "that",
      "have",
      "been",
      "contact",
      "individuals",
      "of",
      "an",
      "organization",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              32,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.individual_last_name",
      "FROM",
      "individuals",
      "AS",
      "t1",
      "JOIN",
      "organization_contact_individuals",
      "AS",
      "t2",
      "ON",
      "t1.individual_id",
      "=",
      "t2.individual_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "individual_last_name",
      "from",
      "individuals",
      "as",
      "t1",
      "join",
      "organization_contact_individuals",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "individual_id",
      "=",
      "t2",
      ".",
      "individual_id"
    ],
    "question": "What are the last names of individuals who have been contact individuals for an organization?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "individuals",
      "who",
      "have",
      "been",
      "contact",
      "individuals",
      "for",
      "an",
      "organization",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              32,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT count(*) FROM driver",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver"
    ],
    "question": "How many drivers are there?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name ,  home_city ,  age FROM driver",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "home_city",
      ",",
      "age",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "home_city",
      ",",
      "age",
      "from",
      "driver"
    ],
    "question": "Show the name, home city, and age for all drivers.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "home",
      "city",
      ",",
      "and",
      "age",
      "for",
      "all",
      "drivers",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT party ,  count(*) FROM driver GROUP BY party",
    "query_toks": [
      "SELECT",
      "party",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver",
      "GROUP",
      "BY",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver",
      "group",
      "by",
      "party"
    ],
    "question": "Show the party and the number of drivers in each party.",
    "question_toks": [
      "Show",
      "the",
      "party",
      "and",
      "the",
      "number",
      "of",
      "drivers",
      "in",
      "each",
      "party",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Show the name of drivers in descending order of age.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "drivers",
      "in",
      "descending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT DISTINCT home_city FROM driver",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "home_city",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "home_city",
      "from",
      "driver"
    ],
    "question": "Show all different home cities.",
    "question_toks": [
      "Show",
      "all",
      "different",
      "home",
      "cities",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "home_city",
      "FROM",
      "driver",
      "GROUP",
      "BY",
      "home_city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "home_city",
      "from",
      "driver",
      "group",
      "by",
      "home_city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the home city with the most number of drivers.",
    "question_toks": [
      "Show",
      "the",
      "home",
      "city",
      "with",
      "the",
      "most",
      "number",
      "of",
      "drivers",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40",
    "query_toks": [
      "SELECT",
      "party",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "AND",
      "age",
      ">",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "and",
      "age",
      ">",
      "value"
    ],
    "question": "Show the party with drivers from Hartford and drivers older than 40.",
    "question_toks": [
      "Show",
      "the",
      "party",
      "with",
      "drivers",
      "from",
      "Hartford",
      "and",
      "drivers",
      "older",
      "than",
      "40",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "home_city",
      "FROM",
      "driver",
      "WHERE",
      "age",
      ">",
      "40",
      "GROUP",
      "BY",
      "home_city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "home_city",
      "from",
      "driver",
      "where",
      "age",
      ">",
      "value",
      "group",
      "by",
      "home_city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show home city where at least two drivers older than 40 are from.",
    "question_toks": [
      "Show",
      "home",
      "city",
      "where",
      "at",
      "least",
      "two",
      "drivers",
      "older",
      "than",
      "40",
      "are",
      "from",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40",
    "query_toks": [
      "SELECT",
      "home_city",
      "FROM",
      "driver",
      "EXCEPT",
      "SELECT",
      "home_city",
      "FROM",
      "driver",
      "WHERE",
      "age",
      ">",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "home_city",
      "from",
      "driver",
      "except",
      "select",
      "home_city",
      "from",
      "driver",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Show all home cities except for those having a driver older than 40.",
    "question_toks": [
      "Show",
      "all",
      "home",
      "cities",
      "except",
      "for",
      "those",
      "having",
      "a",
      "driver",
      "older",
      "than",
      "40",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            3,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            40.0,
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "WHERE",
      "driver_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "driver_id",
      "FROM",
      "school_bus",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "where",
      "driver_id",
      "not",
      "in",
      "(",
      "select",
      "driver_id",
      "from",
      "school_bus",
      ")"
    ],
    "question": "Show the names of the drivers without a school bus.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "the",
      "drivers",
      "without",
      "a",
      "school",
      "bus",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      12,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "school",
      "GROUP",
      "BY",
      "TYPE",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "school",
      "group",
      "by",
      "type",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Show the types of schools that have two schools.",
    "question_toks": [
      "Show",
      "the",
      "types",
      "of",
      "schools",
      "that",
      "have",
      "two",
      "schools",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id",
    "query_toks": [
      "SELECT",
      "T2.school",
      ",",
      "T3.name",
      "FROM",
      "school_bus",
      "AS",
      "T1",
      "JOIN",
      "school",
      "AS",
      "T2",
      "ON",
      "T1.school_id",
      "=",
      "T2.school_id",
      "JOIN",
      "driver",
      "AS",
      "T3",
      "ON",
      "T1.driver_id",
      "=",
      "T3.driver_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "school",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "school_bus",
      "as",
      "t1",
      "join",
      "school",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "school_id",
      "=",
      "t2",
      ".",
      "school_id",
      "join",
      "driver",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "driver_id",
      "=",
      "t3",
      ".",
      "driver_id"
    ],
    "question": "Show the school name and driver name for all school buses.",
    "question_toks": [
      "Show",
      "the",
      "school",
      "name",
      "and",
      "driver",
      "name",
      "for",
      "all",
      "school",
      "buses",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "years_working",
      ")",
      ",",
      "min",
      "(",
      "years_working",
      ")",
      ",",
      "avg",
      "(",
      "years_working",
      ")",
      "FROM",
      "school_bus"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "years_working",
      ")",
      ",",
      "min",
      "(",
      "years_working",
      ")",
      ",",
      "avg",
      "(",
      "years_working",
      ")",
      "from",
      "school_bus"
    ],
    "question": "What is the maximum, minimum and average years spent working on a school bus?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "years",
      "spent",
      "working",
      "on",
      "a",
      "school",
      "bus",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",
    "query_toks": [
      "SELECT",
      "school",
      ",",
      "TYPE",
      "FROM",
      "school",
      "WHERE",
      "school_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "school_id",
      "FROM",
      "school_bus",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "school",
      ",",
      "type",
      "from",
      "school",
      "where",
      "school_id",
      "not",
      "in",
      "(",
      "select",
      "school_id",
      "from",
      "school_bus",
      ")"
    ],
    "question": "Show the school name and type for schools without a school bus.",
    "question_toks": [
      "Show",
      "the",
      "school",
      "name",
      "and",
      "type",
      "for",
      "schools",
      "without",
      "a",
      "school",
      "bus",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type",
    "query_toks": [
      "SELECT",
      "T2.type",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school_bus",
      "AS",
      "T1",
      "JOIN",
      "school",
      "AS",
      "T2",
      "ON",
      "T1.school_id",
      "=",
      "T2.school_id",
      "GROUP",
      "BY",
      "T2.type"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "type",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school_bus",
      "as",
      "t1",
      "join",
      "school",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "school_id",
      "=",
      "t2",
      ".",
      "school_id",
      "group",
      "by",
      "t2",
      ".",
      "type"
    ],
    "question": "Show the type of school and the number of buses for each type.",
    "question_toks": [
      "Show",
      "the",
      "type",
      "of",
      "school",
      "and",
      "the",
      "number",
      "of",
      "buses",
      "for",
      "each",
      "type",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "OR",
      "age",
      "<",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "or",
      "age",
      "<",
      "value"
    ],
    "question": "How many drivers are from Hartford city or younger than 40?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "are",
      "from",
      "Hartford",
      "city",
      "or",
      "younger",
      "than",
      "40",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "or",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "WHERE",
      "home_city",
      "=",
      "'Hartford",
      "'",
      "AND",
      "age",
      "<",
      "40"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "where",
      "home_city",
      "=",
      "value",
      "and",
      "age",
      "<",
      "value"
    ],
    "question": "List names for drivers from Hartford city and younger than 40.",
    "question_toks": [
      "List",
      "names",
      "for",
      "drivers",
      "from",
      "Hartford",
      "city",
      "and",
      "younger",
      "than",
      "40",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "driver",
      "AS",
      "t1",
      "JOIN",
      "school_bus",
      "AS",
      "t2",
      "ON",
      "t1.driver_id",
      "=",
      "t2.driver_id",
      "ORDER",
      "BY",
      "years_working",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "driver",
      "as",
      "t1",
      "join",
      "school_bus",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "driver_id",
      "=",
      "t2",
      ".",
      "driver_id",
      "order",
      "by",
      "years_working",
      "desc",
      "limit",
      "value"
    ],
    "question": "find the name of driver who is driving the school bus with the longest working history.",
    "question_toks": [
      "find",
      "the",
      "name",
      "of",
      "driver",
      "who",
      "is",
      "driving",
      "the",
      "school",
      "bus",
      "with",
      "the",
      "longest",
      "working",
      "history",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) FROM flight WHERE velocity  >  200",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "velocity",
      ">",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "velocity",
      ">",
      "value"
    ],
    "question": "How many flights have a velocity larger than 200?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "velocity",
      "larger",
      "than",
      "200",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC",
    "query_toks": [
      "SELECT",
      "vehicle_flight_number",
      ",",
      "date",
      ",",
      "pilot",
      "FROM",
      "flight",
      "ORDER",
      "BY",
      "altitude",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_flight_number",
      ",",
      "date",
      ",",
      "pilot",
      "from",
      "flight",
      "order",
      "by",
      "altitude",
      "asc"
    ],
    "question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.",
    "question_toks": [
      "List",
      "the",
      "vehicle",
      "flight",
      "number",
      ",",
      "date",
      "and",
      "pilot",
      "of",
      "all",
      "the",
      "flights",
      ",",
      "ordered",
      "by",
      "altitude",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name",
    "query_toks": [
      "SELECT",
      "id",
      ",",
      "country",
      ",",
      "city",
      ",",
      "name",
      "FROM",
      "airport",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      ",",
      "country",
      ",",
      "city",
      ",",
      "name",
      "from",
      "airport",
      "order",
      "by",
      "name"
    ],
    "question": "List the id, country, city and name of the airports ordered alphabetically by the name.",
    "question_toks": [
      "List",
      "the",
      "id",
      ",",
      "country",
      ",",
      "city",
      "and",
      "name",
      "of",
      "the",
      "airports",
      "ordered",
      "alphabetically",
      "by",
      "the",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT max(group_equity_shareholding) FROM operate_company",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "FROM",
      "operate_company"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "from",
      "operate_company"
    ],
    "question": "What is maximum group equity shareholding of the companies?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      "group",
      "equity",
      "shareholding",
      "of",
      "the",
      "companies",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "velocity",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "pilot",
      "=",
      "'Thompson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "velocity",
      ")",
      "from",
      "flight",
      "where",
      "pilot",
      "=",
      "value"
    ],
    "question": "What is the velocity of the pilot named 'Thompson'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "velocity",
      "of",
      "the",
      "pilot",
      "named",
      "'Thompson",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Thompson\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.type",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "type",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id"
    ],
    "question": "What are the names and types of the companies that have ever operated a flight?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "types",
      "of",
      "the",
      "companies",
      "that",
      "have",
      "ever",
      "operated",
      "a",
      "flight",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE country != 'Iceland'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "country",
      "!",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the airports which are not in the country 'Iceland'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "which",
      "are",
      "not",
      "in",
      "the",
      "country",
      "'Iceland",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.type",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id",
      "WHERE",
      "T2.velocity",
      "<",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "type",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id",
      "where",
      "t2",
      ".",
      "velocity",
      "<",
      "value"
    ],
    "question": "What are the distinct types of the companies that have operated any flights with velocity less than 200?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "types",
      "of",
      "the",
      "companies",
      "that",
      "have",
      "operated",
      "any",
      "flights",
      "with",
      "velocity",
      "less",
      "than",
      "200",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id",
      "GROUP",
      "BY",
      "T1.id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the ids and names of the companies that operated more than one flight?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "the",
      "companies",
      "that",
      "operated",
      "more",
      "than",
      "one",
      "flight",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      ",",
      "T1.IATA",
      "FROM",
      "airport",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.airport_id",
      "GROUP",
      "BY",
      "T2.id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "iata",
      "from",
      "airport",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "airport_id",
      "group",
      "by",
      "t2",
      ".",
      "id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id, name and IATA code of the airport that had most number of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      ",",
      "name",
      "and",
      "IATA",
      "code",
      "of",
      "the",
      "airport",
      "that",
      "had",
      "most",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.pilot",
      "FROM",
      "airport",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.airport_id",
      "WHERE",
      "T1.country",
      "=",
      "'United",
      "States",
      "'",
      "OR",
      "T1.name",
      "=",
      "'Billund",
      "Airport",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "pilot",
      "from",
      "airport",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "airport_id",
      "where",
      "t1",
      ".",
      "country",
      "=",
      "value",
      "or",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "pilot",
      "names",
      "who",
      "had",
      "piloted",
      "a",
      "flight",
      "in",
      "the",
      "country",
      "'United",
      "States",
      "'",
      "or",
      "in",
      "the",
      "airport",
      "named",
      "'Billund",
      "Airport",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Billund Airport\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "TYPE",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "operate_company",
      "GROUP",
      "BY",
      "TYPE",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "operate_company",
      "group",
      "by",
      "type",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most common company type, and how many are there?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "company",
      "type",
      ",",
      "and",
      "how",
      "many",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "airport_id",
      "FROM",
      "flight",
      "WHERE",
      "pilot",
      "=",
      "'Thompson",
      "'",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airport",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "airport_id",
      "from",
      "flight",
      "where",
      "pilot",
      "=",
      "value",
      ")"
    ],
    "question": "How many airports haven't the pilot 'Thompson' driven an aircraft?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "have",
      "n't",
      "the",
      "pilot",
      "'Thompson",
      "'",
      "driven",
      "an",
      "aircraft",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      19,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                "\"Thompson\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'",
    "query_toks": [
      "SELECT",
      "T2.pilot",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id",
      "WHERE",
      "T1.principal_activities",
      "=",
      "'Cargo",
      "'",
      "INTERSECT",
      "SELECT",
      "T2.pilot",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id",
      "WHERE",
      "T1.principal_activities",
      "=",
      "'Catering",
      "services",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "pilot",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id",
      "where",
      "t1",
      ".",
      "principal_activities",
      "=",
      "value",
      "intersect",
      "select",
      "t2",
      ".",
      "pilot",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id",
      "where",
      "t1",
      ".",
      "principal_activities",
      "=",
      "value"
    ],
    "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "pilots",
      "who",
      "have",
      "flied",
      "for",
      "both",
      "a",
      "company",
      "that",
      "mainly",
      "provide",
      "'Cargo",
      "'",
      "services",
      "and",
      "a",
      "company",
      "that",
      "runs",
      "'Catering",
      "services",
      "'",
      "activities",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  16,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            "\"Catering services\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Cargo\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE name LIKE '%international%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "international",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the airport names contains the word 'international'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "airport",
      "names",
      "contains",
      "the",
      "word",
      "'international",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%international%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id",
    "query_toks": [
      "SELECT",
      "T3.id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "operate_company",
      "AS",
      "T1",
      "JOIN",
      "flight",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.company_id",
      "JOIN",
      "airport",
      "AS",
      "T3",
      "ON",
      "T2.airport_id",
      "=",
      "T3.id",
      "GROUP",
      "BY",
      "T3.id"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "operate_company",
      "as",
      "t1",
      "join",
      "flight",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "company_id",
      "join",
      "airport",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "airport_id",
      "=",
      "t3",
      ".",
      "id",
      "group",
      "by",
      "t3",
      ".",
      "id"
    ],
    "question": "How many companies operates airlines in each airport?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "operates",
      "airlines",
      "in",
      "each",
      "airport",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) ,  country FROM airport GROUP BY country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "airport",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "airport",
      "group",
      "by",
      "country"
    ],
    "question": "how many airports are there in each country?",
    "question_toks": [
      "how",
      "many",
      "airports",
      "are",
      "there",
      "in",
      "each",
      "country",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airport",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airport",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "which countries have more than 2 airports?",
    "question_toks": [
      "which",
      "countries",
      "have",
      "more",
      "than",
      "2",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "pilot",
      "FROM",
      "flight",
      "GROUP",
      "BY",
      "pilot",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "pilot",
      "from",
      "flight",
      "group",
      "by",
      "pilot",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "which pilot is in charge of the most number of flights?",
    "question_toks": [
      "which",
      "pilot",
      "is",
      "in",
      "charge",
      "of",
      "the",
      "most",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT account_id ,  account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "account_details",
      "from",
      "accounts"
    ],
    "question": "Show all account ids and account details.",
    "question_toks": [
      "Show",
      "all",
      "account",
      "ids",
      "and",
      "account",
      "details",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT account_id ,  account_details FROM Accounts",
    "query_toks": [
      "SELECT",
      "account_id",
      ",",
      "account_details",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "account_id",
      ",",
      "account_details",
      "from",
      "accounts"
    ],
    "question": "What are the ids and details of all accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "of",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "How many statements do we have?",
    "question_toks": [
      "How",
      "many",
      "statements",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "Count the number of statements.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "statements",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "statement_details",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "statement_details",
      "from",
      "statements"
    ],
    "question": "List all statement ids and statement details.",
    "question_toks": [
      "List",
      "all",
      "statement",
      "ids",
      "and",
      "statement",
      "details",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "statement_details",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "statement_details",
      "from",
      "statements"
    ],
    "question": "What are the ids and details of all statements?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "of",
      "all",
      "statements",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id",
    "query_toks": [
      "SELECT",
      "T1.statement_id",
      ",",
      "T2.statement_details",
      ",",
      "T1.account_details",
      "FROM",
      "Accounts",
      "AS",
      "T1",
      "JOIN",
      "Statements",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.statement_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_id",
      ",",
      "t2",
      ".",
      "statement_details",
      ",",
      "t1",
      ".",
      "account_details",
      "from",
      "accounts",
      "as",
      "t1",
      "join",
      "statements",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "statement_id"
    ],
    "question": "Show statement id, statement detail, account detail for accounts.",
    "question_toks": [
      "Show",
      "statement",
      "id",
      ",",
      "statement",
      "detail",
      ",",
      "account",
      "detail",
      "for",
      "accounts",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id",
    "query_toks": [
      "SELECT",
      "T1.statement_id",
      ",",
      "T2.statement_details",
      ",",
      "T1.account_details",
      "FROM",
      "Accounts",
      "AS",
      "T1",
      "JOIN",
      "Statements",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.statement_id"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_id",
      ",",
      "t2",
      ".",
      "statement_details",
      ",",
      "t1",
      ".",
      "account_details",
      "from",
      "accounts",
      "as",
      "t1",
      "join",
      "statements",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "statement_id"
    ],
    "question": "What are the statement ids, statement details, and account details, for all accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "statement",
      "ids",
      ",",
      "statement",
      "details",
      ",",
      "and",
      "account",
      "details",
      ",",
      "for",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts",
      "GROUP",
      "BY",
      "STATEMENT_ID"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts",
      "group",
      "by",
      "statement_id"
    ],
    "question": "Show all statement id and the number of accounts for each statement.",
    "question_toks": [
      "Show",
      "all",
      "statement",
      "id",
      "and",
      "the",
      "number",
      "of",
      "accounts",
      "for",
      "each",
      "statement",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID",
    "query_toks": [
      "SELECT",
      "STATEMENT_ID",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts",
      "GROUP",
      "BY",
      "STATEMENT_ID"
    ],
    "query_toks_no_value": [
      "select",
      "statement_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts",
      "group",
      "by",
      "statement_id"
    ],
    "question": "What are the different statement ids on accounts, and the number of accounts for each?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "statement",
      "ids",
      "on",
      "accounts",
      ",",
      "and",
      "the",
      "number",
      "of",
      "accounts",
      "for",
      "each",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.statement_id",
      ",",
      "T2.statement_details",
      "FROM",
      "Accounts",
      "AS",
      "T1",
      "JOIN",
      "Statements",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.statement_id",
      "GROUP",
      "BY",
      "T1.statement_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_id",
      ",",
      "t2",
      ".",
      "statement_details",
      "from",
      "accounts",
      "as",
      "t1",
      "join",
      "statements",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "statement_id",
      "group",
      "by",
      "t1",
      ".",
      "statement_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the statement id and the statement detail for the statement with most number of accounts.",
    "question_toks": [
      "Show",
      "the",
      "statement",
      "id",
      "and",
      "the",
      "statement",
      "detail",
      "for",
      "the",
      "statement",
      "with",
      "most",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.statement_id",
      ",",
      "T2.statement_details",
      "FROM",
      "Accounts",
      "AS",
      "T1",
      "JOIN",
      "Statements",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.statement_id",
      "GROUP",
      "BY",
      "T1.statement_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_id",
      ",",
      "t2",
      ".",
      "statement_details",
      "from",
      "accounts",
      "as",
      "t1",
      "join",
      "statements",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "statement_id",
      "group",
      "by",
      "t1",
      ".",
      "statement_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "statement",
      "id",
      "and",
      "statement",
      "detail",
      "for",
      "the",
      "statement",
      "that",
      "has",
      "the",
      "most",
      "corresponding",
      "accounts",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Show the number of documents.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Count the number of documents.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "FROM",
      "Documents",
      "WHERE",
      "document_name",
      "=",
      "'Noel",
      "CV",
      "'",
      "OR",
      "document_name",
      "=",
      "'King",
      "Book",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value",
      "or",
      "document_name",
      "=",
      "value"
    ],
    "question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.",
    "question_toks": [
      "List",
      "the",
      "document",
      "type",
      "code",
      ",",
      "document",
      "name",
      ",",
      "and",
      "document",
      "description",
      "for",
      "the",
      "document",
      "with",
      "name",
      "'Noel",
      "CV",
      "'",
      "or",
      "name",
      "'King",
      "Book",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Noel CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "FROM",
      "Documents",
      "WHERE",
      "document_name",
      "=",
      "'Noel",
      "CV",
      "'",
      "OR",
      "document_name",
      "=",
      "'King",
      "Book",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_name",
      ",",
      "document_description",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value",
      "or",
      "document_name",
      "=",
      "value"
    ],
    "question": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "type",
      "come",
      ",",
      "name",
      ",",
      "and",
      "description",
      "of",
      "the",
      "document",
      "that",
      "has",
      "either",
      "the",
      "name",
      "'Noel",
      "CV",
      "'",
      "or",
      "'King",
      "Book",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Noel CV\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id ,  document_name FROM Documents",
    "query_toks": [
      "SELECT",
      "document_id",
      ",",
      "document_name",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      ",",
      "document_name",
      "from",
      "documents"
    ],
    "question": "Show the ids and names of all documents.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "all",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id ,  document_name FROM Documents",
    "query_toks": [
      "SELECT",
      "document_id",
      ",",
      "document_name",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      ",",
      "document_name",
      "from",
      "documents"
    ],
    "question": "What are the ids and names for each of the documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "for",
      "each",
      "of",
      "the",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "Find names and ids of all documents with document type code BK.",
    "question_toks": [
      "Find",
      "names",
      "and",
      "ids",
      "of",
      "all",
      "documents",
      "with",
      "document",
      "type",
      "code",
      "BK",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "What are the names and ids of documents that have the type code BK?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "ids",
      "of",
      "documents",
      "that",
      "have",
      "the",
      "type",
      "code",
      "BK",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "project_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''",
      "GROUP",
      "BY",
      "project_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "project_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "group",
      "by",
      "project_id"
    ],
    "question": "How many documents are with document type code BK for each product id?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "are",
      "with",
      "document",
      "type",
      "code",
      "BK",
      "for",
      "each",
      "product",
      "id",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "project_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "BK",
      "''",
      "GROUP",
      "BY",
      "project_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "project_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "group",
      "by",
      "project_id"
    ],
    "question": "Count the number of documents with the type code BK that correspond to each product id.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "with",
      "the",
      "type",
      "code",
      "BK",
      "that",
      "correspond",
      "to",
      "each",
      "product",
      "id",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"BK\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "WHERE",
      "T2.project_details",
      "=",
      "'Graph",
      "Database",
      "project",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "where",
      "t2",
      ".",
      "project_details",
      "=",
      "value"
    ],
    "question": "Show the document name and the document date for all documents on project with details 'Graph Database project'.",
    "question_toks": [
      "Show",
      "the",
      "document",
      "name",
      "and",
      "the",
      "document",
      "date",
      "for",
      "all",
      "documents",
      "on",
      "project",
      "with",
      "details",
      "'Graph",
      "Database",
      "project",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Graph Database project\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
    "query_toks": [
      "SELECT",
      "document_name",
      ",",
      "document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "WHERE",
      "T2.project_details",
      "=",
      "'Graph",
      "Database",
      "project",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      ",",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "where",
      "t2",
      ".",
      "project_details",
      "=",
      "value"
    ],
    "question": "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "dates",
      "for",
      "documents",
      "corresponding",
      "to",
      "project",
      "that",
      "has",
      "the",
      "details",
      "'Graph",
      "Database",
      "project",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Graph Database project\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "group",
      "by",
      "project_id"
    ],
    "question": "Show project ids and the number of documents in each project.",
    "question_toks": [
      "Show",
      "project",
      "ids",
      "and",
      "the",
      "number",
      "of",
      "documents",
      "in",
      "each",
      "project",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "group",
      "by",
      "project_id"
    ],
    "question": "How many documents correspond with each project id?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "correspond",
      "with",
      "each",
      "project",
      "id",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the id of the project with least number of documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "project",
      "with",
      "least",
      "number",
      "of",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the id of the project that has the fewest corresponding documents.",
    "question_toks": [
      "Return",
      "the",
      "id",
      "of",
      "the",
      "project",
      "that",
      "has",
      "the",
      "fewest",
      "corresponding",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the ids for projects with at least 2 documents.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "for",
      "projects",
      "with",
      "at",
      "least",
      "2",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are project ids of projects that have 2 or more corresponding documents?",
    "question_toks": [
      "What",
      "are",
      "project",
      "ids",
      "of",
      "projects",
      "that",
      "have",
      "2",
      "or",
      "more",
      "corresponding",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code"
    ],
    "question": "List document type codes and the number of documents in each code.",
    "question_toks": [
      "List",
      "document",
      "type",
      "codes",
      "and",
      "the",
      "number",
      "of",
      "documents",
      "in",
      "each",
      "code",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code"
    ],
    "question": "How many documents are there of each type?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "are",
      "there",
      "of",
      "each",
      "type",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the document type code with most number of documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "code",
      "with",
      "most",
      "number",
      "of",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the code of the document type that is most common.",
    "question_toks": [
      "Return",
      "the",
      "code",
      "of",
      "the",
      "document",
      "type",
      "that",
      "is",
      "most",
      "common",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "Show the document type code with fewer than 3 documents.",
    "question_toks": [
      "Show",
      "the",
      "document",
      "type",
      "code",
      "with",
      "fewer",
      "than",
      "3",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "What are the codes corresponding to document types for which there are less than 3 documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "corresponding",
      "to",
      "document",
      "types",
      "for",
      "which",
      "there",
      "are",
      "less",
      "than",
      "3",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
    "query_toks": [
      "SELECT",
      "T1.statement_details",
      ",",
      "T2.document_name",
      "FROM",
      "Statements",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T1.statement_details",
      "=",
      "'Private",
      "Project",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_details",
      ",",
      "t2",
      ".",
      "document_name",
      "from",
      "statements",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t1",
      ".",
      "statement_details",
      "=",
      "value"
    ],
    "question": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.",
    "question_toks": [
      "Show",
      "the",
      "statement",
      "detail",
      "and",
      "the",
      "corresponding",
      "document",
      "name",
      "for",
      "the",
      "statement",
      "with",
      "detail",
      "'Private",
      "Project",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Private Project\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
    "query_toks": [
      "SELECT",
      "T1.statement_details",
      ",",
      "T2.document_name",
      "FROM",
      "Statements",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.statement_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T1.statement_details",
      "=",
      "'Private",
      "Project",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "statement_details",
      ",",
      "t2",
      ".",
      "document_name",
      "from",
      "statements",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "statement_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t1",
      ".",
      "statement_details",
      "=",
      "value"
    ],
    "question": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "for",
      "statements",
      "with",
      "the",
      "details",
      "'Private",
      "Project",
      "'",
      ",",
      "and",
      "what",
      "are",
      "the",
      "names",
      "of",
      "the",
      "corresponding",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Private Project\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types"
    ],
    "question": "Show all document type codes, document type names, document type descriptions.",
    "question_toks": [
      "Show",
      "all",
      "document",
      "type",
      "codes",
      ",",
      "document",
      "type",
      "names",
      ",",
      "document",
      "type",
      "descriptions",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      ",",
      "document_type_name",
      ",",
      "document_type_description",
      "from",
      "ref_document_types"
    ],
    "question": "What are the codes, names, and descriptions of the different document types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      ",",
      "names",
      ",",
      "and",
      "descriptions",
      "of",
      "the",
      "different",
      "document",
      "types",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "What is the document type description for document type named Film?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "description",
      "for",
      "document",
      "type",
      "named",
      "Film",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "Return the description of the document type name 'Film'.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "document",
      "type",
      "name",
      "'Film",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",
    "query_toks": [
      "SELECT",
      "T1.document_type_name",
      ",",
      "T1.document_type_description",
      ",",
      "T2.Document_date",
      "FROM",
      "Ref_document_types",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_type_code",
      "=",
      "T2.document_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_type_name",
      ",",
      "t1",
      ".",
      "document_type_description",
      ",",
      "t2",
      ".",
      "document_date",
      "from",
      "ref_document_types",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_type_code",
      "=",
      "t2",
      ".",
      "document_type_code"
    ],
    "question": "What is the document type name and the document type description and creation date for all the documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "name",
      "and",
      "the",
      "document",
      "type",
      "description",
      "and",
      "creation",
      "date",
      "for",
      "all",
      "the",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",
    "query_toks": [
      "SELECT",
      "T1.document_type_name",
      ",",
      "T1.document_type_description",
      ",",
      "T2.Document_date",
      "FROM",
      "Ref_document_types",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.document_type_code",
      "=",
      "T2.document_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_type_name",
      ",",
      "t1",
      ".",
      "document_type_description",
      ",",
      "t2",
      ".",
      "document_date",
      "from",
      "ref_document_types",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_type_code",
      "=",
      "t2",
      ".",
      "document_type_code"
    ],
    "question": "Return the type name, type description, and date of creation for each document.",
    "question_toks": [
      "Return",
      "the",
      "type",
      "name",
      ",",
      "type",
      "description",
      ",",
      "and",
      "date",
      "of",
      "creation",
      "for",
      "each",
      "document",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "Show the number of projects.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "How many projects are there?",
    "question_toks": [
      "How",
      "many",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  project_details FROM Projects",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "project_details",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "project_details",
      "from",
      "projects"
    ],
    "question": "List ids and details for all projects.",
    "question_toks": [
      "List",
      "ids",
      "and",
      "details",
      "for",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id ,  project_details FROM Projects",
    "query_toks": [
      "SELECT",
      "project_id",
      ",",
      "project_details",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      ",",
      "project_details",
      "from",
      "projects"
    ],
    "question": "What are the ids and details for each project?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "details",
      "for",
      "each",
      "project",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "T1.project_id",
      ",",
      "T1.project_details",
      "FROM",
      "Projects",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "GROUP",
      "BY",
      "T1.project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "project_id",
      ",",
      "t1",
      ".",
      "project_details",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "group",
      "by",
      "t1",
      ".",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the project id and detail for the project with at least two documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "project",
      "id",
      "and",
      "detail",
      "for",
      "the",
      "project",
      "with",
      "at",
      "least",
      "two",
      "documents",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "T1.project_id",
      ",",
      "T1.project_details",
      "FROM",
      "Projects",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "GROUP",
      "BY",
      "T1.project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "project_id",
      ",",
      "t1",
      ".",
      "project_details",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "group",
      "by",
      "t1",
      ".",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Return the ids and details corresponding to projects for which there are more than two documents.",
    "question_toks": [
      "Return",
      "the",
      "ids",
      "and",
      "details",
      "corresponding",
      "to",
      "projects",
      "for",
      "which",
      "there",
      "are",
      "more",
      "than",
      "two",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
    "query_toks": [
      "SELECT",
      "T1.project_details",
      "FROM",
      "Projects",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "WHERE",
      "T2.document_name",
      "=",
      "``",
      "King",
      "Book",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "project_details",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "where",
      "t2",
      ".",
      "document_name",
      "=",
      "value"
    ],
    "question": "What is the project detail for the project with document \"King Book\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "project",
      "detail",
      "for",
      "the",
      "project",
      "with",
      "document",
      "``",
      "King",
      "Book",
      "''",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
    "query_toks": [
      "SELECT",
      "T1.project_details",
      "FROM",
      "Projects",
      "AS",
      "T1",
      "JOIN",
      "Documents",
      "AS",
      "T2",
      "ON",
      "T1.project_id",
      "=",
      "T2.project_id",
      "WHERE",
      "T2.document_name",
      "=",
      "``",
      "King",
      "Book",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "project_details",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "documents",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project_id",
      "=",
      "t2",
      ".",
      "project_id",
      "where",
      "t2",
      ".",
      "document_name",
      "=",
      "value"
    ],
    "question": "Give the details of the project with the document name 'King Book'.",
    "question_toks": [
      "Give",
      "the",
      "details",
      "of",
      "the",
      "project",
      "with",
      "the",
      "document",
      "name",
      "'King",
      "Book",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              10,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"King Book\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "How many budget types do we have?",
    "question_toks": [
      "How",
      "many",
      "budget",
      "types",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "Count the number of budget codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "budget",
      "codes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "budget_type_description",
      "from",
      "ref_budget_codes"
    ],
    "question": "List all budget type codes and descriptions.",
    "question_toks": [
      "List",
      "all",
      "budget",
      "type",
      "codes",
      "and",
      "descriptions",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "budget_type_description",
      "from",
      "ref_budget_codes"
    ],
    "question": "What are the type codes and descriptions of each budget type?",
    "question_toks": [
      "What",
      "are",
      "the",
      "type",
      "codes",
      "and",
      "descriptions",
      "of",
      "each",
      "budget",
      "type",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What is the description for the budget type with code ORG?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "budget",
      "type",
      "with",
      "code",
      "ORG",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Return the description of the budget type that has the code ORG.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "budget",
      "type",
      "that",
      "has",
      "the",
      "code",
      "ORG",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "How many documents have expenses?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "expenses",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "Count the number of documents with expenses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "with",
      "expenses",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What are the document ids for the budget type code 'SF'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "document",
      "ids",
      "for",
      "the",
      "budget",
      "type",
      "code",
      "'SF",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "of",
      "documents",
      "with",
      "expenses",
      "that",
      "have",
      "the",
      "budget",
      "code",
      "'SF",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code",
    "query_toks": [
      "SELECT",
      "T2.budget_type_code",
      ",",
      "T2.budget_type_description",
      ",",
      "T1.document_id",
      "FROM",
      "Documents_with_expenses",
      "AS",
      "T1",
      "JOIN",
      "Ref_budget_codes",
      "AS",
      "T2",
      "ON",
      "T1.budget_type_code",
      "=",
      "T2.budget_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "budget_type_code",
      ",",
      "t2",
      ".",
      "budget_type_description",
      ",",
      "t1",
      ".",
      "document_id",
      "from",
      "documents_with_expenses",
      "as",
      "t1",
      "join",
      "ref_budget_codes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "budget_type_code",
      "=",
      "t2",
      ".",
      "budget_type_code"
    ],
    "question": "Show the budget type code and description and the corresponding document id.",
    "question_toks": [
      "Show",
      "the",
      "budget",
      "type",
      "code",
      "and",
      "description",
      "and",
      "the",
      "corresponding",
      "document",
      "id",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code",
    "query_toks": [
      "SELECT",
      "T2.budget_type_code",
      ",",
      "T2.budget_type_description",
      ",",
      "T1.document_id",
      "FROM",
      "Documents_with_expenses",
      "AS",
      "T1",
      "JOIN",
      "Ref_budget_codes",
      "AS",
      "T2",
      "ON",
      "T1.budget_type_code",
      "=",
      "T2.budget_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "budget_type_code",
      ",",
      "t2",
      ".",
      "budget_type_description",
      ",",
      "t1",
      ".",
      "document_id",
      "from",
      "documents_with_expenses",
      "as",
      "t1",
      "join",
      "ref_budget_codes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "budget_type_code",
      "=",
      "t2",
      ".",
      "budget_type_code"
    ],
    "question": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.",
    "question_toks": [
      "Return",
      "the",
      "budget",
      "type",
      "codes",
      ",",
      "budget",
      "type",
      "descriptions",
      "and",
      "document",
      "ids",
      "for",
      "documents",
      "with",
      "expenses",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      "FROM",
      "Documents_with_expenses",
      "AS",
      "T1",
      "JOIN",
      "Ref_Budget_Codes",
      "AS",
      "T2",
      "ON",
      "T1.Budget_Type_code",
      "=",
      "T2.Budget_Type_code",
      "WHERE",
      "T2.budget_type_Description",
      "=",
      "``",
      "Government",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      "from",
      "documents_with_expenses",
      "as",
      "t1",
      "join",
      "ref_budget_codes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "budget_type_code",
      "=",
      "t2",
      ".",
      "budget_type_code",
      "where",
      "t2",
      ".",
      "budget_type_description",
      "=",
      "value"
    ],
    "question": "Show ids for all documents with budget types described as 'Government'.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "documents",
      "with",
      "budget",
      "types",
      "described",
      "as",
      "'Government",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Government\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      "FROM",
      "Documents_with_expenses",
      "AS",
      "T1",
      "JOIN",
      "Ref_Budget_Codes",
      "AS",
      "T2",
      "ON",
      "T1.Budget_Type_code",
      "=",
      "T2.Budget_Type_code",
      "WHERE",
      "T2.budget_type_Description",
      "=",
      "``",
      "Government",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      "from",
      "documents_with_expenses",
      "as",
      "t1",
      "join",
      "ref_budget_codes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "budget_type_code",
      "=",
      "t2",
      ".",
      "budget_type_code",
      "where",
      "t2",
      ".",
      "budget_type_description",
      "=",
      "value"
    ],
    "question": "Give the ids for documents that have the budget description 'Government'.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "for",
      "documents",
      "that",
      "have",
      "the",
      "budget",
      "description",
      "'Government",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Government\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses",
      "GROUP",
      "BY",
      "budget_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses",
      "group",
      "by",
      "budget_type_code"
    ],
    "question": "Show budget type codes and the number of documents in each budget type.",
    "question_toks": [
      "Show",
      "budget",
      "type",
      "codes",
      "and",
      "the",
      "number",
      "of",
      "documents",
      "in",
      "each",
      "budget",
      "type",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses",
      "GROUP",
      "BY",
      "budget_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses",
      "group",
      "by",
      "budget_type_code"
    ],
    "question": "What are the different budget type codes, and how many documents are there for each?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "budget",
      "type",
      "codes",
      ",",
      "and",
      "how",
      "many",
      "documents",
      "are",
      "there",
      "for",
      "each",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      "FROM",
      "Documents_with_expenses",
      "GROUP",
      "BY",
      "budget_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      "from",
      "documents_with_expenses",
      "group",
      "by",
      "budget_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the budget type code with most number of documents.",
    "question_toks": [
      "What",
      "is",
      "the",
      "budget",
      "type",
      "code",
      "with",
      "most",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "budget_type_code",
      "FROM",
      "Documents_with_expenses",
      "GROUP",
      "BY",
      "budget_type_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_code",
      "from",
      "documents_with_expenses",
      "group",
      "by",
      "budget_type_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give the budget type code that is most common among documents with expenses.",
    "question_toks": [
      "Give",
      "the",
      "budget",
      "type",
      "code",
      "that",
      "is",
      "most",
      "common",
      "among",
      "documents",
      "with",
      "expenses",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "What are the ids of documents which don't have expense budgets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "documents",
      "which",
      "do",
      "n't",
      "have",
      "expense",
      "budgets",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "Return the ids of documents that do not have expenses.",
    "question_toks": [
      "Return",
      "the",
      "ids",
      "of",
      "documents",
      "that",
      "do",
      "not",
      "have",
      "expenses",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "CV",
      "''",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "Show ids for all documents in type CV without expense budgets.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "documents",
      "in",
      "type",
      "CV",
      "without",
      "expense",
      "budgets",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "CV",
      "''",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "where",
      "document_type_code",
      "=",
      "value",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "What are the ids of documents with the type code CV that do not have expenses.",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "documents",
      "with",
      "the",
      "type",
      "code",
      "CV",
      "that",
      "do",
      "not",
      "have",
      "expenses",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T1.document_name",
      "LIKE",
      "'",
      "%",
      "s",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t1",
      ".",
      "document_name",
      "like",
      "value"
    ],
    "question": "What are the ids of documents with letter 's' in the name with any expense budgets.",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "documents",
      "with",
      "letter",
      "'s",
      "'",
      "in",
      "the",
      "name",
      "with",
      "any",
      "expense",
      "budgets",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%s%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
    "query_toks": [
      "SELECT",
      "T1.document_id",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T1.document_name",
      "LIKE",
      "'",
      "%",
      "s",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_id",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t1",
      ".",
      "document_name",
      "like",
      "value"
    ],
    "question": "Give the ids of documents that have expenses and contain the letter s in their names.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "of",
      "documents",
      "that",
      "have",
      "expenses",
      "and",
      "contain",
      "the",
      "letter",
      "s",
      "in",
      "their",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%s%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_id",
      "not",
      "in",
      "(",
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      ")"
    ],
    "question": "How many documents do not have any expense?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "do",
      "not",
      "have",
      "any",
      "expense",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_id",
      "not",
      "in",
      "(",
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      ")"
    ],
    "question": "Count the number of documents that do not have expenses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "that",
      "do",
      "not",
      "have",
      "expenses",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "T1.document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_Expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T2.budget_type_code",
      "=",
      "'GV",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_Expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T2.budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t2",
      ".",
      "budget_type_code",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t2",
      ".",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "for",
      "the",
      "documents",
      "with",
      "both",
      "'GV",
      "'",
      "type",
      "and",
      "'SF",
      "'",
      "type",
      "expenses",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  8,
                  false
                ],
                null
              ],
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            "\"SF\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"GV\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "T1.document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_Expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T2.budget_type_code",
      "=",
      "'GV",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.document_date",
      "FROM",
      "Documents",
      "AS",
      "T1",
      "JOIN",
      "Documents_with_Expenses",
      "AS",
      "T2",
      "ON",
      "T1.document_id",
      "=",
      "T2.document_id",
      "WHERE",
      "T2.budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t2",
      ".",
      "budget_type_code",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "document_date",
      "from",
      "documents",
      "as",
      "t1",
      "join",
      "documents_with_expenses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "document_id",
      "=",
      "t2",
      ".",
      "document_id",
      "where",
      "t2",
      ".",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'.",
    "question_toks": [
      "Give",
      "the",
      "dates",
      "of",
      "creation",
      "for",
      "documents",
      "that",
      "have",
      "both",
      "budget",
      "type",
      "codes",
      "'GV",
      "'",
      "and",
      "'SF",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  8,
                  false
                ],
                null
              ],
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              3
            ],
            [
              "table_unit",
              5
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            "\"SF\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"GV\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Account_details",
      ")",
      "FROM",
      "Accounts",
      "UNION",
      "SELECT",
      "Account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "Account_details",
      "LIKE",
      "``",
      "%",
      "5",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "account_details",
      ")",
      "from",
      "accounts",
      "union",
      "select",
      "account_details",
      "from",
      "accounts",
      "where",
      "account_details",
      "like",
      "value"
    ],
    "question": "What are the account details with the largest value or with value having char '5' in it?",
    "question_toks": [
      "What",
      "are",
      "the",
      "account",
      "details",
      "with",
      "the",
      "largest",
      "value",
      "or",
      "with",
      "value",
      "having",
      "char",
      "'5",
      "'",
      "in",
      "it",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              6
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  22,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            9,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            "\"%5%\"",
            null
          ]
        ]
      },
      "where": []
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Account_details",
      ")",
      "FROM",
      "Accounts",
      "UNION",
      "SELECT",
      "Account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "Account_details",
      "LIKE",
      "``",
      "%",
      "5",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "account_details",
      ")",
      "from",
      "accounts",
      "union",
      "select",
      "account_details",
      "from",
      "accounts",
      "where",
      "account_details",
      "like",
      "value"
    ],
    "question": "Return the account details with the greatest value, as well as those that include the character 5.",
    "question_toks": [
      "Return",
      "the",
      "account",
      "details",
      "with",
      "the",
      "greatest",
      "value",
      ",",
      "as",
      "well",
      "as",
      "those",
      "that",
      "include",
      "the",
      "character",
      "5",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              6
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  22,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            9,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            "\"%5%\"",
            null
          ]
        ]
      },
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "Find the total number of scientists.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "scientists",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "How many scientists are there?",
    "question_toks": [
      "How",
      "many",
      "scientists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the total hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the total number of hours for all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "hours",
      "for",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "How many different scientists are assigned to any project?",
    "question_toks": [
      "How",
      "many",
      "different",
      "scientists",
      "are",
      "assigned",
      "to",
      "any",
      "project",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "Count the number of different scientists assigned to any project.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "scientists",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the number of distinct projects.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "How many different projects are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the average hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the average hours across all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "hours",
      "across",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "ORDER",
      "BY",
      "hours",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "order",
      "by",
      "hours",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of project that continues for the longest time.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "project",
      "that",
      "continues",
      "for",
      "the",
      "longest",
      "time",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "ORDER",
      "BY",
      "hours",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "order",
      "by",
      "hours",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the project with the most hours?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "project",
      "with",
      "the",
      "most",
      "hours",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "List the name of all projects that are operated longer than the average working hours of all projects.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "projects",
      "that",
      "are",
      "operated",
      "longer",
      "than",
      "the",
      "average",
      "working",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      ">",
      "(",
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      ">",
      "(",
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "What are the names of projects that have taken longer than the average number of hours for all projects?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "have",
      "taken",
      "longer",
      "than",
      "the",
      "average",
      "number",
      "of",
      "hours",
      "for",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  5,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.hours",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "GROUP",
      "BY",
      "T2.project",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "hours",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "group",
      "by",
      "t2",
      ".",
      "project",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name and hours of project that has the most number of scientists.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "hours",
      "of",
      "project",
      "that",
      "has",
      "the",
      "most",
      "number",
      "of",
      "scientists",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.hours",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "GROUP",
      "BY",
      "T2.project",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "hours",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "group",
      "by",
      "t2",
      ".",
      "project",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and hours for the project which has the most scientists assigned to it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "hours",
      "for",
      "the",
      "project",
      "which",
      "has",
      "the",
      "most",
      "scientists",
      "assigned",
      "to",
      "it",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T3.name",
      "LIKE",
      "'",
      "%",
      "Smith",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t3",
      ".",
      "name",
      "like",
      "value"
    ],
    "question": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "project",
      "for",
      "which",
      "a",
      "scientist",
      "whose",
      "name",
      "contains",
      "\u2018Smith\u2019",
      "is",
      "assigned",
      "to",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Smith%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T3.name",
      "LIKE",
      "'",
      "%",
      "Smith",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t3",
      ".",
      "name",
      "like",
      "value"
    ],
    "question": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "project",
      "that",
      "has",
      "a",
      "scientist",
      "assigned",
      "to",
      "it",
      "whose",
      "name",
      "contains",
      "'Smith",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Smith%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T2.hours",
      ")",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T3.name",
      "=",
      "'Michael",
      "Rogers",
      "'",
      "OR",
      "T3.name",
      "=",
      "'Carol",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "hours",
      ")",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "hours",
      "of",
      "the",
      "projects",
      "that",
      "scientists",
      "named",
      "Michael",
      "Rogers",
      "or",
      "Carol",
      "Smith",
      "are",
      "assigned",
      "to",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Michael Rogers\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Carol Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T2.hours",
      ")",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T3.name",
      "=",
      "'Michael",
      "Rogers",
      "'",
      "OR",
      "T3.name",
      "=",
      "'Carol",
      "Smith",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "hours",
      ")",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "sum",
      "of",
      "hours",
      "for",
      "projects",
      "that",
      "scientists",
      "with",
      "the",
      "name",
      "Michael",
      "Rogers",
      "or",
      "Carol",
      "Smith",
      "are",
      "assigned",
      "to",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Michael Rogers\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Carol Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      "BETWEEN",
      "100",
      "AND",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of projects that require between 100 and 300 hours of work.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "projects",
      "that",
      "require",
      "between",
      "100",
      "and",
      "300",
      "hours",
      "of",
      "work",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          300.0
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "WHERE",
      "hours",
      "BETWEEN",
      "100",
      "AND",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "hours",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of projects that require between 100 and 300 hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "require",
      "between",
      "100",
      "and",
      "300",
      "hours",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          100.0,
          300.0
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'",
    "query_toks": [
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.name",
      "=",
      "'Matter",
      "of",
      "Time",
      "'",
      "INTERSECT",
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.name",
      "=",
      "'A",
      "Puzzling",
      "Parallax",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "intersect",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "scientist",
      "who",
      "worked",
      "on",
      "both",
      "a",
      "project",
      "named",
      "'Matter",
      "of",
      "Time",
      "'",
      "and",
      "a",
      "project",
      "named",
      "'A",
      "Puzzling",
      "Parallax",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            "\"A Puzzling Parallax\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Matter of Time\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'",
    "query_toks": [
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.name",
      "=",
      "'Matter",
      "of",
      "Time",
      "'",
      "INTERSECT",
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.name",
      "=",
      "'A",
      "Puzzling",
      "Parallax",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "intersect",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are the names of any scientists who worked on projects named 'Matter of Time' and 'A Puzzling Pattern'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "any",
      "scientists",
      "who",
      "worked",
      "on",
      "projects",
      "named",
      "'Matter",
      "of",
      "Time",
      "'",
      "and",
      "'A",
      "Puzzling",
      "Pattern",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            "\"A Puzzling Parallax\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Matter of Time\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all scientists sorted in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "scientists",
      "sorted",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names of all the scientists in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "scientists",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "Find the number of scientists involved for each project name.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "scientists",
      "involved",
      "for",
      "each",
      "project",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?",
    "question_toks": [
      "What",
      "are",
      "the",
      "naems",
      "of",
      "all",
      "the",
      "projects",
      ",",
      "and",
      "how",
      "many",
      "scientists",
      "were",
      "assigned",
      "to",
      "each",
      "of",
      "them",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "WHERE",
      "T1.hours",
      ">",
      "300",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "where",
      "t1",
      ".",
      "hours",
      ">",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "Find the number of scientists involved for the projects that require more than 300 hours.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "scientists",
      "involved",
      "for",
      "the",
      "projects",
      "that",
      "require",
      "more",
      "than",
      "300",
      "hours",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "projects",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.code",
      "=",
      "T2.project",
      "WHERE",
      "T1.hours",
      ">",
      "300",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "projects",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "code",
      "=",
      "t2",
      ".",
      "project",
      "where",
      "t1",
      ".",
      "hours",
      ">",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "require",
      "more",
      "than",
      "300",
      "hours",
      ",",
      "and",
      "how",
      "many",
      "scientists",
      "are",
      "assigned",
      "to",
      "each",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "scientists",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.ssn",
      "=",
      "T2.scientist",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "scientists",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "ssn",
      "=",
      "t2",
      ".",
      "scientist",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "Find the number of projects which each scientist is working on and scientist's name.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "projects",
      "which",
      "each",
      "scientist",
      "is",
      "working",
      "on",
      "and",
      "scientist",
      "'s",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "scientists",
      "AS",
      "T1",
      "JOIN",
      "assignedto",
      "AS",
      "T2",
      "ON",
      "T1.ssn",
      "=",
      "T2.scientist",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "scientists",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "ssn",
      "=",
      "t2",
      ".",
      "scientist",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "What are the names of the scientists, and how many projects are each of them working on?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "scientists",
      ",",
      "and",
      "how",
      "many",
      "projects",
      "are",
      "each",
      "of",
      "them",
      "working",
      "on",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "T3.ssn",
      ",",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "ssn",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "max",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "Find the SSN and name of scientists who are assigned to the project with the longest hours.",
    "question_toks": [
      "Find",
      "the",
      "SSN",
      "and",
      "name",
      "of",
      "scientists",
      "who",
      "are",
      "assigned",
      "to",
      "the",
      "project",
      "with",
      "the",
      "longest",
      "hours",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "T3.ssn",
      ",",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "ssn",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "max",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "What are the SSN and names of scientists working on the project with the most hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "SSN",
      "and",
      "names",
      "of",
      "scientists",
      "working",
      "on",
      "the",
      "project",
      "with",
      "the",
      "most",
      "hours",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "scientists",
      "AS",
      "T2",
      "ON",
      "T1.scientist",
      "=",
      "T2.ssn"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "scientists",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t2",
      ".",
      "ssn"
    ],
    "question": "Find the name of scientists who are assigned to some project.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "scientists",
      "who",
      "are",
      "assigned",
      "to",
      "some",
      "project",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "scientists",
      "AS",
      "T2",
      "ON",
      "T1.scientist",
      "=",
      "T2.ssn"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "scientists",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t2",
      ".",
      "ssn"
    ],
    "question": "What are the names of scientists who are assigned to any project?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "scientists",
      "who",
      "are",
      "assigned",
      "to",
      "any",
      "project",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Projects",
      "WHERE",
      "Code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Project",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "code",
      "not",
      "in",
      "(",
      "select",
      "project",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Select the project names which are not assigned yet.",
    "question_toks": [
      "Select",
      "the",
      "project",
      "names",
      "which",
      "are",
      "not",
      "assigned",
      "yet",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Projects",
      "WHERE",
      "Code",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "Project",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "where",
      "code",
      "not",
      "in",
      "(",
      "select",
      "project",
      "from",
      "assignedto",
      ")"
    ],
    "question": "What are the names of projects that have not been assigned?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "projects",
      "that",
      "have",
      "not",
      "been",
      "assigned",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Find the name of scientists who are not assigned to any project.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "What are the names of scientists who have not been assigned a project?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "scientists",
      "who",
      "have",
      "not",
      "been",
      "assigned",
      "a",
      "project",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "Find the number of scientists who are not assigned to any project.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists",
      "WHERE",
      "ssn",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "scientist",
      "FROM",
      "AssignedTo",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists",
      "where",
      "ssn",
      "not",
      "in",
      "(",
      "select",
      "scientist",
      "from",
      "assignedto",
      ")"
    ],
    "question": "How many scientists do not have any projects assigned to them?",
    "question_toks": [
      "How",
      "many",
      "scientists",
      "do",
      "not",
      "have",
      "any",
      "projects",
      "assigned",
      "to",
      "them",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      6,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "EXCEPT",
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "except",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "max",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "Find the names of scientists who are not working on the project with the highest hours.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "working",
      "on",
      "the",
      "project",
      "with",
      "the",
      "highest",
      "hours",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            {
              "except": null,
              "from": {
                "conds": [],
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ]
              },
              "groupBy": [],
              "having": [],
              "intersect": null,
              "limit": null,
              "orderBy": [],
              "select": [
                false,
                [
                  [
                    1,
                    [
                      0,
                      [
                        0,
                        5,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "union": null,
              "where": []
            },
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "EXCEPT",
      "SELECT",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "except",
      "select",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "max",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "What are the names of scientists who are not working on the project with the most hours?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "scientists",
      "who",
      "are",
      "not",
      "working",
      "on",
      "the",
      "project",
      "with",
      "the",
      "most",
      "hours",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ],
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            {
              "except": null,
              "from": {
                "conds": [],
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ]
              },
              "groupBy": [],
              "having": [],
              "intersect": null,
              "limit": null,
              "orderBy": [],
              "select": [
                false,
                [
                  [
                    1,
                    [
                      0,
                      [
                        0,
                        5,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "union": null,
              "where": []
            },
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "T3.Name",
      ",",
      "T3.Hours",
      "FROM",
      "Scientists",
      "AS",
      "T1",
      "JOIN",
      "AssignedTo",
      "AS",
      "T2",
      "ON",
      "T1.SSN",
      "=",
      "T2.Scientist",
      "JOIN",
      "Projects",
      "AS",
      "T3",
      "ON",
      "T2.Project",
      "=",
      "T3.Code",
      "ORDER",
      "BY",
      "T3.Name",
      ",",
      "T1.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "hours",
      "from",
      "scientists",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "ssn",
      "=",
      "t2",
      ".",
      "scientist",
      "join",
      "projects",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "project",
      "=",
      "t3",
      ".",
      "code",
      "order",
      "by",
      "t3",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "name"
    ],
    "question": "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name.",
    "question_toks": [
      "List",
      "all",
      "the",
      "scientists",
      "'",
      "names",
      ",",
      "their",
      "projects",
      "'",
      "names",
      ",",
      "and",
      "the",
      "hours",
      "worked",
      "by",
      "that",
      "scientist",
      "on",
      "each",
      "project",
      ",",
      "in",
      "alphabetical",
      "order",
      "of",
      "project",
      "name",
      ",",
      "and",
      "then",
      "scientist",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name",
    "query_toks": [
      "SELECT",
      "T1.Name",
      ",",
      "T3.Name",
      ",",
      "T3.Hours",
      "FROM",
      "Scientists",
      "AS",
      "T1",
      "JOIN",
      "AssignedTo",
      "AS",
      "T2",
      "ON",
      "T1.SSN",
      "=",
      "T2.Scientist",
      "JOIN",
      "Projects",
      "AS",
      "T3",
      "ON",
      "T2.Project",
      "=",
      "T3.Code",
      "ORDER",
      "BY",
      "T3.Name",
      ",",
      "T1.Name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "hours",
      "from",
      "scientists",
      "as",
      "t1",
      "join",
      "assignedto",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "ssn",
      "=",
      "t2",
      ".",
      "scientist",
      "join",
      "projects",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "project",
      "=",
      "t3",
      ".",
      "code",
      "order",
      "by",
      "t3",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "name"
    ],
    "question": "What are the names of each scientist, the names of the projects that they work on, and the hours for each of those projects, listed in alphabetical order by project name, then scientist name.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "each",
      "scientist",
      ",",
      "the",
      "names",
      "of",
      "the",
      "projects",
      "that",
      "they",
      "work",
      "on",
      ",",
      "and",
      "the",
      "hours",
      "for",
      "each",
      "of",
      "those",
      "projects",
      ",",
      "listed",
      "in",
      "alphabetical",
      "order",
      "by",
      "project",
      "name",
      ",",
      "then",
      "scientist",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "min",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it.",
    "question_toks": [
      "Find",
      "name",
      "of",
      "the",
      "project",
      "that",
      "needs",
      "the",
      "least",
      "amount",
      "of",
      "time",
      "to",
      "finish",
      "and",
      "the",
      "name",
      "of",
      "scientists",
      "who",
      "worked",
      "on",
      "it",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T3.name",
      "FROM",
      "assignedto",
      "AS",
      "T1",
      "JOIN",
      "projects",
      "AS",
      "T2",
      "ON",
      "T1.project",
      "=",
      "T2.code",
      "JOIN",
      "scientists",
      "AS",
      "T3",
      "ON",
      "T1.scientist",
      "=",
      "T3.SSN",
      "WHERE",
      "T2.hours",
      "=",
      "(",
      "SELECT",
      "min",
      "(",
      "hours",
      ")",
      "FROM",
      "projects",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "assignedto",
      "as",
      "t1",
      "join",
      "projects",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "project",
      "=",
      "t2",
      ".",
      "code",
      "join",
      "scientists",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "scientist",
      "=",
      "t3",
      ".",
      "ssn",
      "where",
      "t2",
      ".",
      "hours",
      "=",
      "(",
      "select",
      "min",
      "(",
      "hours",
      ")",
      "from",
      "projects",
      ")"
    ],
    "question": "What is the name of the project that requires the fewest number of hours, and the names of the scientists assigned to it?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "project",
      "that",
      "requires",
      "the",
      "fewest",
      "number",
      "of",
      "hours",
      ",",
      "and",
      "the",
      "names",
      "of",
      "the",
      "scientists",
      "assigned",
      "to",
      "it",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "What is the name of the highest rated wine?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "highest",
      "rated",
      "wine",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "Give the name of the wine with the highest score.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "wine",
      "with",
      "the",
      "highest",
      "score",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "SCORE",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "Which winery is the wine that has the highest score from?",
    "question_toks": [
      "Which",
      "winery",
      "is",
      "the",
      "wine",
      "that",
      "has",
      "the",
      "highest",
      "score",
      "from",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "SCORE",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "What is the winery at which the wine with the highest score was made?",
    "question_toks": [
      "What",
      "is",
      "the",
      "winery",
      "at",
      "which",
      "the",
      "wine",
      "with",
      "the",
      "highest",
      "score",
      "was",
      "made",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the names of all wines produced in 2008.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all wines produced in 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation FROM WINE",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      "from",
      "wine"
    ],
    "question": "List the grapes and appelations of all wines.",
    "question_toks": [
      "List",
      "the",
      "grapes",
      "and",
      "appelations",
      "of",
      "all",
      "wines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation FROM WINE",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      "from",
      "wine"
    ],
    "question": "What are the grapes and appelations of each wine?",
    "question_toks": [
      "What",
      "are",
      "the",
      "grapes",
      "and",
      "appelations",
      "of",
      "each",
      "wine",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name ,  Score FROM WINE",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Score",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "score",
      "from",
      "wine"
    ],
    "question": "List the names and scores of all wines.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "all",
      "wines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name ,  Score FROM WINE",
    "query_toks": [
      "SELECT",
      "Name",
      ",",
      "Score",
      "FROM",
      "WINE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "score",
      "from",
      "wine"
    ],
    "question": "What are the names and scores of all wines?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "all",
      "wines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Area ,  County FROM APPELLATIONS",
    "query_toks": [
      "SELECT",
      "Area",
      ",",
      "County",
      "FROM",
      "APPELLATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      ",",
      "county",
      "from",
      "appellations"
    ],
    "question": "List the area and county of all appelations.",
    "question_toks": [
      "List",
      "the",
      "area",
      "and",
      "county",
      "of",
      "all",
      "appelations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Area ,  County FROM APPELLATIONS",
    "query_toks": [
      "SELECT",
      "Area",
      ",",
      "County",
      "FROM",
      "APPELLATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      ",",
      "county",
      "from",
      "appellations"
    ],
    "question": "What are the areas and counties for all appelations?",
    "question_toks": [
      "What",
      "are",
      "the",
      "areas",
      "and",
      "counties",
      "for",
      "all",
      "appelations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What are the prices of wines produced before the year of 2010?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "the",
      "year",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Return the prices of wines produced before 2010.",
    "question_toks": [
      "Return",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "List the names of all distinct wines that have scores higher than 90.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "that",
      "have",
      "scores",
      "higher",
      "than",
      "90",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "What are the names of wines with scores higher than 90?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "with",
      "scores",
      "higher",
      "than",
      "90",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "Red",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value"
    ],
    "question": "List the names of all distinct wines that are made of red color grape.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "that",
      "are",
      "made",
      "of",
      "red",
      "color",
      "grape",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Red\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "Red",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value"
    ],
    "question": "What are the names of wines made from red grapes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "made",
      "from",
      "red",
      "grapes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Red\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "APPELLATIONs",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.Area",
      "=",
      "``",
      "North",
      "Coast",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "area",
      "=",
      "value"
    ],
    "question": "Find the names of all distinct wines that have appellations in North Coast area.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "that",
      "have",
      "appellations",
      "in",
      "North",
      "Coast",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"North Coast\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.Name",
      "FROM",
      "APPELLATIONs",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.Area",
      "=",
      "``",
      "North",
      "Coast",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "name",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "area",
      "=",
      "value"
    ],
    "question": "What are the distinct names of wines that have appellations in the North Coast area?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "names",
      "of",
      "wines",
      "that",
      "have",
      "appellations",
      "in",
      "the",
      "North",
      "Coast",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"North Coast\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "How many wines are produced at Robert Biale winery?",
    "question_toks": [
      "How",
      "many",
      "wines",
      "are",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "Count the number of wines produced at Robert Biale winery.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "wines",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many appelations are in Napa Country?",
    "question_toks": [
      "How",
      "many",
      "appelations",
      "are",
      "in",
      "Napa",
      "Country",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "Count the number of appelations in Napa County.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "appelations",
      "in",
      "Napa",
      "County",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "T2.Price",
      ")",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "``",
      "Sonoma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t2",
      ".",
      "price",
      ")",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value"
    ],
    "question": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "average",
      "prices",
      "of",
      "wines",
      "that",
      "are",
      "produced",
      "by",
      "appelations",
      "in",
      "Sonoma",
      "County",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Sonoma\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "T2.Price",
      ")",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "``",
      "Sonoma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t2",
      ".",
      "price",
      ")",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value"
    ],
    "question": "What is the average price of wines produced in appelations in Sonoma County?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "wines",
      "produced",
      "in",
      "appelations",
      "in",
      "Sonoma",
      "County",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Sonoma\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"",
    "query_toks": [
      "SELECT",
      "T2.Name",
      ",",
      "T2.Score",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "score",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value"
    ],
    "question": "What are the names and scores of wines that are made of white color grapes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "wines",
      "that",
      "are",
      "made",
      "of",
      "white",
      "color",
      "grapes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"",
    "query_toks": [
      "SELECT",
      "T2.Name",
      ",",
      "T2.Score",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "score",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value"
    ],
    "question": "Give the names and scores of wines made from white grapes.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "and",
      "scores",
      "of",
      "wines",
      "made",
      "from",
      "white",
      "grapes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "T2.Price",
      ")",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.Area",
      "=",
      "``",
      "Central",
      "Coast",
      "''",
      "AND",
      "T2.year",
      "<",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "t2",
      ".",
      "price",
      ")",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "area",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "price",
      "of",
      "wins",
      "from",
      "the",
      "appelations",
      "in",
      "Central",
      "Coast",
      "area",
      "and",
      "produced",
      "before",
      "the",
      "year",
      "of",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Central Coast\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "T2.Price",
      ")",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.Area",
      "=",
      "``",
      "Central",
      "Coast",
      "''",
      "AND",
      "T2.year",
      "<",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "t2",
      ".",
      "price",
      ")",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "area",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "price",
      "of",
      "wines",
      "from",
      "the",
      "appelation",
      "in",
      "the",
      "Central",
      "Coast",
      "area",
      ",",
      "which",
      "was",
      "produced",
      "before",
      "2005",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Central Coast\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.Grape",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''",
      "AND",
      "T2.score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "grape",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "score",
      ">",
      "value"
    ],
    "question": "Find the the grape whose white color grapes are used to produce wines with scores higher than 90.",
    "question_toks": [
      "Find",
      "the",
      "the",
      "grape",
      "whose",
      "white",
      "color",
      "grapes",
      "are",
      "used",
      "to",
      "produce",
      "wines",
      "with",
      "scores",
      "higher",
      "than",
      "90",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.Grape",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''",
      "AND",
      "T2.score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "grape",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "score",
      ">",
      "value"
    ],
    "question": "Find the white grape used to produce wines with scores above 90.",
    "question_toks": [
      "Find",
      "the",
      "white",
      "grape",
      "used",
      "to",
      "produce",
      "wines",
      "with",
      "scores",
      "above",
      "90",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "Grapes",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "Red",
      "''",
      "AND",
      "T2.price",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "price",
      ">",
      "value"
    ],
    "question": "What are the wines that have prices higher than 50 and made of Red color grapes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "wines",
      "that",
      "have",
      "prices",
      "higher",
      "than",
      "50",
      "and",
      "made",
      "of",
      "Red",
      "color",
      "grapes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Red\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "Grapes",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "Red",
      "''",
      "AND",
      "T2.price",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "price",
      ">",
      "value"
    ],
    "question": "What are the names of wines made from red grapes and with prices above 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "made",
      "from",
      "red",
      "grapes",
      "and",
      "with",
      "prices",
      "above",
      "50",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Red\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "``",
      "Monterey",
      "''",
      "AND",
      "T2.price",
      "<",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "price",
      "<",
      "value"
    ],
    "question": "What are the wines that have prices lower than 50 and have appelations in Monterey county?",
    "question_toks": [
      "What",
      "are",
      "the",
      "wines",
      "that",
      "have",
      "prices",
      "lower",
      "than",
      "50",
      "and",
      "have",
      "appelations",
      "in",
      "Monterey",
      "county",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Monterey\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50",
    "query_toks": [
      "SELECT",
      "T2.Name",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "``",
      "Monterey",
      "''",
      "AND",
      "T2.price",
      "<",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "price",
      "<",
      "value"
    ],
    "question": "Give the neames of wines with prices below 50 and with appelations in Monterey county.",
    "question_toks": [
      "Give",
      "the",
      "neames",
      "of",
      "wines",
      "with",
      "prices",
      "below",
      "50",
      "and",
      "with",
      "appelations",
      "in",
      "Monterey",
      "county",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Monterey\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "Grape",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Grape"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "grape",
      "from",
      "wine",
      "group",
      "by",
      "grape"
    ],
    "question": "What are the numbers of wines for different grapes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "wines",
      "for",
      "different",
      "grapes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "Grape",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Grape"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "grape",
      "from",
      "wine",
      "group",
      "by",
      "grape"
    ],
    "question": "How many wines are there for each grape?",
    "question_toks": [
      "How",
      "many",
      "wines",
      "are",
      "there",
      "for",
      "each",
      "grape",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Price",
      ")",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "year",
      "from",
      "wine",
      "group",
      "by",
      "year"
    ],
    "question": "What are the average prices of wines for different years?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "prices",
      "of",
      "wines",
      "for",
      "different",
      "years",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Price",
      ")",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "year",
      "from",
      "wine",
      "group",
      "by",
      "year"
    ],
    "question": "What is the average prices of wines for each each?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "prices",
      "of",
      "wines",
      "for",
      "each",
      "each",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "Price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Winery",
      "=",
      "``",
      "John",
      "Anthony",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "min",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "names",
      "of",
      "all",
      "wines",
      "that",
      "have",
      "prices",
      "higher",
      "than",
      "some",
      "wines",
      "from",
      "John",
      "Anthony",
      "winery",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"John Anthony\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "min",
      "(",
      "Price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Winery",
      "=",
      "``",
      "John",
      "Anthony",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "min",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "What are the distinct names of wines with prices higher than any wine from John Anthony winery.",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "names",
      "of",
      "wines",
      "with",
      "prices",
      "higher",
      "than",
      "any",
      "wine",
      "from",
      "John",
      "Anthony",
      "winery",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"John Anthony\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all distinct wines in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names of wines, sorted in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      ",",
      "sorted",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "price"
    ],
    "question": "List the names of all distinct wines ordered by price.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "ordered",
      "by",
      "price",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "price"
    ],
    "question": "What are the names of wines, sorted by price ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      ",",
      "sorted",
      "by",
      "price",
      "ascending",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Area",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "GROUP",
      "BY",
      "T2.Appelation",
      "HAVING",
      "T2.year",
      "<",
      "2010",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "area",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "group",
      "by",
      "t2",
      ".",
      "appelation",
      "having",
      "t2",
      ".",
      "year",
      "<",
      "value",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the area of the appelation that produces the highest number of wines before the year of 2010?",
    "question_toks": [
      "What",
      "is",
      "the",
      "area",
      "of",
      "the",
      "appelation",
      "that",
      "produces",
      "the",
      "highest",
      "number",
      "of",
      "wines",
      "before",
      "the",
      "year",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Area",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "GROUP",
      "BY",
      "T2.Appelation",
      "HAVING",
      "T2.year",
      "<",
      "2010",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "area",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "group",
      "by",
      "t2",
      ".",
      "appelation",
      "having",
      "t2",
      ".",
      "year",
      "<",
      "value",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the area for the appelation which produced the most wines prior to 2010?",
    "question_toks": [
      "What",
      "is",
      "the",
      "area",
      "for",
      "the",
      "appelation",
      "which",
      "produced",
      "the",
      "most",
      "wines",
      "prior",
      "to",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Color",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "GROUP",
      "BY",
      "T2.Grape",
      "ORDER",
      "BY",
      "AVG",
      "(",
      "Price",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "color",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "group",
      "by",
      "t2",
      ".",
      "grape",
      "order",
      "by",
      "avg",
      "(",
      "price",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the color of the grape whose wine products has the highest average price?",
    "question_toks": [
      "What",
      "is",
      "the",
      "color",
      "of",
      "the",
      "grape",
      "whose",
      "wine",
      "products",
      "has",
      "the",
      "highest",
      "average",
      "price",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              5,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.Color",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Grape",
      "=",
      "T2.Grape",
      "GROUP",
      "BY",
      "T2.Grape",
      "ORDER",
      "BY",
      "AVG",
      "(",
      "Price",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "color",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "group",
      "by",
      "t2",
      ".",
      "grape",
      "order",
      "by",
      "avg",
      "(",
      "price",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give the color of the grape whose wine products have the highest average price?",
    "question_toks": [
      "Give",
      "the",
      "color",
      "of",
      "the",
      "grape",
      "whose",
      "wine",
      "products",
      "have",
      "the",
      "highest",
      "average",
      "price",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              5,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2000",
      "OR",
      "YEAR",
      ">",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value",
      "or",
      "year",
      ">",
      "value"
    ],
    "question": "Find the distinct names of wines produced before the year of 2000 or after the year of 2010.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "names",
      "of",
      "wines",
      "produced",
      "before",
      "the",
      "year",
      "of",
      "2000",
      "or",
      "after",
      "the",
      "year",
      "of",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2000.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2000",
      "OR",
      "YEAR",
      ">",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value",
      "or",
      "year",
      ">",
      "value"
    ],
    "question": "Give the distinct names of wines made before 2000 or after 2010.",
    "question_toks": [
      "Give",
      "the",
      "distinct",
      "names",
      "of",
      "wines",
      "made",
      "before",
      "2000",
      "or",
      "after",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2000.0,
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Winery",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      "BETWEEN",
      "50",
      "AND",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "winery",
      "from",
      "wine",
      "where",
      "price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the distinct winery of wines having price between 50 and 100.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "winery",
      "of",
      "wines",
      "having",
      "price",
      "between",
      "50",
      "and",
      "100",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          100.0
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Winery",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      "BETWEEN",
      "50",
      "AND",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "winery",
      "from",
      "wine",
      "where",
      "price",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the distinct wineries which produce wines costing between 50 and 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "wineries",
      "which",
      "produce",
      "wines",
      "costing",
      "between",
      "50",
      "and",
      "100",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          50.0,
          100.0
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "Price",
      ")",
      ",",
      "AVG",
      "(",
      "Cases",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2009",
      "AND",
      "Grape",
      "=",
      "``",
      "Zinfandel",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "cases",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      "and",
      "grape",
      "=",
      "value"
    ],
    "question": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "prices",
      "and",
      "cases",
      "of",
      "wines",
      "produced",
      "in",
      "the",
      "year",
      "of",
      "2009",
      "and",
      "made",
      "of",
      "Zinfandel",
      "grape",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2009.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Zinfandel\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "Price",
      ")",
      ",",
      "AVG",
      "(",
      "Cases",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2009",
      "AND",
      "Grape",
      "=",
      "``",
      "Zinfandel",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "cases",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      "and",
      "grape",
      "=",
      "value"
    ],
    "question": "Give the average price and case of wines made from Zinfandel grapes in the year 2009.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "price",
      "and",
      "case",
      "of",
      "wines",
      "made",
      "from",
      "Zinfandel",
      "grapes",
      "in",
      "the",
      "year",
      "2009",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2009.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Zinfandel\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Appelation",
      "=",
      "``",
      "St.",
      "Helena",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "=",
      "value"
    ],
    "question": "What are the maximum price and score of wines produced by St. Helena appelation?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "produced",
      "by",
      "St.",
      "Helena",
      "appelation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"St. Helena\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Appelation",
      "=",
      "``",
      "St.",
      "Helena",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "=",
      "value"
    ],
    "question": "Give the maximum price and score for wines produced in the appelation St. Helena.",
    "question_toks": [
      "Give",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "for",
      "wines",
      "produced",
      "in",
      "the",
      "appelation",
      "St.",
      "Helena",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"St. Helena\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      ",",
      "year",
      "from",
      "wine",
      "group",
      "by",
      "year"
    ],
    "question": "What are the maximum price and score of wines in each year?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "in",
      "each",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      ",",
      "max",
      "(",
      "Score",
      ")",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "price",
      ")",
      ",",
      "max",
      "(",
      "score",
      ")",
      ",",
      "year",
      "from",
      "wine",
      "group",
      "by",
      "year"
    ],
    "question": "What are the maximum price and score of wines for each year?",
    "question_toks": [
      "What",
      "are",
      "the",
      "maximum",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "for",
      "each",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Price",
      ")",
      ",",
      "avg",
      "(",
      "Score",
      ")",
      ",",
      "Appelation",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Appelation"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "score",
      ")",
      ",",
      "appelation",
      "from",
      "wine",
      "group",
      "by",
      "appelation"
    ],
    "question": "What are the average price and score of wines grouped by appelation?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "grouped",
      "by",
      "appelation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Price",
      ")",
      ",",
      "avg",
      "(",
      "Score",
      ")",
      ",",
      "Appelation",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Appelation"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      ",",
      "avg",
      "(",
      "score",
      ")",
      ",",
      "appelation",
      "from",
      "wine",
      "group",
      "by",
      "appelation"
    ],
    "question": "What are the average price and score of wines for each appelation?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "price",
      "and",
      "score",
      "of",
      "wines",
      "for",
      "each",
      "appelation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Winery",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "group",
      "by",
      "winery",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Find the wineries that have at least four wines.",
    "question_toks": [
      "Find",
      "the",
      "wineries",
      "that",
      "have",
      "at",
      "least",
      "four",
      "wines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Winery",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "group",
      "by",
      "winery",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which wineries produce at least four wines?",
    "question_toks": [
      "Which",
      "wineries",
      "produce",
      "at",
      "least",
      "four",
      "wines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
    "query_toks": [
      "SELECT",
      "T1.County",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "GROUP",
      "BY",
      "T2.Appelation",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "county",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "group",
      "by",
      "t2",
      ".",
      "appelation",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "Find the country of all appelations who have at most three wines.",
    "question_toks": [
      "Find",
      "the",
      "country",
      "of",
      "all",
      "appelations",
      "who",
      "have",
      "at",
      "most",
      "three",
      "wines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
    "query_toks": [
      "SELECT",
      "T1.County",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "GROUP",
      "BY",
      "T2.Appelation",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "county",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "group",
      "by",
      "t2",
      ".",
      "appelation",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "What are the countries for appelations with at most 3 wines?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "for",
      "appelations",
      "with",
      "at",
      "most",
      "3",
      "wines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Brander",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines whose production year are before the year of all wines by Brander winery?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "whose",
      "production",
      "year",
      "are",
      "before",
      "the",
      "year",
      "of",
      "all",
      "wines",
      "by",
      "Brander",
      "winery",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Brander\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "(",
      "SELECT",
      "min",
      "(",
      "YEAR",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Brander",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "(",
      "select",
      "min",
      "(",
      "year",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines produced before any wine from the Brander winery?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "produced",
      "before",
      "any",
      "wine",
      "from",
      "the",
      "Brander",
      "winery",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  2,
                  [
                    0,
                    [
                      0,
                      16,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Brander\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2006",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "What are the names of wines that are more expensive then all wines made in the year 2006?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "that",
      "are",
      "more",
      "expensive",
      "then",
      "all",
      "wines",
      "made",
      "in",
      "the",
      "year",
      "2006",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                2006.0,
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "(",
      "SELECT",
      "max",
      "(",
      "Price",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "2006",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "(",
      "select",
      "max",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value",
      ")"
    ],
    "question": "Give the names of wines with prices above any wine produced in 2006.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "wines",
      "with",
      "prices",
      "above",
      "any",
      "wine",
      "produced",
      "in",
      "2006",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      17,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                2006.0,
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "T2.Winery",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.GRAPE",
      "=",
      "T2.GRAPE",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''",
      "GROUP",
      "BY",
      "T2.Winery",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "winery",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "winery",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the top 3 wineries with the greatest number of wines made of white color grapes.",
    "question_toks": [
      "Find",
      "the",
      "top",
      "3",
      "wineries",
      "with",
      "the",
      "greatest",
      "number",
      "of",
      "wines",
      "made",
      "of",
      "white",
      "color",
      "grapes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 3,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "T2.Winery",
      "FROM",
      "GRAPES",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.GRAPE",
      "=",
      "T2.GRAPE",
      "WHERE",
      "T1.Color",
      "=",
      "``",
      "White",
      "''",
      "GROUP",
      "BY",
      "T2.Winery",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "winery",
      "from",
      "grapes",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "grape",
      "=",
      "t2",
      ".",
      "grape",
      "where",
      "t1",
      ".",
      "color",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "winery",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which 3 wineries produce the most wines made from white grapes?",
    "question_toks": [
      "Which",
      "3",
      "wineries",
      "produce",
      "the",
      "most",
      "wines",
      "made",
      "from",
      "white",
      "grapes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 3,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"White\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Winery",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "100",
      "ORDER",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "winery",
      ",",
      "year",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "value",
      "order",
      "by",
      "year"
    ],
    "question": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.",
    "question_toks": [
      "List",
      "the",
      "grape",
      ",",
      "winery",
      "and",
      "year",
      "of",
      "the",
      "wines",
      "whose",
      "price",
      "is",
      "bigger",
      "than",
      "100",
      "ordered",
      "by",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Winery",
      ",",
      "YEAR",
      "FROM",
      "WINE",
      "WHERE",
      "Price",
      ">",
      "100",
      "ORDER",
      "BY",
      "YEAR"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "winery",
      ",",
      "year",
      "from",
      "wine",
      "where",
      "price",
      ">",
      "value",
      "order",
      "by",
      "year"
    ],
    "question": "What are the grapes, wineries and years for wines with price higher than 100, sorted by year?",
    "question_toks": [
      "What",
      "are",
      "the",
      "grapes",
      ",",
      "wineries",
      "and",
      "years",
      "for",
      "wines",
      "with",
      "price",
      "higher",
      "than",
      "100",
      ",",
      "sorted",
      "by",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      ",",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Score",
      ">",
      "93",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      ",",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value",
      "order",
      "by",
      "name"
    ],
    "question": "List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.",
    "question_toks": [
      "List",
      "the",
      "grape",
      ",",
      "appelation",
      "and",
      "name",
      "of",
      "wines",
      "whose",
      "score",
      "is",
      "higher",
      "than",
      "93",
      "ordered",
      "by",
      "Name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          93.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
    "query_toks": [
      "SELECT",
      "Grape",
      ",",
      "Appelation",
      ",",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "Score",
      ">",
      "93",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "grape",
      ",",
      "appelation",
      ",",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value",
      "order",
      "by",
      "name"
    ],
    "question": "What are the grapes, appelations, and wines with scores above 93, sorted by Name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "grapes",
      ",",
      "appelations",
      ",",
      "and",
      "wines",
      "with",
      "scores",
      "above",
      "93",
      ",",
      "sorted",
      "by",
      "Name",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          93.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
    "query_toks": [
      "SELECT",
      "Appelation",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      ">",
      "2008",
      "EXCEPT",
      "SELECT",
      "Appelation",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "Area",
      "=",
      "``",
      "Central",
      "Coast",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "appelation",
      "from",
      "wine",
      "where",
      "year",
      ">",
      "value",
      "except",
      "select",
      "appelation",
      "from",
      "appellations",
      "where",
      "area",
      "=",
      "value"
    ],
    "question": "Find the appelations that produce wines after the year of 2008 but not in Central Coast area.",
    "question_toks": [
      "Find",
      "the",
      "appelations",
      "that",
      "produce",
      "wines",
      "after",
      "the",
      "year",
      "of",
      "2008",
      "but",
      "not",
      "in",
      "Central",
      "Coast",
      "area",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            "\"Central Coast\"",
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2008.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
    "query_toks": [
      "SELECT",
      "Appelation",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      ">",
      "2008",
      "EXCEPT",
      "SELECT",
      "Appelation",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "Area",
      "=",
      "``",
      "Central",
      "Coast",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "appelation",
      "from",
      "wine",
      "where",
      "year",
      ">",
      "value",
      "except",
      "select",
      "appelation",
      "from",
      "appellations",
      "where",
      "area",
      "=",
      "value"
    ],
    "question": "What are the appelations for wines produced after 2008 but not in the Central Coast area?",
    "question_toks": [
      "What",
      "are",
      "the",
      "appelations",
      "for",
      "wines",
      "produced",
      "after",
      "2008",
      "but",
      "not",
      "in",
      "the",
      "Central",
      "Coast",
      "area",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            "\"Central Coast\"",
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2008.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Appelation",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Appelation",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "'Sonoma",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "appelation",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      ")"
    ],
    "question": "Find the average price of wines that are not produced from Sonoma county.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "price",
      "of",
      "wines",
      "that",
      "are",
      "not",
      "produced",
      "from",
      "Sonoma",
      "county",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Sonoma\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "wine",
      "WHERE",
      "Appelation",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T1.Appelation",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T1.County",
      "=",
      "'Sonoma",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "wine",
      "where",
      "appelation",
      "not",
      "in",
      "(",
      "select",
      "t1",
      ".",
      "appelation",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t1",
      ".",
      "county",
      "=",
      "value",
      ")"
    ],
    "question": "What is the average price for wines not produced in Sonoma county?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "wines",
      "not",
      "produced",
      "in",
      "Sonoma",
      "county",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    13,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      5,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"Sonoma\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.County",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T2.Score",
      ">",
      "90",
      "GROUP",
      "BY",
      "T1.County",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "county",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t2",
      ".",
      "score",
      ">",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "county",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the county where produces the most number of wines with score higher than 90.",
    "question_toks": [
      "Find",
      "the",
      "county",
      "where",
      "produces",
      "the",
      "most",
      "number",
      "of",
      "wines",
      "with",
      "score",
      "higher",
      "than",
      "90",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.County",
      "FROM",
      "APPELLATIONS",
      "AS",
      "T1",
      "JOIN",
      "WINE",
      "AS",
      "T2",
      "ON",
      "T1.Appelation",
      "=",
      "T2.Appelation",
      "WHERE",
      "T2.Score",
      ">",
      "90",
      "GROUP",
      "BY",
      "T1.County",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "county",
      "from",
      "appellations",
      "as",
      "t1",
      "join",
      "wine",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "appelation",
      "=",
      "t2",
      ".",
      "appelation",
      "where",
      "t2",
      ".",
      "score",
      ">",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "county",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the county that produces the most wines scoring higher than 90?",
    "question_toks": [
      "What",
      "is",
      "the",
      "county",
      "that",
      "produces",
      "the",
      "most",
      "wines",
      "scoring",
      "higher",
      "than",
      "90",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station"
    ],
    "question": "How many train stations are there?",
    "question_toks": [
      "How",
      "many",
      "train",
      "stations",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      ",",
      "number_of_platforms",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      ",",
      "number_of_platforms",
      "from",
      "station"
    ],
    "question": "Show the name, location, and number of platforms for all stations.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "location",
      ",",
      "and",
      "number",
      "of",
      "platforms",
      "for",
      "all",
      "stations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT DISTINCT LOCATION FROM station",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "station"
    ],
    "question": "What are all locations of train stations?",
    "question_toks": [
      "What",
      "are",
      "all",
      "locations",
      "of",
      "train",
      "stations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "total_passengers",
      "FROM",
      "station",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "'London",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "total_passengers",
      "from",
      "station",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "Show the names and total passengers for all train stations not in London.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "and",
      "total",
      "passengers",
      "for",
      "all",
      "train",
      "stations",
      "not",
      "in",
      "London",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "main_services",
      "FROM",
      "station",
      "ORDER",
      "BY",
      "total_passengers",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "main_services",
      "from",
      "station",
      "order",
      "by",
      "total_passengers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the names and main services for train stations that have the top three total number of passengers.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "and",
      "main",
      "services",
      "for",
      "train",
      "stations",
      "that",
      "have",
      "the",
      "top",
      "three",
      "total",
      "number",
      "of",
      "passengers",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 3,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "total_passengers",
      ")",
      ",",
      "max",
      "(",
      "total_passengers",
      ")",
      "FROM",
      "station",
      "WHERE",
      "LOCATION",
      "=",
      "'London",
      "'",
      "OR",
      "LOCATION",
      "=",
      "'Glasgow",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "total_passengers",
      ")",
      ",",
      "max",
      "(",
      "total_passengers",
      ")",
      "from",
      "station",
      "where",
      "location",
      "=",
      "value",
      "or",
      "location",
      "=",
      "value"
    ],
    "question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "and",
      "maximum",
      "number",
      "of",
      "total",
      "passengers",
      "for",
      "train",
      "stations",
      "in",
      "London",
      "or",
      "Glasgow",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Glasgow\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION",
    "query_toks": [
      "SELECT",
      "LOCATION",
      ",",
      "sum",
      "(",
      "number_of_platforms",
      ")",
      ",",
      "sum",
      "(",
      "total_passengers",
      ")",
      "FROM",
      "station",
      "GROUP",
      "BY",
      "LOCATION"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      ",",
      "sum",
      "(",
      "number_of_platforms",
      ")",
      ",",
      "sum",
      "(",
      "total_passengers",
      ")",
      "from",
      "station",
      "group",
      "by",
      "location"
    ],
    "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.",
    "question_toks": [
      "Show",
      "all",
      "locations",
      "and",
      "the",
      "total",
      "number",
      "of",
      "platforms",
      "and",
      "passengers",
      "for",
      "all",
      "train",
      "stations",
      "in",
      "each",
      "location",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "station",
      "WHERE",
      "number_of_platforms",
      ">",
      "=",
      "15",
      "AND",
      "total_passengers",
      ">",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "station",
      "where",
      "number_of_platforms",
      ">",
      "=",
      "value",
      "and",
      "total_passengers",
      ">",
      "value"
    ],
    "question": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.",
    "question_toks": [
      "Show",
      "all",
      "locations",
      "that",
      "have",
      "train",
      "stations",
      "with",
      "at",
      "least",
      "15",
      "platforms",
      "and",
      "train",
      "stations",
      "with",
      "more",
      "than",
      "25",
      "total",
      "passengers",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          15.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "station",
      "EXCEPT",
      "SELECT",
      "LOCATION",
      "FROM",
      "station",
      "WHERE",
      "number_of_platforms",
      ">",
      "=",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "station",
      "except",
      "select",
      "location",
      "from",
      "station",
      "where",
      "number_of_platforms",
      ">",
      "=",
      "value"
    ],
    "question": "Show all locations which don't have a train station with at least 15 platforms.",
    "question_toks": [
      "Show",
      "all",
      "locations",
      "which",
      "do",
      "n't",
      "have",
      "a",
      "train",
      "station",
      "with",
      "at",
      "least",
      "15",
      "platforms",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            15.0,
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "station",
      "GROUP",
      "BY",
      "LOCATION",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "station",
      "group",
      "by",
      "location",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the location with most number of train stations.",
    "question_toks": [
      "Show",
      "the",
      "location",
      "with",
      "most",
      "number",
      "of",
      "train",
      "stations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  TIME ,  service FROM train",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "TIME",
      ",",
      "service",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "time",
      ",",
      "service",
      "from",
      "train"
    ],
    "question": "Show the name, time, and service for all trains.",
    "question_toks": [
      "Show",
      "the",
      "name",
      ",",
      "time",
      ",",
      "and",
      "service",
      "for",
      "all",
      "trains",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM train",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train"
    ],
    "question": "Show the number of trains",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "trains"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  service FROM train ORDER BY TIME",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "service",
      "FROM",
      "train",
      "ORDER",
      "BY",
      "TIME"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "service",
      "from",
      "train",
      "order",
      "by",
      "time"
    ],
    "question": "Show the name and service for all trains in order by time.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "and",
      "service",
      "for",
      "all",
      "trains",
      "in",
      "order",
      "by",
      "time",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "GROUP",
      "BY",
      "T1.station_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "group",
      "by",
      "t1",
      ".",
      "station_id"
    ],
    "question": "Show the station name and number of trains in each station.",
    "question_toks": [
      "Show",
      "the",
      "station",
      "name",
      "and",
      "number",
      "of",
      "trains",
      "in",
      "each",
      "station",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",
    "query_toks": [
      "SELECT",
      "T2.name",
      ",",
      "T3.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "JOIN",
      "train",
      "AS",
      "T3",
      "ON",
      "T3.train_id",
      "=",
      "T1.train_id"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "join",
      "train",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "train_id",
      "=",
      "t1",
      ".",
      "train_id"
    ],
    "question": "show the train name and station name for each train.",
    "question_toks": [
      "show",
      "the",
      "train",
      "name",
      "and",
      "station",
      "name",
      "for",
      "each",
      "train",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC",
    "query_toks": [
      "SELECT",
      "T3.name",
      ",",
      "T3.time",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "JOIN",
      "train",
      "AS",
      "T3",
      "ON",
      "T3.train_id",
      "=",
      "T1.train_id",
      "WHERE",
      "T2.location",
      "=",
      "'London",
      "'",
      "ORDER",
      "BY",
      "T3.time",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      ",",
      "t3",
      ".",
      "time",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "join",
      "train",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "train_id",
      "=",
      "t1",
      ".",
      "train_id",
      "where",
      "t2",
      ".",
      "location",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "time",
      "desc"
    ],
    "question": "Show all train names and times in stations in London in descending order by train time.",
    "question_toks": [
      "Show",
      "all",
      "train",
      "names",
      "and",
      "times",
      "in",
      "stations",
      "in",
      "London",
      "in",
      "descending",
      "order",
      "by",
      "train",
      "time",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"London\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "GROUP",
      "BY",
      "T1.station_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "group",
      "by",
      "t1",
      ".",
      "station_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the station name with greatest number of trains.",
    "question_toks": [
      "Show",
      "the",
      "station",
      "name",
      "with",
      "greatest",
      "number",
      "of",
      "trains",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "GROUP",
      "BY",
      "T1.station_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "group",
      "by",
      "t1",
      ".",
      "station_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the station name with at least two trains.",
    "question_toks": [
      "Show",
      "the",
      "station",
      "name",
      "with",
      "at",
      "least",
      "two",
      "trains",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "station",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "station",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Show all locations with only 1 station.",
    "question_toks": [
      "Show",
      "all",
      "locations",
      "with",
      "only",
      "1",
      "station",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "station_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "station_id",
      "FROM",
      "train_station",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "station_id",
      "not",
      "in",
      "(",
      "select",
      "station_id",
      "from",
      "train_station",
      ")"
    ],
    "question": "Show station names without any trains.",
    "question_toks": [
      "Show",
      "station",
      "names",
      "without",
      "any",
      "trains",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "JOIN",
      "train",
      "AS",
      "T3",
      "ON",
      "T3.train_id",
      "=",
      "T1.train_id",
      "WHERE",
      "T3.Name",
      "=",
      "``",
      "Ananthapuri",
      "Express",
      "''",
      "INTERSECT",
      "SELECT",
      "T2.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "station",
      "AS",
      "T2",
      "ON",
      "T1.station_id",
      "=",
      "T2.station_id",
      "JOIN",
      "train",
      "AS",
      "T3",
      "ON",
      "T3.train_id",
      "=",
      "T1.train_id",
      "WHERE",
      "T3.Name",
      "=",
      "``",
      "Guruvayur",
      "Express",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "join",
      "train",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "train_id",
      "=",
      "t1",
      ".",
      "train_id",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "intersect",
      "select",
      "t2",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "station",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "station_id",
      "=",
      "t2",
      ".",
      "station_id",
      "join",
      "train",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "train_id",
      "=",
      "t1",
      ".",
      "train_id",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "stations",
      "which",
      "serve",
      "both",
      "``",
      "Ananthapuri",
      "Express",
      "''",
      "and",
      "``",
      "Guruvayur",
      "Express",
      "''",
      "trains",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  14,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              2
            ],
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            "\"Guruvayur Express\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ananthapuri Express\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")",
    "query_toks": [
      "SELECT",
      "T2.name",
      "FROM",
      "train_station",
      "AS",
      "T1",
      "JOIN",
      "train",
      "AS",
      "T2",
      "ON",
      "T1.train_id",
      "=",
      "T2.train_id",
      "WHERE",
      "T1.station_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "T4.station_id",
      "FROM",
      "train_station",
      "AS",
      "T3",
      "JOIN",
      "station",
      "AS",
      "T4",
      "ON",
      "T3.station_id",
      "=",
      "T4.station_id",
      "WHERE",
      "t4.location",
      "=",
      "``",
      "London",
      "''",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "train_station",
      "as",
      "t1",
      "join",
      "train",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "train_id",
      "=",
      "t2",
      ".",
      "train_id",
      "where",
      "t1",
      ".",
      "station_id",
      "not",
      "in",
      "(",
      "select",
      "t4",
      ".",
      "station_id",
      "from",
      "train_station",
      "as",
      "t3",
      "join",
      "station",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "station_id",
      "=",
      "t4",
      ".",
      "station_id",
      "where",
      "t4",
      ".",
      "location",
      "=",
      "value",
      ")"
    ],
    "question": "Find the names of the trains that do not pass any station located in London.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "trains",
      "that",
      "do",
      "not",
      "pass",
      "any",
      "station",
      "located",
      "in",
      "London",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  2
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"London\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "LOCATION",
      "FROM",
      "station",
      "ORDER",
      "BY",
      "Annual_entry_exit",
      ",",
      "Annual_interchanges"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "location",
      "from",
      "station",
      "order",
      "by",
      "annual_entry_exit",
      ",",
      "annual_interchanges"
    ],
    "question": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.",
    "question_toks": [
      "List",
      "the",
      "names",
      "and",
      "locations",
      "of",
      "all",
      "stations",
      "ordered",
      "by",
      "their",
      "yearly",
      "entry",
      "exit",
      "and",
      "interchange",
      "amounts",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "List all vehicle id",
    "question_toks": [
      "List",
      "all",
      "vehicle",
      "id"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "What are the ids of all vehicles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "vehicles",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicle in total?",
    "question_toks": [
      "How",
      "many",
      "vehicle",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicles exist?",
    "question_toks": [
      "How",
      "many",
      "vehicles",
      "exist",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "Show the detail of vehicle with id 1.",
    "question_toks": [
      "Show",
      "the",
      "detail",
      "of",
      "vehicle",
      "with",
      "id",
      "1",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "What are the details of the car with id 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "car",
      "with",
      "id",
      "1",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "from",
      "staff"
    ],
    "question": "List the first name middle name and last name of all staff.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "middle",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "staff",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "middle_name",
      ",",
      "last_name",
      "from",
      "staff"
    ],
    "question": "What are the first, middle, and last names of all staff?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      ",",
      "middle",
      ",",
      "and",
      "last",
      "names",
      "of",
      "all",
      "staff",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "birthday",
      "of",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the date of birth for the staff member named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "the",
      "staff",
      "member",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member with first name as Janessa and last name as Sawayn join the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "join",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_joined_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_joined_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member named Janessa Sawayn join the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "named",
      "Janessa",
      "Sawayn",
      "join",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member with first name as Janessa and last name as Sawayn leave the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "leave",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "date_left_staff",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_left_staff",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did the staff member Janessa Sawayn leave the company?",
    "question_toks": [
      "When",
      "did",
      "the",
      "staff",
      "member",
      "Janessa",
      "Sawayn",
      "leave",
      "the",
      "company",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many staff have the first name Ludie?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "have",
      "the",
      "first",
      "name",
      "Ludie",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many employees have a first name of Ludie?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "a",
      "first",
      "name",
      "of",
      "Ludie",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "nickname",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the nickname of the employee named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nickname",
      "of",
      "the",
      "employee",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many staff in total?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many employees are there?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.city",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "Which city does staff with first name as Janessa and last name as Sawayn live?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "live",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.city",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "In what city does Janessa Sawayn live?",
    "question_toks": [
      "In",
      "what",
      "city",
      "does",
      "Janessa",
      "Sawayn",
      "live",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.country",
      ",",
      "T1.state_province_county",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "state_province_county",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "Which country and state does staff with first name as Janessa and last name as Sawayn lived?",
    "question_toks": [
      "Which",
      "country",
      "and",
      "state",
      "does",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "lived",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.country",
      ",",
      "T1.state_province_county",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "state_province_county",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "In which country and state does Janessa Sawayn live?",
    "question_toks": [
      "In",
      "which",
      "country",
      "and",
      "state",
      "does",
      "Janessa",
      "Sawayn",
      "live",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T1.lesson_time",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Rylan",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Goodwin",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t1",
      ".",
      "lesson_time",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "total",
      "lesson",
      "time",
      "took",
      "by",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Rylan",
      "and",
      "last",
      "name",
      "as",
      "Goodwin",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Rylan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Goodwin\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T1.lesson_time",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Rylan",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Goodwin",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t1",
      ".",
      "lesson_time",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "How long is the total lesson time took by the customer named Rylan Goodwin?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "total",
      "lesson",
      "time",
      "took",
      "by",
      "the",
      "customer",
      "named",
      "Rylan",
      "Goodwin",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Rylan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Goodwin\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.zip_postcode",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "zip_postcode",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "of",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "lived",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "T1.zip_postcode",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "zip_postcode",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the zip code of the hosue of the employee named Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "of",
      "the",
      "hosue",
      "of",
      "the",
      "employee",
      "named",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many staff live in state Georgia?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "live",
      "in",
      "state",
      "Georgia",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many employees live in Georgia?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "live",
      "in",
      "Georgia",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";",
    "query_toks": [
      "SELECT",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T1.city",
      "=",
      "``",
      "Damianfort",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "Find out the first name and last name of staff lived in city Damianfort.",
    "question_toks": [
      "Find",
      "out",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "staff",
      "lived",
      "in",
      "city",
      "Damianfort",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Damianfort\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";",
    "query_toks": [
      "SELECT",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "WHERE",
      "T1.city",
      "=",
      "``",
      "Damianfort",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "What is the first and last name of all employees who live in the city Damianfort?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "all",
      "employees",
      "who",
      "live",
      "in",
      "the",
      "city",
      "Damianfort",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Damianfort\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "GROUP",
      "BY",
      "T1.city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "group",
      "by",
      "t1",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city lives most of staffs? List the city name and number of staffs.",
    "question_toks": [
      "Which",
      "city",
      "lives",
      "most",
      "of",
      "staffs",
      "?",
      "List",
      "the",
      "city",
      "name",
      "and",
      "number",
      "of",
      "staffs",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T1.city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "GROUP",
      "BY",
      "T1.city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "group",
      "by",
      "t1",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "In which city do the most employees live and how many of them live there?",
    "question_toks": [
      "In",
      "which",
      "city",
      "do",
      "the",
      "most",
      "employees",
      "live",
      "and",
      "how",
      "many",
      "of",
      "them",
      "live",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;",
    "query_toks": [
      "SELECT",
      "T1.state_province_county",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "GROUP",
      "BY",
      "T1.state_province_county",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "BETWEEN",
      "2",
      "AND",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "state_province_county",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "group",
      "by",
      "t1",
      ".",
      "state_province_county",
      "having",
      "count",
      "(",
      "*",
      ")",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "List the states which have between 2 to 4 staffs living there.",
    "question_toks": [
      "List",
      "the",
      "states",
      "which",
      "have",
      "between",
      "2",
      "to",
      "4",
      "staffs",
      "living",
      "there",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          1,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          4.0
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;",
    "query_toks": [
      "SELECT",
      "T1.state_province_county",
      "FROM",
      "Addresses",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.address_id",
      "=",
      "T2.staff_address_id",
      "GROUP",
      "BY",
      "T1.state_province_county",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "BETWEEN",
      "2",
      "AND",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "state_province_county",
      "from",
      "addresses",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "address_id",
      "=",
      "t2",
      ".",
      "staff_address_id",
      "group",
      "by",
      "t1",
      ".",
      "state_province_county",
      "having",
      "count",
      "(",
      "*",
      ")",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of the states that have 2 to 4 employees living there?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "states",
      "that",
      "have",
      "2",
      "to",
      "4",
      "employees",
      "living",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          1,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          4.0
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers"
    ],
    "question": "List the first name and last name of all customers.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers"
    ],
    "question": "What are the first and last names for all customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "for",
      "all",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "List email address and birthday of customer whose first name as Carole.",
    "question_toks": [
      "List",
      "email",
      "address",
      "and",
      "birthday",
      "of",
      "customer",
      "whose",
      "first",
      "name",
      "as",
      "Carole",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"",
    "query_toks": [
      "SELECT",
      "email_address",
      ",",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "email_address",
      ",",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "What are the email addresses and date of births for all customers who have a first name of Carole?",
    "question_toks": [
      "What",
      "are",
      "the",
      "email",
      "addresses",
      "and",
      "date",
      "of",
      "births",
      "for",
      "all",
      "customers",
      "who",
      "have",
      "a",
      "first",
      "name",
      "of",
      "Carole",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",
    "query_toks": [
      "SELECT",
      "phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      ">",
      "value"
    ],
    "question": "List phone number and email address of customer with more than 2000 outstanding balance.",
    "question_toks": [
      "List",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "of",
      "customer",
      "with",
      "more",
      "than",
      "2000",
      "outstanding",
      "balance",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",
    "query_toks": [
      "SELECT",
      "phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      ">",
      "value"
    ],
    "question": "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "and",
      "email",
      "addresses",
      "of",
      "all",
      "customers",
      "who",
      "have",
      "an",
      "outstanding",
      "balance",
      "of",
      "more",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Marina",
      "''",
      "OR",
      "last_name",
      "=",
      "``",
      "Kohler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "or",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?",
    "question_toks": [
      "What",
      "is",
      "the",
      "status",
      "code",
      ",",
      "mobile",
      "phone",
      "number",
      "and",
      "email",
      "address",
      "of",
      "customer",
      "with",
      "last",
      "name",
      "as",
      "Kohler",
      "or",
      "first",
      "name",
      "as",
      "Marina",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Marina\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Kohler\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Marina",
      "''",
      "OR",
      "last_name",
      "=",
      "``",
      "Kohler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "cell_mobile_phone_number",
      ",",
      "email_address",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "or",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the status code, phone number, and email address of the customer whose last name is Kohler or whose first name is Marina?",
    "question_toks": [
      "What",
      "is",
      "the",
      "status",
      "code",
      ",",
      "phone",
      "number",
      ",",
      "and",
      "email",
      "address",
      "of",
      "the",
      "customer",
      "whose",
      "last",
      "name",
      "is",
      "Kohler",
      "or",
      "whose",
      "first",
      "name",
      "is",
      "Marina",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Marina\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Kohler\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
    "question_toks": [
      "When",
      "are",
      "the",
      "birthdays",
      "of",
      "customer",
      "who",
      "are",
      "classified",
      "as",
      "'Good",
      "Customer",
      "'",
      "status",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "of",
      "every",
      "customer",
      "whose",
      "status",
      "code",
      "is",
      "'Good",
      "Customer",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Bernhard",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did customer with first name as Carole and last name as Bernhard became a customer?",
    "question_toks": [
      "When",
      "did",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Carole",
      "and",
      "last",
      "name",
      "as",
      "Bernhard",
      "became",
      "a",
      "customer",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
    "query_toks": [
      "SELECT",
      "date_became_customer",
      "FROM",
      "Customers",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "last_name",
      "=",
      "``",
      "Bernhard",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "date_became_customer",
      "from",
      "customers",
      "where",
      "first_name",
      "=",
      "value",
      "and",
      "last_name",
      "=",
      "value"
    ],
    "question": "When did Carole Bernhard first become a customer?",
    "question_toks": [
      "When",
      "did",
      "Carole",
      "Bernhard",
      "first",
      "become",
      "a",
      "customer",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers in total?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "GROUP",
      "BY",
      "customer_status_code",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "group",
      "by",
      "customer_status_code"
    ],
    "question": "List all customer status codes and the number of customers having each status code.",
    "question_toks": [
      "List",
      "all",
      "customer",
      "status",
      "codes",
      "and",
      "the",
      "number",
      "of",
      "customers",
      "having",
      "each",
      "status",
      "code",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "GROUP",
      "BY",
      "customer_status_code",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "group",
      "by",
      "customer_status_code"
    ],
    "question": "For each customer status code, how many customers are classified that way?",
    "question_toks": [
      "For",
      "each",
      "customer",
      "status",
      "code",
      ",",
      "how",
      "many",
      "customers",
      "are",
      "classified",
      "that",
      "way",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      "FROM",
      "Customers",
      "GROUP",
      "BY",
      "customer_status_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      "from",
      "customers",
      "group",
      "by",
      "customer_status_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which customer status code has least number of customers?",
    "question_toks": [
      "Which",
      "customer",
      "status",
      "code",
      "has",
      "least",
      "number",
      "of",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "customer_status_code",
      "FROM",
      "Customers",
      "GROUP",
      "BY",
      "customer_status_code",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "customer_status_code",
      "from",
      "customers",
      "group",
      "by",
      "customer_status_code",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the status code with the least number of customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "status",
      "code",
      "with",
      "the",
      "least",
      "number",
      "of",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Rylan",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Goodwin",
      "''",
      "AND",
      "T1.lesson_status_code",
      "=",
      "``",
      "Completed",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "taken",
      "by",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Rylan",
      "and",
      "last",
      "name",
      "as",
      "Goodwin",
      "were",
      "completed",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Rylan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Goodwin\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Completed\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Rylan",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Goodwin",
      "''",
      "AND",
      "T1.lesson_status_code",
      "=",
      "``",
      "Completed",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons did the customer Ryan Goodwin complete?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "did",
      "the",
      "customer",
      "Ryan",
      "Goodwin",
      "complete",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Rylan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Goodwin\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Completed\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "from",
      "customers"
    ],
    "question": "What is maximum, minimum and average amount of outstanding of customer?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      ",",
      "minimum",
      "and",
      "average",
      "amount",
      "of",
      "outstanding",
      "of",
      "customer",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "min",
      "(",
      "amount_outstanding",
      ")",
      ",",
      "avg",
      "(",
      "amount_outstanding",
      ")",
      "from",
      "customers"
    ],
    "question": "What is the maximum, minimum, and average amount of money outsanding for all customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      ",",
      "minimum",
      ",",
      "and",
      "average",
      "amount",
      "of",
      "money",
      "outsanding",
      "for",
      "all",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ],
          [
            5,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      "BETWEEN",
      "1000",
      "AND",
      "3000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "customers",
      "have",
      "the",
      "amount",
      "of",
      "outstanding",
      "between",
      "1000",
      "and",
      "3000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          1000.0,
          3000.0
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",
    "query_toks": [
      "SELECT",
      "first_name",
      ",",
      "last_name",
      "FROM",
      "Customers",
      "WHERE",
      "amount_outstanding",
      "BETWEEN",
      "1000",
      "AND",
      "3000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      ",",
      "last_name",
      "from",
      "customers",
      "where",
      "amount_outstanding",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "all",
      "customers",
      "with",
      "between",
      "1000",
      "and",
      "3000",
      "dollars",
      "outstanding",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          1000.0,
          3000.0
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.last_name",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T2.city",
      "=",
      "``",
      "Lockmanfurt",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "List first name and last name of customers lived in city Lockmanfurt.",
    "question_toks": [
      "List",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "customers",
      "lived",
      "in",
      "city",
      "Lockmanfurt",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Lockmanfurt\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
    "query_toks": [
      "SELECT",
      "T1.first_name",
      ",",
      "T1.last_name",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T2.city",
      "=",
      "``",
      "Lockmanfurt",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "first_name",
      ",",
      "t1",
      ".",
      "last_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "What are the first and last names of all customers who lived in Lockmanfurt?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "all",
      "customers",
      "who",
      "lived",
      "in",
      "Lockmanfurt",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Lockmanfurt\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "T2.country",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T1.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T1.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "country",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t1",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Carole",
      "and",
      "last",
      "name",
      "as",
      "Bernhard",
      "lived",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "T2.country",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T1.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T1.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "country",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t1",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the country in which the customer Carole Bernhard lived?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "in",
      "which",
      "the",
      "customer",
      "Carole",
      "Bernhard",
      "lived",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "T2.zip_postcode",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T1.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T1.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "zip_postcode",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t1",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is zip code of customer with first name as Carole and last name as Bernhard?",
    "question_toks": [
      "What",
      "is",
      "zip",
      "code",
      "of",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Carole",
      "and",
      "last",
      "name",
      "as",
      "Bernhard",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "T2.zip_postcode",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "WHERE",
      "T1.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T1.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "zip_postcode",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "where",
      "t1",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the zip code of the customer Carole Bernhard?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "of",
      "the",
      "customer",
      "Carole",
      "Bernhard",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.city",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "GROUP",
      "BY",
      "T2.city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "city",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "group",
      "by",
      "t2",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which city does has most number of customers?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "has",
      "most",
      "number",
      "of",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "T2.city",
      "FROM",
      "Customers",
      "AS",
      "T1",
      "JOIN",
      "Addresses",
      "AS",
      "T2",
      "ON",
      "T1.customer_address_id",
      "=",
      "T2.address_id",
      "GROUP",
      "BY",
      "T2.city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "city",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "addresses",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_address_id",
      "=",
      "t2",
      ".",
      "address_id",
      "group",
      "by",
      "t2",
      ".",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the city with the most customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "city",
      "with",
      "the",
      "most",
      "customers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T1.amount_payment",
      ")",
      "FROM",
      "Customer_Payments",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t1",
      ".",
      "amount_payment",
      ")",
      "from",
      "customer_payments",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?",
    "question_toks": [
      "How",
      "much",
      "in",
      "total",
      "does",
      "customer",
      "with",
      "first",
      "name",
      "as",
      "Carole",
      "and",
      "last",
      "name",
      "as",
      "Bernhard",
      "paid",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "T1.amount_payment",
      ")",
      "FROM",
      "Customer_Payments",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Carole",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Bernhard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t1",
      ".",
      "amount_payment",
      ")",
      "from",
      "customer_payments",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the total amount of moeny paid by the customer Carole Bernhard?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "moeny",
      "paid",
      "by",
      "the",
      "customer",
      "Carole",
      "Bernhard",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Carole\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Bernhard\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Customer_Payments",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_payments",
      ")"
    ],
    "question": "List the number of customers that did not have any payment history.",
    "question_toks": [
      "List",
      "the",
      "number",
      "of",
      "customers",
      "that",
      "did",
      "not",
      "have",
      "any",
      "payment",
      "history",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      "WHERE",
      "customer_id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "customer_id",
      "FROM",
      "Customer_Payments",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "customer_id",
      "not",
      "in",
      "(",
      "select",
      "customer_id",
      "from",
      "customer_payments",
      ")"
    ],
    "question": "How many customers have no payment histories?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "no",
      "payment",
      "histories",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  4
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      29,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;",
    "query_toks": [
      "SELECT",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Customer_Payments",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "customer_payments",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List first name and last name of customers that have more than 2 payments.",
    "question_toks": [
      "List",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "customers",
      "that",
      "have",
      "more",
      "than",
      "2",
      "payments",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;",
    "query_toks": [
      "SELECT",
      "T2.first_name",
      ",",
      "T2.last_name",
      "FROM",
      "Customer_Payments",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "first_name",
      ",",
      "t2",
      ".",
      "last_name",
      "from",
      "customer_payments",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the first and last names of all customers with more than 2 payments?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "names",
      "of",
      "all",
      "customers",
      "with",
      "more",
      "than",
      "2",
      "payments",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customer_Payments",
      "GROUP",
      "BY",
      "payment_method_code",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_payments",
      "group",
      "by",
      "payment_method_code"
    ],
    "question": "List all payment methods and number of payments using each payment methods.",
    "question_toks": [
      "List",
      "all",
      "payment",
      "methods",
      "and",
      "number",
      "of",
      "payments",
      "using",
      "each",
      "payment",
      "methods",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          31,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customer_Payments",
      "GROUP",
      "BY",
      "payment_method_code",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_payments",
      "group",
      "by",
      "payment_method_code"
    ],
    "question": "For each payment method, how many payments were made?",
    "question_toks": [
      "For",
      "each",
      "payment",
      "method",
      ",",
      "how",
      "many",
      "payments",
      "were",
      "made",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          31,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons were in cancelled state?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "were",
      "in",
      "cancelled",
      "state",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons have been cancelled?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "have",
      "been",
      "cancelled",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";",
    "query_toks": [
      "SELECT",
      "T1.lesson_id",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      "AND",
      "nickname",
      "LIKE",
      "``",
      "%",
      "s",
      "%",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lesson_id",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value",
      "and",
      "nickname",
      "like",
      "value"
    ],
    "question": "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",
    "question_toks": [
      "List",
      "lesson",
      "id",
      "of",
      "all",
      "lessons",
      "taught",
      "by",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      ",",
      "last",
      "name",
      "as",
      "Sawayn",
      "and",
      "nickname",
      "containing",
      "letter",
      "'s",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ],
        "and",
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%s%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";",
    "query_toks": [
      "SELECT",
      "T1.lesson_id",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      "AND",
      "nickname",
      "LIKE",
      "``",
      "%",
      "s",
      "%",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lesson_id",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value",
      "and",
      "nickname",
      "like",
      "value"
    ],
    "question": "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?",
    "question_toks": [
      "What",
      "are",
      "the",
      "the",
      "lesson",
      "ids",
      "of",
      "all",
      "staff",
      "taught",
      "by",
      "Janessa",
      "Sawayn",
      "whose",
      "nickname",
      "has",
      "the",
      "letter",
      "s",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ],
        "and",
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%s%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "like",
      "value"
    ],
    "question": "How many lessons taught by staff whose first name has letter 'a' in it?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "taught",
      "by",
      "staff",
      "whose",
      "first",
      "name",
      "has",
      "letter",
      "'a",
      "'",
      "in",
      "it",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "like",
      "value"
    ],
    "question": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "were",
      "taught",
      "by",
      "a",
      "staff",
      "member",
      "whose",
      "first",
      "name",
      "has",
      "the",
      "letter",
      "'a",
      "'",
      "in",
      "it",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "lesson_time",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "lesson_time",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "total",
      "lesson",
      "time",
      "taught",
      "by",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "lesson_time",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "lesson_time",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the total time for all lessons taught by Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "time",
      "for",
      "all",
      "lessons",
      "taught",
      "by",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?",
    "question_toks": [
      "What",
      "is",
      "average",
      "lesson",
      "price",
      "taught",
      "by",
      "staff",
      "with",
      "first",
      "name",
      "as",
      "Janessa",
      "and",
      "last",
      "name",
      "as",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Janessa",
      "''",
      "AND",
      "T2.last_name",
      "=",
      "``",
      "Sawayn",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the average price for a lesson taught by Janessa Sawayn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "a",
      "lesson",
      "taught",
      "by",
      "Janessa",
      "Sawayn",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                40,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Janessa\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Sawayn\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Ray",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many lesson does customer with first name Ray took?",
    "question_toks": [
      "How",
      "many",
      "lesson",
      "does",
      "customer",
      "with",
      "first",
      "name",
      "Ray",
      "took",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Ray\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.first_name",
      "=",
      "``",
      "Ray",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many lessons did the customer with the first name Ray take?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "did",
      "the",
      "customer",
      "with",
      "the",
      "first",
      "name",
      "Ray",
      "take",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Ray\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "Customers",
      "INTERSECT",
      "SELECT",
      "last_name",
      "FROM",
      "Staff"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "customers",
      "intersect",
      "select",
      "last_name",
      "from",
      "staff"
    ],
    "question": "Which last names are both used by customers and by staff?",
    "question_toks": [
      "Which",
      "last",
      "names",
      "are",
      "both",
      "used",
      "by",
      "customers",
      "and",
      "by",
      "staff",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "Customers",
      "INTERSECT",
      "SELECT",
      "last_name",
      "FROM",
      "Staff"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "customers",
      "intersect",
      "select",
      "last_name",
      "from",
      "staff"
    ],
    "question": "What are the last names that are used by customers and staff?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "that",
      "are",
      "used",
      "by",
      "customers",
      "and",
      "staff",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Staff",
      "EXCEPT",
      "SELECT",
      "T2.first_name",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "staff",
      "except",
      "select",
      "t2",
      ".",
      "first_name",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id"
    ],
    "question": "What is the first name of the staff who did not give any lesson?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "the",
      "staff",
      "who",
      "did",
      "not",
      "give",
      "any",
      "lesson",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  36,
                  false
                ],
                null
              ],
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              5
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Staff",
      "EXCEPT",
      "SELECT",
      "T2.first_name",
      "FROM",
      "Lessons",
      "AS",
      "T1",
      "JOIN",
      "Staff",
      "AS",
      "T2",
      "ON",
      "T1.staff_id",
      "=",
      "T2.staff_id"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "staff",
      "except",
      "select",
      "t2",
      ".",
      "first_name",
      "from",
      "lessons",
      "as",
      "t1",
      "join",
      "staff",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "staff_id",
      "=",
      "t2",
      ".",
      "staff_id"
    ],
    "question": "What is the first name of all employees who do not give any lessons?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "all",
      "employees",
      "who",
      "do",
      "not",
      "give",
      "any",
      "lessons",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  36,
                  false
                ],
                null
              ],
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              5
            ],
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.vehicle_id",
      ",",
      "T1.vehicle_details",
      "FROM",
      "Vehicles",
      "AS",
      "T1",
      "JOIN",
      "Lessons",
      "AS",
      "T2",
      "ON",
      "T1.vehicle_id",
      "=",
      "T2.vehicle_id",
      "GROUP",
      "BY",
      "T1.vehicle_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "vehicle_id",
      ",",
      "t1",
      ".",
      "vehicle_details",
      "from",
      "vehicles",
      "as",
      "t1",
      "join",
      "lessons",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "vehicle_id",
      "=",
      "t2",
      ".",
      "vehicle_id",
      "group",
      "by",
      "t1",
      ".",
      "vehicle_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id and detail of the vehicle used in lessons for most of the times?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "and",
      "detail",
      "of",
      "the",
      "vehicle",
      "used",
      "in",
      "lessons",
      "for",
      "most",
      "of",
      "the",
      "times",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              37,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "How many faculty do we have?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "What is the total number of faculty members?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT rank FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "rank",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "rank",
      "from",
      "faculty"
    ],
    "question": "What ranks do we have for faculty?",
    "question_toks": [
      "What",
      "ranks",
      "do",
      "we",
      "have",
      "for",
      "faculty",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT rank FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "rank",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "rank",
      "from",
      "faculty"
    ],
    "question": "Find the list of distinct ranks for faculty.",
    "question_toks": [
      "Find",
      "the",
      "list",
      "of",
      "distinct",
      "ranks",
      "for",
      "faculty",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT building FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "faculty"
    ],
    "question": "Show all the distinct buildings that have faculty rooms.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "distinct",
      "buildings",
      "that",
      "have",
      "faculty",
      "rooms",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT building FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "faculty"
    ],
    "question": "What buildings have faculty offices?",
    "question_toks": [
      "What",
      "buildings",
      "have",
      "faculty",
      "offices",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "fname",
      ",",
      "lname",
      "from",
      "faculty"
    ],
    "question": "Show the rank, first name, and last name for all the faculty.",
    "question_toks": [
      "Show",
      "the",
      "rank",
      ",",
      "first",
      "name",
      ",",
      "and",
      "last",
      "name",
      "for",
      "all",
      "the",
      "faculty",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "Fname",
      ",",
      "Lname",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "fname",
      ",",
      "lname",
      "from",
      "faculty"
    ],
    "question": "What are the rank, first name, and last name of the faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "rank",
      ",",
      "first",
      "name",
      ",",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "phone",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "phone",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show the first name, last name, and phone number for all female faculty members.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "phone",
      "number",
      "for",
      "all",
      "female",
      "faculty",
      "members",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'",
    "query_toks": [
      "SELECT",
      "Fname",
      ",",
      "Lname",
      ",",
      "phone",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      ",",
      "phone",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the first name, last name, and phone number of all the female faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      ",",
      "last",
      "name",
      ",",
      "and",
      "phone",
      "number",
      "of",
      "all",
      "the",
      "female",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show ids for all the male faculty.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "the",
      "male",
      "faculty",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the faculty ids of all the male faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "faculty",
      "ids",
      "of",
      "all",
      "the",
      "male",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'",
      "AND",
      "Rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "rank",
      "=",
      "value"
    ],
    "question": "How many female Professors do we have?",
    "question_toks": [
      "How",
      "many",
      "female",
      "Professors",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'F",
      "'",
      "AND",
      "Rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value",
      "and",
      "rank",
      "=",
      "value"
    ],
    "question": "Count the number of female Professors we have.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "female",
      "Professors",
      "we",
      "have",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Jerry",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Prince",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "from",
      "faculty",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "Show the phone, room, and building for the faculty named Jerry Prince.",
    "question_toks": [
      "Show",
      "the",
      "phone",
      ",",
      "room",
      ",",
      "and",
      "building",
      "for",
      "the",
      "faculty",
      "named",
      "Jerry",
      "Prince",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jerry\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Prince\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
    "query_toks": [
      "SELECT",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "Fname",
      "=",
      "``",
      "Jerry",
      "''",
      "AND",
      "Lname",
      "=",
      "``",
      "Prince",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      ",",
      "room",
      ",",
      "building",
      "from",
      "faculty",
      "where",
      "fname",
      "=",
      "value",
      "and",
      "lname",
      "=",
      "value"
    ],
    "question": "What are the phone, room, and building of the faculty member called Jerry Prince?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      ",",
      "room",
      ",",
      "and",
      "building",
      "of",
      "the",
      "faculty",
      "member",
      "called",
      "Jerry",
      "Prince",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Jerry\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Prince\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "How many Professors are in building NEB?",
    "question_toks": [
      "How",
      "many",
      "Professors",
      "are",
      "in",
      "building",
      "NEB",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "AND",
      "building",
      "=",
      "``",
      "NEB",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "and",
      "building",
      "=",
      "value"
    ],
    "question": "Count the number of Professors who have office in building NEB.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "Professors",
      "who",
      "have",
      "office",
      "in",
      "building",
      "NEB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"NEB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Instructor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value"
    ],
    "question": "Show the first name and last name for all the instructors.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "for",
      "all",
      "the",
      "instructors",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Instructor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"",
    "query_toks": [
      "SELECT",
      "fname",
      ",",
      "lname",
      "FROM",
      "Faculty",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Instructor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      ",",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value"
    ],
    "question": "What are the first name and last name of all the instructors?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "all",
      "the",
      "instructors",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Instructor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building",
    "query_toks": [
      "SELECT",
      "building",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "building"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "building"
    ],
    "question": "Show all the buildings along with the number of faculty members the buildings have.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "buildings",
      "along",
      "with",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "the",
      "buildings",
      "have",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building",
    "query_toks": [
      "SELECT",
      "building",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "building"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "building"
    ],
    "question": "How many faculty members does each building have? List the result with the name of the building.",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "does",
      "each",
      "building",
      "have",
      "?",
      "List",
      "the",
      "result",
      "with",
      "the",
      "name",
      "of",
      "the",
      "building",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "building",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "group",
      "by",
      "building",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which building has most faculty members?",
    "question_toks": [
      "Which",
      "building",
      "has",
      "most",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "building",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "group",
      "by",
      "building",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the building that has the largest number of faculty members.",
    "question_toks": [
      "Find",
      "the",
      "building",
      "that",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "faculty",
      "members",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "Professor",
      "''",
      "GROUP",
      "BY",
      "building",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "building",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show all the buildings that have at least 10 professors.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "buildings",
      "that",
      "have",
      "at",
      "least",
      "10",
      "professors",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "Professor",
      "''",
      "GROUP",
      "BY",
      "building",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "building",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "In which buildings are there at least ten professors?",
    "question_toks": [
      "In",
      "which",
      "buildings",
      "are",
      "there",
      "at",
      "least",
      "ten",
      "professors",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "rank"
    ],
    "question": "For each faculty rank, show the number of faculty members who have it.",
    "question_toks": [
      "For",
      "each",
      "faculty",
      "rank",
      ",",
      "show",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "who",
      "have",
      "it",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "rank"
    ],
    "question": "How many faculty members do we have for each faculty rank?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "do",
      "we",
      "have",
      "for",
      "each",
      "faculty",
      "rank",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank",
      ",",
      "sex"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "rank",
      ",",
      "sex"
    ],
    "question": "Show all the ranks and the number of male and female faculty for each rank.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "ranks",
      "and",
      "the",
      "number",
      "of",
      "male",
      "and",
      "female",
      "faculty",
      "for",
      "each",
      "rank",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ],
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
    "query_toks": [
      "SELECT",
      "rank",
      ",",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank",
      ",",
      "sex"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      ",",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "group",
      "by",
      "rank",
      ",",
      "sex"
    ],
    "question": "How many faculty members do we have for each rank and gender?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "do",
      "we",
      "have",
      "for",
      "each",
      "rank",
      "and",
      "gender",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ],
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "rank",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      "from",
      "faculty",
      "group",
      "by",
      "rank",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which rank has the smallest number of faculty members?",
    "question_toks": [
      "Which",
      "rank",
      "has",
      "the",
      "smallest",
      "number",
      "of",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "rank",
      "FROM",
      "Faculty",
      "GROUP",
      "BY",
      "rank",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "rank",
      "from",
      "faculty",
      "group",
      "by",
      "rank",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "asc",
      "limit",
      "value"
    ],
    "question": "Find the faculty rank that has the least members.",
    "question_toks": [
      "Find",
      "the",
      "faculty",
      "rank",
      "that",
      "has",
      "the",
      "least",
      "members",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex",
    "query_toks": [
      "SELECT",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "AsstProf",
      "''",
      "GROUP",
      "BY",
      "sex"
    ],
    "query_toks_no_value": [
      "select",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "sex"
    ],
    "question": "Show the number of male and female assistant professors.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "male",
      "and",
      "female",
      "assistant",
      "professors",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AsstProf\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex",
    "query_toks": [
      "SELECT",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "AsstProf",
      "''",
      "GROUP",
      "BY",
      "sex"
    ],
    "query_toks_no_value": [
      "select",
      "sex",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "sex"
    ],
    "question": "How many male and female assistant professors do we have?",
    "question_toks": [
      "How",
      "many",
      "male",
      "and",
      "female",
      "assistant",
      "professors",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AsstProf\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T2.fname",
      "=",
      "``",
      "Linda",
      "''",
      "AND",
      "T2.lname",
      "=",
      "``",
      "Smith",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t2",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "What are the first name and last name of Linda Smith's advisor?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "of",
      "Linda",
      "Smith",
      "'s",
      "advisor",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Linda\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T2.fname",
      "=",
      "``",
      "Linda",
      "''",
      "AND",
      "T2.lname",
      "=",
      "``",
      "Smith",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t2",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Who is the advisor of Linda Smith? Give me the first name and last name.",
    "question_toks": [
      "Who",
      "is",
      "the",
      "advisor",
      "of",
      "Linda",
      "Smith",
      "?",
      "Give",
      "me",
      "the",
      "first",
      "name",
      "and",
      "last",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Linda\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "T2.StuID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T1.rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "stuid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t1",
      ".",
      "rank",
      "=",
      "value"
    ],
    "question": "Show the ids of students whose advisors are professors.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "students",
      "whose",
      "advisors",
      "are",
      "professors",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"",
    "query_toks": [
      "SELECT",
      "T2.StuID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T1.rank",
      "=",
      "``",
      "Professor",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "stuid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t1",
      ".",
      "rank",
      "=",
      "value"
    ],
    "question": "Which students have professors as their advisors? Find their student ids.",
    "question_toks": [
      "Which",
      "students",
      "have",
      "professors",
      "as",
      "their",
      "advisors",
      "?",
      "Find",
      "their",
      "student",
      "ids",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"",
    "query_toks": [
      "SELECT",
      "T2.fname",
      ",",
      "T2.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Michael",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Goodrich",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "fname",
      ",",
      "t2",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Show first name and last name for all the students advised by Michael Goodrich.",
    "question_toks": [
      "Show",
      "first",
      "name",
      "and",
      "last",
      "name",
      "for",
      "all",
      "the",
      "students",
      "advised",
      "by",
      "Michael",
      "Goodrich",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michael\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Goodrich\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"",
    "query_toks": [
      "SELECT",
      "T2.fname",
      ",",
      "T2.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Michael",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Goodrich",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "fname",
      ",",
      "t2",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Which students are advised by Michael Goodrich? Give me their first and last names.",
    "question_toks": [
      "Which",
      "students",
      "are",
      "advised",
      "by",
      "Michael",
      "Goodrich",
      "?",
      "Give",
      "me",
      "their",
      "first",
      "and",
      "last",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michael\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Goodrich\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
    "query_toks": [
      "SELECT",
      "T1.FacID",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "facid",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid"
    ],
    "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
    "question_toks": [
      "Show",
      "the",
      "faculty",
      "id",
      "of",
      "each",
      "faculty",
      "member",
      ",",
      "along",
      "with",
      "the",
      "number",
      "of",
      "students",
      "he",
      "or",
      "she",
      "advises",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
    "query_toks": [
      "SELECT",
      "T1.FacID",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "facid",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid"
    ],
    "question": "What are the faculty id and the number of students each faculty has?",
    "question_toks": [
      "What",
      "are",
      "the",
      "faculty",
      "id",
      "and",
      "the",
      "number",
      "of",
      "students",
      "each",
      "faculty",
      "has",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank",
    "query_toks": [
      "SELECT",
      "T1.rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.rank"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "rank"
    ],
    "question": "Show all the faculty ranks and the number of students advised by each rank.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "faculty",
      "ranks",
      "and",
      "the",
      "number",
      "of",
      "students",
      "advised",
      "by",
      "each",
      "rank",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank",
    "query_toks": [
      "SELECT",
      "T1.rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.rank"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "rank",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "rank"
    ],
    "question": "How many students are advised by each rank of faculty? List the rank and the number of students.",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "advised",
      "by",
      "each",
      "rank",
      "of",
      "faculty",
      "?",
      "List",
      "the",
      "rank",
      "and",
      "the",
      "number",
      "of",
      "students",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the first and last name of the faculty who has the most students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "who",
      "has",
      "the",
      "most",
      "students",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give me the the first and last name of the faculty who advises the most students.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "who",
      "advises",
      "the",
      "most",
      "students",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T1.FacID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "facid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the ids for all the faculty members who have at least 2 students.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "for",
      "all",
      "the",
      "faculty",
      "members",
      "who",
      "have",
      "at",
      "least",
      "2",
      "students",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T1.FacID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Student",
      "AS",
      "T2",
      "ON",
      "T1.FacID",
      "=",
      "T2.advisor",
      "GROUP",
      "BY",
      "T1.FacID",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "facid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "student",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "advisor",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which faculty members advise two ore more students? Give me their faculty ids.",
    "question_toks": [
      "Which",
      "faculty",
      "members",
      "advise",
      "two",
      "ore",
      "more",
      "students",
      "?",
      "Give",
      "me",
      "their",
      "faculty",
      "ids",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "advisor",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "advisor",
      "from",
      "student"
    ],
    "question": "Show ids for the faculty members who don't advise any student.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "the",
      "faculty",
      "members",
      "who",
      "do",
      "n't",
      "advise",
      "any",
      "student",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "advisor",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "advisor",
      "from",
      "student"
    ],
    "question": "What are the ids of the faculty members who do not advise any student.",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "faculty",
      "members",
      "who",
      "do",
      "not",
      "advise",
      "any",
      "student",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "What activities do we have?",
    "question_toks": [
      "What",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "List all the activities we have.",
    "question_toks": [
      "List",
      "all",
      "the",
      "activities",
      "we",
      "have",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "How many activities do we have?",
    "question_toks": [
      "How",
      "many",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "Find the number of activities available.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "activities",
      "available",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "How many faculty members participate in an activity?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "participate",
      "in",
      "an",
      "activity",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "Give me the number of faculty members who participate in an activity",
    "question_toks": [
      "Give",
      "me",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "who",
      "participate",
      "in",
      "an",
      "activity"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "facid",
      "from",
      "faculty_participates_in"
    ],
    "question": "Show the ids of the faculty who don't participate in any activity.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "the",
      "faculty",
      "who",
      "do",
      "n't",
      "participate",
      "in",
      "any",
      "activity",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "facid",
      "from",
      "faculty_participates_in"
    ],
    "question": "Which faculty do not participate in any activity? Find their faculty ids.",
    "question_toks": [
      "Which",
      "faculty",
      "do",
      "not",
      "participate",
      "in",
      "any",
      "activity",
      "?",
      "Find",
      "their",
      "faculty",
      "ids",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in",
      "INTERSECT",
      "SELECT",
      "advisor",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty_participates_in",
      "intersect",
      "select",
      "advisor",
      "from",
      "student"
    ],
    "question": "Show the ids of all the faculty members who participate in an activity and advise a student.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "faculty",
      "members",
      "who",
      "participate",
      "in",
      "an",
      "activity",
      "and",
      "advise",
      "a",
      "student",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in",
      "INTERSECT",
      "SELECT",
      "advisor",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty_participates_in",
      "intersect",
      "select",
      "advisor",
      "from",
      "student"
    ],
    "question": "What are ids of the faculty members who not only participate in an activity but also advise a student.",
    "question_toks": [
      "What",
      "are",
      "ids",
      "of",
      "the",
      "faculty",
      "members",
      "who",
      "not",
      "only",
      "participate",
      "in",
      "an",
      "activity",
      "but",
      "also",
      "advise",
      "a",
      "student",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Mark",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Giuliano",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "How many activities does Mark Giuliano participate in?",
    "question_toks": [
      "How",
      "many",
      "activities",
      "does",
      "Mark",
      "Giuliano",
      "participate",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Mark\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Giuliano\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Mark",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Giuliano",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Find the number of activities Mark Giuliano is involved in.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "activities",
      "Mark",
      "Giuliano",
      "is",
      "involved",
      "in",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Mark\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Giuliano\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
    "query_toks": [
      "SELECT",
      "T3.activity_name",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "Activity",
      "AS",
      "T3",
      "ON",
      "T3.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Mark",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Giuliano",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "activity_name",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "Show the names of all the activities Mark Giuliano participates in.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "all",
      "the",
      "activities",
      "Mark",
      "Giuliano",
      "participates",
      "in",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Mark\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Giuliano\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
    "query_toks": [
      "SELECT",
      "T3.activity_name",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "Activity",
      "AS",
      "T3",
      "ON",
      "T3.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T1.fname",
      "=",
      "``",
      "Mark",
      "''",
      "AND",
      "T1.lname",
      "=",
      "``",
      "Giuliano",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "activity_name",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t1",
      ".",
      "fname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "lname",
      "=",
      "value"
    ],
    "question": "What are the names of the activities Mark Giuliano is involved in",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "activities",
      "Mark",
      "Giuliano",
      "is",
      "involved",
      "in"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Mark\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Giuliano\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.FacID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "GROUP",
      "BY",
      "T1.FacID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "facid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "group",
      "by",
      "t1",
      ".",
      "facid"
    ],
    "question": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in.",
    "question_toks": [
      "Show",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "all",
      "the",
      "faculty",
      "members",
      "who",
      "participated",
      "in",
      "some",
      "activity",
      ",",
      "together",
      "with",
      "the",
      "number",
      "of",
      "activities",
      "they",
      "participated",
      "in",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.FacID",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "GROUP",
      "BY",
      "T1.FacID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      ",",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "facid",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "group",
      "by",
      "t1",
      ".",
      "facid"
    ],
    "question": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "members",
      "who",
      "participated",
      "in",
      "at",
      "least",
      "one",
      "activity",
      "?",
      "For",
      "each",
      "of",
      "them",
      ",",
      "also",
      "show",
      "the",
      "number",
      "of",
      "activities",
      "they",
      "participated",
      "in",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid"
    ],
    "question": "Show all the activity names and the number of faculty involved in each activity.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "activity",
      "names",
      "and",
      "the",
      "number",
      "of",
      "faculty",
      "involved",
      "in",
      "each",
      "activity",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid"
    ],
    "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "participate",
      "in",
      "each",
      "activity",
      "?",
      "Return",
      "the",
      "activity",
      "names",
      "and",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "GROUP",
      "BY",
      "T1.FacID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the first and last name of the faculty participating in the most activities?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "participating",
      "in",
      "the",
      "most",
      "activities",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "GROUP",
      "BY",
      "T1.FacID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "group",
      "by",
      "t1",
      ".",
      "facid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the first and last name of the faculty who is involved in the largest number of activities.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "faculty",
      "who",
      "is",
      "involved",
      "in",
      "the",
      "largest",
      "number",
      "of",
      "activities",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the activity that has the most faculty members involved in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "activity",
      "that",
      "has",
      "the",
      "most",
      "faculty",
      "members",
      "involved",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which activity has the most faculty members participating in? Find the activity name.",
    "question_toks": [
      "Which",
      "activity",
      "has",
      "the",
      "most",
      "faculty",
      "members",
      "participating",
      "in",
      "?",
      "Find",
      "the",
      "activity",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "participates_in"
    ],
    "question": "Show the ids of the students who don't participate in any activity.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "do",
      "n't",
      "participate",
      "in",
      "any",
      "activity",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "participates_in"
    ],
    "question": "What are the ids of the students who are not involved in any activity",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "are",
      "not",
      "involved",
      "in",
      "any",
      "activity"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "<",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "participates_in",
      "intersect",
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "Show the ids for all the students who participate in an activity and are under 20.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "for",
      "all",
      "the",
      "students",
      "who",
      "participate",
      "in",
      "an",
      "activity",
      "and",
      "are",
      "under",
      "20",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            4,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            20.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in",
      "INTERSECT",
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "<",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "participates_in",
      "intersect",
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "What are the ids of the students who are under 20 years old and are involved in at least one activity.",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "are",
      "under",
      "20",
      "years",
      "old",
      "and",
      "are",
      "involved",
      "in",
      "at",
      "least",
      "one",
      "activity",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              3
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  7,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            4,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            20.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Student",
      "AS",
      "T1",
      "JOIN",
      "Participates_in",
      "AS",
      "T2",
      "ON",
      "T1.StuID",
      "=",
      "T2.StuID",
      "GROUP",
      "BY",
      "T1.StuID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the first and last name of the student participating in the most activities?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "student",
      "participating",
      "in",
      "the",
      "most",
      "activities",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.fname",
      ",",
      "T1.lname",
      "FROM",
      "Student",
      "AS",
      "T1",
      "JOIN",
      "Participates_in",
      "AS",
      "T2",
      "ON",
      "T1.StuID",
      "=",
      "T2.StuID",
      "GROUP",
      "BY",
      "T1.StuID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "fname",
      ",",
      "t1",
      ".",
      "lname",
      "from",
      "student",
      "as",
      "t1",
      "join",
      "participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "stuid",
      "=",
      "t2",
      ".",
      "stuid",
      "group",
      "by",
      "t1",
      ".",
      "stuid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Tell me the first and last name of the student who has the most activities.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "first",
      "and",
      "last",
      "name",
      "of",
      "the",
      "student",
      "who",
      "has",
      "the",
      "most",
      "activities",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the activity with the most students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "activity",
      "with",
      "the",
      "most",
      "students",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.activity_name",
      "FROM",
      "Activity",
      "AS",
      "T1",
      "JOIN",
      "Participates_in",
      "AS",
      "T2",
      "ON",
      "T1.actID",
      "=",
      "T2.actID",
      "GROUP",
      "BY",
      "T1.actID",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "activity_name",
      "from",
      "activity",
      "as",
      "t1",
      "join",
      "participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "group",
      "by",
      "t1",
      ".",
      "actid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the activity that has the largest number of student participants.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "activity",
      "that",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "student",
      "participants",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "OR",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "the",
      "faculty",
      "members",
      "who",
      "are",
      "playing",
      "Canoeing",
      "or",
      "Kayaking",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kayaking\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "OR",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
    "question_toks": [
      "Which",
      "faculty",
      "members",
      "are",
      "playing",
      "either",
      "Canoeing",
      "or",
      "Kayaking",
      "?",
      "Tell",
      "me",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kayaking\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "faculty",
      "WHERE",
      "rank",
      "=",
      "'Professor",
      "'",
      "EXCEPT",
      "SELECT",
      "DISTINCT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "OR",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "except",
      "select",
      "distinct",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Find the first names of professors who are not playing Canoeing or Kayaking.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "professors",
      "who",
      "are",
      "not",
      "playing",
      "Canoeing",
      "or",
      "Kayaking",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ],
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              4
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  16,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Canoeing\"",
            null
          ],
          "or",
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "faculty",
      "WHERE",
      "rank",
      "=",
      "'Professor",
      "'",
      "EXCEPT",
      "SELECT",
      "DISTINCT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "OR",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "except",
      "select",
      "distinct",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "or",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "What are the first names of the professors who do not play Canoeing or Kayaking as activities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "the",
      "professors",
      "who",
      "do",
      "not",
      "play",
      "Canoeing",
      "or",
      "Kayaking",
      "as",
      "activities",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ],
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              4
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          true,
          [
            [
              0,
              [
                0,
                [
                  0,
                  16,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Canoeing\"",
            null
          ],
          "or",
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Find the first names of the faculty members who participate in Canoeing and Kayaking.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "the",
      "faculty",
      "members",
      "who",
      "participate",
      "in",
      "Canoeing",
      "and",
      "Kayaking",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ],
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              4
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  16,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Canoeing",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.lname",
      "FROM",
      "Faculty",
      "AS",
      "T1",
      "JOIN",
      "Faculty_participates_in",
      "AS",
      "T2",
      "ON",
      "T1.facID",
      "=",
      "T2.facID",
      "JOIN",
      "activity",
      "AS",
      "T3",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T3.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "lname",
      "from",
      "faculty",
      "as",
      "t1",
      "join",
      "faculty_participates_in",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "facid",
      "=",
      "t2",
      ".",
      "facid",
      "join",
      "activity",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t3",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "What are the first names of the faculty members playing both Canoeing and Kayaking?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "the",
      "faculty",
      "members",
      "playing",
      "both",
      "Canoeing",
      "and",
      "Kayaking",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ],
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              4
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  16,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "T1.stuid",
      "FROM",
      "participates_in",
      "AS",
      "T1",
      "JOIN",
      "activity",
      "AS",
      "T2",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T2.activity_name",
      "=",
      "'Canoeing",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.stuid",
      "FROM",
      "participates_in",
      "AS",
      "T1",
      "JOIN",
      "activity",
      "AS",
      "T2",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T2.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "participates_in",
      "as",
      "t1",
      "join",
      "activity",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t2",
      ".",
      "activity_name",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "participates_in",
      "as",
      "t1",
      "join",
      "activity",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t2",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Find the ids of the students who participate in Canoeing and Kayaking.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "participate",
      "in",
      "Canoeing",
      "and",
      "Kayaking",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'",
    "query_toks": [
      "SELECT",
      "T1.stuid",
      "FROM",
      "participates_in",
      "AS",
      "T1",
      "JOIN",
      "activity",
      "AS",
      "T2",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T2.activity_name",
      "=",
      "'Canoeing",
      "'",
      "INTERSECT",
      "SELECT",
      "T1.stuid",
      "FROM",
      "participates_in",
      "AS",
      "T1",
      "JOIN",
      "activity",
      "AS",
      "T2",
      "ON",
      "T2.actid",
      "=",
      "T2.actid",
      "WHERE",
      "T2.activity_name",
      "=",
      "'Kayaking",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "participates_in",
      "as",
      "t1",
      "join",
      "activity",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t2",
      ".",
      "activity_name",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "stuid",
      "from",
      "participates_in",
      "as",
      "t1",
      "join",
      "activity",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "actid",
      "=",
      "t2",
      ".",
      "actid",
      "where",
      "t2",
      ".",
      "activity_name",
      "=",
      "value"
    ],
    "question": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.",
    "question_toks": [
      "Which",
      "students",
      "participate",
      "in",
      "both",
      "Canoeing",
      "and",
      "Kayaking",
      "as",
      "their",
      "activities",
      "?",
      "Tell",
      "me",
      "their",
      "student",
      "ids",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              1
            ],
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            "\"Kayaking\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Canoeing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the name of the airport in the city of Goroka.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the names of the airports in the city of Goroka?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "and",
      "altitude",
      "(",
      "or",
      "elevation",
      ")",
      "of",
      "the",
      "airports",
      "in",
      "the",
      "city",
      "of",
      "New",
      "York",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "elevation",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the name, city, country, and elevation for every airport in the city of New York?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      ",",
      "city",
      ",",
      "country",
      ",",
      "and",
      "elevation",
      "for",
      "every",
      "airport",
      "in",
      "the",
      "city",
      "of",
      "New",
      "York",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "How many airlines are there?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "What is the total number of airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "airlines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many airlines does Russia has?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "does",
      "Russia",
      "has",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the number of airlines based in Russia?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "airlines",
      "based",
      "in",
      "Russia",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the maximum elevation of all airports in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "elevation",
      "of",
      "all",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the highest elevation of an airport in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "highest",
      "elevation",
      "of",
      "an",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Cuba",
      "'",
      "OR",
      "country",
      "=",
      "'Argentina",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "Find the name of the airports located in Cuba or Argentina.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "airports",
      "located",
      "in",
      "Cuba",
      "or",
      "Argentina",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Cuba\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Argentina\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Cuba",
      "'",
      "OR",
      "country",
      "=",
      "'Argentina",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "or",
      "country",
      "=",
      "value"
    ],
    "question": "What are the names of all airports in Cuba or Argentina?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "airports",
      "in",
      "Cuba",
      "or",
      "Argentina",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Cuba\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Argentina\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the country of the airlines whose name starts with 'Orbit'.",
    "question_toks": [
      "Find",
      "the",
      "country",
      "of",
      "the",
      "airlines",
      "whose",
      "name",
      "starts",
      "with",
      "'Orbit",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the countries of all airlines whose names start with Orbit?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "of",
      "all",
      "airlines",
      "whose",
      "names",
      "start",
      "with",
      "Orbit",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "elevation",
      "BETWEEN",
      "-50",
      "AND",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "elevation",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "Find the name of airports whose altitude is between -50 and 50.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "airports",
      "whose",
      "altitude",
      "is",
      "between",
      "-50",
      "and",
      "50",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          -50.0,
          50.0
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "elevation",
      "BETWEEN",
      "-50",
      "AND",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "elevation",
      "between",
      "value",
      "and",
      "value"
    ],
    "question": "What are the names of all airports whose elevation is between -50 and 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "airports",
      "whose",
      "elevation",
      "is",
      "between",
      "-50",
      "and",
      "50",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          1,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          -50.0,
          50.0
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which country is the airport that has the highest altitude located in?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "the",
      "airport",
      "that",
      "has",
      "the",
      "highest",
      "altitude",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the country of the airport with the highest elevation?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "highest",
      "elevation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the number of airports whose name contain the word 'International'.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "airports",
      "whose",
      "name",
      "contain",
      "the",
      "word",
      "'International",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "How many airports' names have the word Interanation in them?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "'",
      "names",
      "have",
      "the",
      "word",
      "Interanation",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many different cities do have some airport in the country of Greenland?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "do",
      "have",
      "some",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "In how many cities are there airports in the country of Greenland?",
    "question_toks": [
      "In",
      "how",
      "many",
      "cities",
      "are",
      "there",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "WHERE",
      "T1.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the number of routes operated by American Airlines.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "operated",
      "by",
      "American",
      "Airlines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "WHERE",
      "T1.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many routes does American Airlines operate?",
    "question_toks": [
      "How",
      "many",
      "routes",
      "does",
      "American",
      "Airlines",
      "operate",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "Find the number of routes whose destination airports are in Canada.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "whose",
      "destination",
      "airports",
      "are",
      "in",
      "Canada",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many routes end in a Canadian airport?",
    "question_toks": [
      "How",
      "many",
      "routes",
      "end",
      "in",
      "a",
      "Canadian",
      "airport",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "limit",
      "value"
    ],
    "question": "Find the name, city, and country of the airport that has the lowest altitude.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "city",
      ",",
      "and",
      "country",
      "of",
      "the",
      "airport",
      "that",
      "has",
      "the",
      "lowest",
      "altitude",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "limit",
      "value"
    ],
    "question": "What is the name, city, and country of the airport with the lowest altitude?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      ",",
      "city",
      ",",
      "and",
      "country",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "lowest",
      "altitude",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name, city, and country of the airport that has the highest latitude.",
    "question_toks": [
      "Find",
      "the",
      "name",
      ",",
      "city",
      ",",
      "and",
      "country",
      "of",
      "the",
      "airport",
      "that",
      "has",
      "the",
      "highest",
      "latitude",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "city",
      ",",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "city",
      ",",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name, city, and country of the airport with the highest elevation?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      ",",
      "city",
      ",",
      "and",
      "country",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "highest",
      "elevation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.city",
      ",",
      "T2.dst_apid",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "GROUP",
      "BY",
      "T2.dst_apid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "city",
      ",",
      "t2",
      ".",
      "dst_apid",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "group",
      "by",
      "t2",
      ".",
      "dst_apid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name and city of the airport which is the destination of the most number of routes.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "city",
      "of",
      "the",
      "airport",
      "which",
      "is",
      "the",
      "destination",
      "of",
      "the",
      "most",
      "number",
      "of",
      "routes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.city",
      ",",
      "T2.dst_apid",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "GROUP",
      "BY",
      "T2.dst_apid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "city",
      ",",
      "t2",
      ".",
      "dst_apid",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "group",
      "by",
      "t2",
      ".",
      "dst_apid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and city of the airport that the most routes end at?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "city",
      "of",
      "the",
      "airport",
      "that",
      "the",
      "most",
      "routes",
      "end",
      "at",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          2,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T2.alid",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T2.alid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "alid",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t2",
      ".",
      "alid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the names of the top 10 airlines that operate the most number of routes.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "top",
      "10",
      "airlines",
      "that",
      "operate",
      "the",
      "most",
      "number",
      "of",
      "routes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 10,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T2.alid",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T2.alid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t2",
      ".",
      "alid",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t2",
      ".",
      "alid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "For the airline ids with the top 10 most routes operated, what are their names?",
    "question_toks": [
      "For",
      "the",
      "airline",
      "ids",
      "with",
      "the",
      "top",
      "10",
      "most",
      "routes",
      "operated",
      ",",
      "what",
      "are",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 10,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.city",
      ",",
      "T2.src_apid",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T2.src_apid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "city",
      ",",
      "t2",
      ".",
      "src_apid",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t2",
      ".",
      "src_apid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name and city of the airport which is the source for the most number of flight routes.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "city",
      "of",
      "the",
      "airport",
      "which",
      "is",
      "the",
      "source",
      "for",
      "the",
      "most",
      "number",
      "of",
      "flight",
      "routes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      ",",
      "T1.city",
      ",",
      "T2.src_apid",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T2.src_apid",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "city",
      ",",
      "t2",
      ".",
      "src_apid",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t2",
      ".",
      "src_apid",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name and city of the airport from most of the routes start?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "city",
      "of",
      "the",
      "airport",
      "from",
      "most",
      "of",
      "the",
      "routes",
      "start",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dst_apid",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "WHERE",
      "T1.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dst_apid",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the number of different airports which are the destinations of the American Airlines.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "airports",
      "which",
      "are",
      "the",
      "destinations",
      "of",
      "the",
      "American",
      "Airlines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dst_apid",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "WHERE",
      "T1.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dst_apid",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the number of different different airports that are destinations for American Airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "different",
      "different",
      "airports",
      "that",
      "are",
      "destinations",
      "for",
      "American",
      "Airlines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries has the most number of airlines?",
    "question_toks": [
      "Which",
      "countries",
      "has",
      "the",
      "most",
      "number",
      "of",
      "airlines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the country with the most number of home airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "country",
      "with",
      "the",
      "most",
      "number",
      "of",
      "home",
      "airlines",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "active",
      "=",
      "value",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which countries has the most number of airlines whose active status is 'Y'?",
    "question_toks": [
      "Which",
      "countries",
      "has",
      "the",
      "most",
      "number",
      "of",
      "airlines",
      "whose",
      "active",
      "status",
      "is",
      "'Y",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "active",
      "=",
      "value",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the countries with the most airlines whose active status is Y?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "with",
      "the",
      "most",
      "airlines",
      "whose",
      "active",
      "status",
      "is",
      "Y",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "List all countries and their number of airlines in the descending order of number of airlines.",
    "question_toks": [
      "List",
      "all",
      "countries",
      "and",
      "their",
      "number",
      "of",
      "airlines",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "number",
      "of",
      "airlines",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "How many airlines operate out of each country in descending order?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "operate",
      "out",
      "of",
      "each",
      "country",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "airports",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "How many airports are there per country? Order the countries by decreasing number of airports.",
    "question_toks": [
      "How",
      "many",
      "airports",
      "are",
      "there",
      "per",
      "country",
      "?",
      "Order",
      "the",
      "countries",
      "by",
      "decreasing",
      "number",
      "of",
      "airports",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "country",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "country",
      "from",
      "airports",
      "group",
      "by",
      "country",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "What is the number of airports per country, ordered from most to least?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "airports",
      "per",
      "country",
      ",",
      "ordered",
      "from",
      "most",
      "to",
      "least",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.",
    "question_toks": [
      "How",
      "many",
      "airports",
      "are",
      "there",
      "per",
      "city",
      "in",
      "the",
      "United",
      "States",
      "?",
      "Order",
      "the",
      "cities",
      "by",
      "decreasing",
      "number",
      "of",
      "airports",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "How many airports are there per city in the US ordered from most to least?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "are",
      "there",
      "per",
      "city",
      "in",
      "the",
      "US",
      "ordered",
      "from",
      "most",
      "to",
      "least",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Return the cities with more than 3 airports in the United States.",
    "question_toks": [
      "Return",
      "the",
      "cities",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "in",
      "the",
      "United",
      "States",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the number of cities in the United States with more than 3 airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "the",
      "United",
      "States",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "How many cities are there that have more than 3 airports?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "there",
      "that",
      "have",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "sql",
            {
              "except": null,
              "from": {
                "conds": [],
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ]
              },
              "groupBy": [
                [
                  0,
                  11,
                  false
                ]
              ],
              "having": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      3,
                      0,
                      false
                    ],
                    null
                  ],
                  3.0,
                  null
                ]
              ],
              "intersect": null,
              "limit": null,
              "orderBy": [],
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        11,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "union": null,
              "where": []
            }
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "(",
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "(",
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      ")"
    ],
    "question": "What is the count of cities with more than 3 airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "cities",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "sql",
            {
              "except": null,
              "from": {
                "conds": [],
                "table_units": [
                  [
                    "table_unit",
                    1
                  ]
                ]
              },
              "groupBy": [
                [
                  0,
                  11,
                  false
                ]
              ],
              "having": [
                [
                  false,
                  3,
                  [
                    0,
                    [
                      3,
                      0,
                      false
                    ],
                    null
                  ],
                  3.0,
                  null
                ]
              ],
              "intersect": null,
              "limit": null,
              "orderBy": [],
              "select": [
                false,
                [
                  [
                    0,
                    [
                      0,
                      [
                        0,
                        11,
                        false
                      ],
                      null
                    ]
                  ]
                ]
              ],
              "union": null,
              "where": []
            }
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the cities which have more than one airport and number of airports.",
    "question_toks": [
      "List",
      "the",
      "cities",
      "which",
      "have",
      "more",
      "than",
      "one",
      "airport",
      "and",
      "number",
      "of",
      "airports",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the names of all cities with more than one airport and how many airports do they have?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "cities",
      "with",
      "more",
      "than",
      "one",
      "airport",
      "and",
      "how",
      "many",
      "airports",
      "do",
      "they",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")"
    ],
    "question": "List the cities which have more than 2 airports sorted by the number of airports.",
    "question_toks": [
      "List",
      "the",
      "cities",
      "which",
      "have",
      "more",
      "than",
      "2",
      "airports",
      "sorted",
      "by",
      "the",
      "number",
      "of",
      "airports",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")"
    ],
    "question": "What are the cities that have more than 2 airports sorted by number of airports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "cities",
      "that",
      "have",
      "more",
      "than",
      "2",
      "airports",
      "sorted",
      "by",
      "number",
      "of",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "Find the number of routes for each source airport and the airport name.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "for",
      "each",
      "source",
      "airport",
      "and",
      "the",
      "airport",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t1",
      ".",
      "name"
    ],
    "question": "For each airport name, how many routes start at that airport?",
    "question_toks": [
      "For",
      "each",
      "airport",
      "name",
      ",",
      "how",
      "many",
      "routes",
      "start",
      "at",
      "that",
      "airport",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "and",
      "airport",
      "name",
      "for",
      "each",
      "source",
      "airport",
      ",",
      "order",
      "the",
      "results",
      "by",
      "decreasing",
      "number",
      "of",
      "routes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc"
    ],
    "question": "For each  airport name, how many routes start at that airport, ordered from most to least?",
    "question_toks": [
      "For",
      "each",
      "airport",
      "name",
      ",",
      "how",
      "many",
      "routes",
      "start",
      "at",
      "that",
      "airport",
      ",",
      "ordered",
      "from",
      "most",
      "to",
      "least",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "elevation",
      ")",
      ",",
      "country",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "elevation",
      ")",
      ",",
      "country",
      "from",
      "airports",
      "group",
      "by",
      "country"
    ],
    "question": "Find the average elevation of all airports for each country.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "elevation",
      "of",
      "all",
      "airports",
      "for",
      "each",
      "country",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "elevation",
      ")",
      ",",
      "country",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "elevation",
      ")",
      ",",
      "country",
      "from",
      "airports",
      "group",
      "by",
      "country"
    ],
    "question": "For each country, what is the average elevation of that country's airports?",
    "question_toks": [
      "For",
      "each",
      "country",
      ",",
      "what",
      "is",
      "the",
      "average",
      "elevation",
      "of",
      "that",
      "country",
      "'s",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Find the cities which have exactly two airports.",
    "question_toks": [
      "Find",
      "the",
      "cities",
      "which",
      "have",
      "exactly",
      "two",
      "airports",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What are the cities with exactly two airports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "cities",
      "with",
      "exactly",
      "two",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name",
    "query_toks": [
      "SELECT",
      "T1.country",
      ",",
      "T1.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T1.country",
      ",",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "name"
    ],
    "question": "For each country and airline name, how many routes are there?",
    "question_toks": [
      "For",
      "each",
      "country",
      "and",
      "airline",
      "name",
      ",",
      "how",
      "many",
      "routes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ],
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name",
    "query_toks": [
      "SELECT",
      "T1.country",
      ",",
      "T1.name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T1.country",
      ",",
      "T1.name"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t1",
      ".",
      "country",
      ",",
      "t1",
      ".",
      "name"
    ],
    "question": "What is the total number of routes for each country and airline in that country?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "routes",
      "for",
      "each",
      "country",
      "and",
      "airline",
      "in",
      "that",
      "country",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ],
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "AS",
      "T1",
      "JOIN",
      "airports",
      "AS",
      "T2",
      "ON",
      "T1.dst_apid",
      "=",
      "T2.apid",
      "WHERE",
      "T2.country",
      "=",
      "'Italy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dst_apid",
      "=",
      "t2",
      ".",
      "apid",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value"
    ],
    "question": "Find the number of routes with destination airports in Italy.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "with",
      "destination",
      "airports",
      "in",
      "Italy",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Italy\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "AS",
      "T1",
      "JOIN",
      "airports",
      "AS",
      "T2",
      "ON",
      "T1.dst_apid",
      "=",
      "T2.apid",
      "WHERE",
      "T2.country",
      "=",
      "'Italy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dst_apid",
      "=",
      "t2",
      ".",
      "apid",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value"
    ],
    "question": "What is the number of routes whose destinations are Italian airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "routes",
      "whose",
      "destinations",
      "are",
      "Italian",
      "airports",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Italy\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "AS",
      "T1",
      "JOIN",
      "airports",
      "AS",
      "T2",
      "ON",
      "T1.dst_apid",
      "=",
      "T2.apid",
      "JOIN",
      "airlines",
      "AS",
      "T3",
      "ON",
      "T1.alid",
      "=",
      "T3.alid",
      "WHERE",
      "T2.country",
      "=",
      "'Italy",
      "'",
      "AND",
      "T3.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dst_apid",
      "=",
      "t2",
      ".",
      "apid",
      "join",
      "airlines",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t3",
      ".",
      "alid",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "routes",
      "with",
      "destination",
      "airport",
      "in",
      "Italy",
      "operated",
      "by",
      "the",
      "airline",
      "with",
      "name",
      "'American",
      "Airlines",
      "'",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Italy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "AS",
      "T1",
      "JOIN",
      "airports",
      "AS",
      "T2",
      "ON",
      "T1.dst_apid",
      "=",
      "T2.apid",
      "JOIN",
      "airlines",
      "AS",
      "T3",
      "ON",
      "T1.alid",
      "=",
      "T3.alid",
      "WHERE",
      "T2.country",
      "=",
      "'Italy",
      "'",
      "AND",
      "T3.name",
      "=",
      "'American",
      "Airlines",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "as",
      "t1",
      "join",
      "airports",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "dst_apid",
      "=",
      "t2",
      ".",
      "apid",
      "join",
      "airlines",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t3",
      ".",
      "alid",
      "where",
      "t2",
      ".",
      "country",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "routes",
      "operated",
      "by",
      "the",
      "airline",
      "American",
      "Airlines",
      "whose",
      "destinations",
      "are",
      "in",
      "Italy",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Italy\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"American Airlines\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "T1.name",
      "=",
      "'John",
      "F",
      "Kennedy",
      "International",
      "Airport",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the number of routes that have destination John F Kennedy International Airport.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "that",
      "have",
      "destination",
      "John",
      "F",
      "Kennedy",
      "International",
      "Airport",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"John F Kennedy International Airport\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "T1.name",
      "=",
      "'John",
      "F",
      "Kennedy",
      "International",
      "Airport",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the number of routes that end at John F Kennedy International Airport?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "routes",
      "that",
      "end",
      "at",
      "John",
      "F",
      "Kennedy",
      "International",
      "Airport",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"John F Kennedy International Airport\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "Find the number of routes from the United States to Canada.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "routes",
      "from",
      "the",
      "United",
      "States",
      "to",
      "Canada",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Canada\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Canada",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "How many routes go from the United States to Canada?",
    "question_toks": [
      "How",
      "many",
      "routes",
      "go",
      "from",
      "the",
      "United",
      "States",
      "to",
      "Canada",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"Canada\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "rid",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "Find the id of routes whose source and destination airports are in the United States.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "routes",
      "whose",
      "source",
      "and",
      "destination",
      "airports",
      "are",
      "in",
      "the",
      "United",
      "States",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
    "query_toks": [
      "SELECT",
      "rid",
      "FROM",
      "routes",
      "WHERE",
      "dst_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")",
      "AND",
      "src_apid",
      "IN",
      "(",
      "SELECT",
      "apid",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "routes",
      "where",
      "dst_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")",
      "and",
      "src_apid",
      "in",
      "(",
      "select",
      "apid",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      ")"
    ],
    "question": "What is the id of the routes whose source and destination airports are in the United States?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "routes",
      "whose",
      "source",
      "and",
      "destination",
      "airports",
      "are",
      "in",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      9,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"United States\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of airline which runs the most number of routes.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "airline",
      "which",
      "runs",
      "the",
      "most",
      "number",
      "of",
      "routes",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airlines",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.alid",
      "=",
      "T2.alid",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airlines",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "alid",
      "=",
      "t2",
      ".",
      "alid",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the airline with the most routes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "airline",
      "with",
      "the",
      "most",
      "routes",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              6,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "WHERE",
      "T1.country",
      "=",
      "'China",
      "'",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "where",
      "t1",
      ".",
      "country",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the busiest source airport that runs most number of routes in China.",
    "question_toks": [
      "Find",
      "the",
      "busiest",
      "source",
      "airport",
      "that",
      "runs",
      "most",
      "number",
      "of",
      "routes",
      "in",
      "China",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.src_apid",
      "WHERE",
      "T1.country",
      "=",
      "'China",
      "'",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "src_apid",
      "where",
      "t1",
      ".",
      "country",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the airport with the most number of routes that start in China?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "most",
      "number",
      "of",
      "routes",
      "that",
      "start",
      "in",
      "China",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "T1.country",
      "=",
      "'China",
      "'",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "t1",
      ".",
      "country",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the busiest destination airport that runs most number of routes in China.",
    "question_toks": [
      "Find",
      "the",
      "busiest",
      "destination",
      "airport",
      "that",
      "runs",
      "most",
      "number",
      "of",
      "routes",
      "in",
      "China",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.name",
      "FROM",
      "airports",
      "AS",
      "T1",
      "JOIN",
      "routes",
      "AS",
      "T2",
      "ON",
      "T1.apid",
      "=",
      "T2.dst_apid",
      "WHERE",
      "T1.country",
      "=",
      "'China",
      "'",
      "GROUP",
      "BY",
      "T1.name",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "airports",
      "as",
      "t1",
      "join",
      "routes",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "apid",
      "=",
      "t2",
      ".",
      "dst_apid",
      "where",
      "t1",
      ".",
      "country",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the airport that is the destination of the most number of routes that start in China?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "that",
      "is",
      "the",
      "destination",
      "of",
      "the",
      "most",
      "number",
      "of",
      "routes",
      "that",
      "start",
      "in",
      "China",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the most recent order?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "most",
      "recent",
      "order",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the id of the order made most recently.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "made",
      "most",
      "recently",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      ",",
      "customer_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      ",",
      "customer_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "limit",
      "value"
    ],
    "question": "what are the order id and customer id of the oldest order?",
    "question_toks": [
      "what",
      "are",
      "the",
      "order",
      "id",
      "and",
      "customer",
      "id",
      "of",
      "the",
      "oldest",
      "order",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      ",",
      "customer_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      ",",
      "customer_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "limit",
      "value"
    ],
    "question": "Find the order id and customer id associated with the oldest order.",
    "question_toks": [
      "Find",
      "the",
      "order",
      "id",
      "and",
      "customer",
      "id",
      "associated",
      "with",
      "the",
      "oldest",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Find the id of the order whose shipment tracking number is \"3452\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "whose",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
    "question_toks": [
      "Which",
      "order",
      "'s",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "id",
      "of",
      "the",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find the ids of all the order items whose product id is 11.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find all the order items whose product id is 11. What are the order item ids?",
    "question_toks": [
      "Find",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      ".",
      "What",
      "are",
      "the",
      "order",
      "item",
      "ids",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Packing",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "List the name of all the distinct customers who have orders with status \"Packing\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "the",
      "distinct",
      "customers",
      "who",
      "have",
      "orders",
      "with",
      "status",
      "``",
      "Packing",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Packing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Packing",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Which customers have orders with status \"Packing\"? Give me the customer names.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "orders",
      "with",
      "status",
      "``",
      "Packing",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "customer",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Packing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.customer_details",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "customer_details",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Find the details of all the distinct customers who have orders with status \"On Road\".",
    "question_toks": [
      "Find",
      "the",
      "details",
      "of",
      "all",
      "the",
      "distinct",
      "customers",
      "who",
      "have",
      "orders",
      "with",
      "status",
      "``",
      "On",
      "Road",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.customer_details",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "customer_details",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "customers",
      "who",
      "have",
      "orders",
      "with",
      "status",
      "``",
      "On",
      "Road",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "customer",
      "details",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the customer who has the most orders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "customer",
      "who",
      "has",
      "the",
      "most",
      "orders",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which customer made the most orders? Find the customer name.",
    "question_toks": [
      "Which",
      "customer",
      "made",
      "the",
      "most",
      "orders",
      "?",
      "Find",
      "the",
      "customer",
      "name",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the customer id of the customer who has the most orders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "customer",
      "id",
      "of",
      "the",
      "customer",
      "who",
      "has",
      "the",
      "most",
      "orders",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the id of the customer who made the most orders.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "customer",
      "who",
      "made",
      "the",
      "most",
      "orders",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
    "query_toks": [
      "SELECT",
      "T2.order_id",
      ",",
      "T2.order_status",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T1.customer_name",
      "=",
      "``",
      "Jeramie",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "order_id",
      ",",
      "t2",
      ".",
      "order_status",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t1",
      ".",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "id",
      "and",
      "status",
      "of",
      "orders",
      "which",
      "belong",
      "to",
      "the",
      "customer",
      "named",
      "``",
      "Jeramie",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Jeramie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
    "query_toks": [
      "SELECT",
      "T2.order_id",
      ",",
      "T2.order_status",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T1.customer_name",
      "=",
      "``",
      "Jeramie",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "order_id",
      ",",
      "t2",
      ".",
      "order_status",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t1",
      ".",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.",
    "question_toks": [
      "Which",
      "orders",
      "are",
      "made",
      "by",
      "the",
      "customer",
      "named",
      "``",
      "Jeramie",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "ids",
      "and",
      "status",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Jeramie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
    "query_toks": [
      "SELECT",
      "T2.date_order_placed",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T1.customer_name",
      "=",
      "``",
      "Jeramie",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "date_order_placed",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t1",
      ".",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Find the dates of orders which belong to the customer named \"Jeramie\".",
    "question_toks": [
      "Find",
      "the",
      "dates",
      "of",
      "orders",
      "which",
      "belong",
      "to",
      "the",
      "customer",
      "named",
      "``",
      "Jeramie",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Jeramie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
    "query_toks": [
      "SELECT",
      "T2.date_order_placed",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T1.customer_name",
      "=",
      "``",
      "Jeramie",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "date_order_placed",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t1",
      ".",
      "customer_name",
      "=",
      "value"
    ],
    "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "the",
      "orders",
      "made",
      "by",
      "the",
      "customer",
      "named",
      "``",
      "Jeramie",
      "''",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Jeramie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.date_order_placed",
      ">",
      "=",
      "``",
      "2009-01-01",
      "''",
      "AND",
      "T2.date_order_placed",
      "<",
      "=",
      "``",
      "2010-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "date_order_placed",
      ">",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "date_order_placed",
      "<",
      "=",
      "value"
    ],
    "question": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "names",
      "of",
      "customers",
      "who",
      "have",
      "placed",
      "orders",
      "between",
      "2009-01-01",
      "and",
      "2010-01-01",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2009-01-01\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.date_order_placed",
      ">",
      "=",
      "``",
      "2009-01-01",
      "''",
      "AND",
      "T2.date_order_placed",
      "<",
      "=",
      "``",
      "2010-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "date_order_placed",
      ">",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "date_order_placed",
      "<",
      "=",
      "value"
    ],
    "question": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.",
    "question_toks": [
      "Which",
      "customers",
      "made",
      "orders",
      "between",
      "2009-01-01",
      "and",
      "2010-01-01",
      "?",
      "Find",
      "their",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2009-01-01\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"2010-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.product_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T1.date_order_placed",
      ">",
      "=",
      "``",
      "1975-01-01",
      "''",
      "AND",
      "T1.date_order_placed",
      "<",
      "=",
      "``",
      "1976-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "product_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t1",
      ".",
      "date_order_placed",
      ">",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "date_order_placed",
      "<",
      "=",
      "value"
    ],
    "question": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "distinct",
      "product",
      "ids",
      "from",
      "orders",
      "placed",
      "between",
      "1975-01-01",
      "and",
      "1976-01-01",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"1975-01-01\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"1976-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T2.product_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T1.date_order_placed",
      ">",
      "=",
      "``",
      "1975-01-01",
      "''",
      "AND",
      "T1.date_order_placed",
      "<",
      "=",
      "``",
      "1976-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "product_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t1",
      ".",
      "date_order_placed",
      ">",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "date_order_placed",
      "<",
      "=",
      "value"
    ],
    "question": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "ids",
      "of",
      "products",
      "ordered",
      "between",
      "1975-01-01",
      "and",
      "1976-01-01",
      "?",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"1975-01-01\"",
          null
        ],
        "and",
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"1976-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Shipped",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "order",
      "status",
      "both",
      "``",
      "On",
      "Road",
      "''",
      "and",
      "``",
      "Shipped",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            "\"Shipped\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Shipped",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "both",
      "``",
      "On",
      "Road",
      "''",
      "and",
      "``",
      "Shipped",
      "''",
      "as",
      "order",
      "status",
      "?",
      "List",
      "the",
      "customer",
      "names",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            "\"Shipped\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
    "query_toks": [
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Shipped",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "order",
      "status",
      "both",
      "``",
      "On",
      "Road",
      "''",
      "and",
      "``",
      "Shipped",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            "\"Shipped\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
    "query_toks": [
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "On",
      "Road",
      "''",
      "INTERSECT",
      "SELECT",
      "T1.customer_id",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "WHERE",
      "T2.order_status",
      "=",
      "``",
      "Shipped",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value",
      "intersect",
      "select",
      "t1",
      ".",
      "customer_id",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "where",
      "t2",
      ".",
      "order_status",
      "=",
      "value"
    ],
    "question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "both",
      "``",
      "On",
      "Road",
      "''",
      "and",
      "``",
      "Shipped",
      "''",
      "as",
      "order",
      "status",
      "?",
      "List",
      "the",
      "customer",
      "ids",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                8,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ],
            "\"Shipped\"",
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"On Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
    "query_toks": [
      "SELECT",
      "T1.date_order_placed",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "shipments",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T2.shipment_tracking_number",
      "=",
      "3452"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "date_order_placed",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "shipments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t2",
      ".",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "When was the order placed whose shipment tracking number is 3452? Give me the date.",
    "question_toks": [
      "When",
      "was",
      "the",
      "order",
      "placed",
      "whose",
      "shipment",
      "tracking",
      "number",
      "is",
      "3452",
      "?",
      "Give",
      "me",
      "the",
      "date",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          3452.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
    "query_toks": [
      "SELECT",
      "T1.date_order_placed",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "shipments",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T2.shipment_tracking_number",
      "=",
      "3452"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "date_order_placed",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "shipments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t2",
      ".",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "On which day was the order placed whose shipment tracking number is 3452?",
    "question_toks": [
      "On",
      "which",
      "day",
      "was",
      "the",
      "order",
      "placed",
      "whose",
      "shipment",
      "tracking",
      "number",
      "is",
      "3452",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          3452.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
    "query_toks": [
      "SELECT",
      "T1.date_order_placed",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "shipments",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T2.invoice_number",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "date_order_placed",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "shipments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t2",
      ".",
      "invoice_number",
      "=",
      "value"
    ],
    "question": "What is the placement date of the order whose invoice number is 10?",
    "question_toks": [
      "What",
      "is",
      "the",
      "placement",
      "date",
      "of",
      "the",
      "order",
      "whose",
      "invoice",
      "number",
      "is",
      "10",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
    "query_toks": [
      "SELECT",
      "T1.date_order_placed",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "shipments",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "WHERE",
      "T2.invoice_number",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "date_order_placed",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "shipments",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "where",
      "t2",
      ".",
      "invoice_number",
      "=",
      "value"
    ],
    "question": "On what day was the order with invoice number 10 placed?",
    "question_toks": [
      "On",
      "what",
      "day",
      "was",
      "the",
      "order",
      "with",
      "invoice",
      "number",
      "10",
      "placed",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T3.product_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "JOIN",
      "products",
      "AS",
      "T3",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "AND",
      "T2.product_id",
      "=",
      "T3.product_id",
      "GROUP",
      "BY",
      "T3.product_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t3",
      ".",
      "product_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "join",
      "products",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "and",
      "t2",
      ".",
      "product_id",
      "=",
      "t3",
      ".",
      "product_id",
      "group",
      "by",
      "t3",
      ".",
      "product_id"
    ],
    "question": "List the count and id of each product in all the orders.",
    "question_toks": [
      "List",
      "the",
      "count",
      "and",
      "id",
      "of",
      "each",
      "product",
      "in",
      "all",
      "the",
      "orders",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      ",",
      "T3.product_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "JOIN",
      "products",
      "AS",
      "T3",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "AND",
      "T2.product_id",
      "=",
      "T3.product_id",
      "GROUP",
      "BY",
      "T3.product_id"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      ",",
      "t3",
      ".",
      "product_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "join",
      "products",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "and",
      "t2",
      ".",
      "product_id",
      "=",
      "t3",
      ".",
      "product_id",
      "group",
      "by",
      "t3",
      ".",
      "product_id"
    ],
    "question": "For each product, return its id and the number of times it was ordered.",
    "question_toks": [
      "For",
      "each",
      "product",
      ",",
      "return",
      "its",
      "id",
      "and",
      "the",
      "number",
      "of",
      "times",
      "it",
      "was",
      "ordered",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
    "query_toks": [
      "SELECT",
      "T3.product_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "JOIN",
      "products",
      "AS",
      "T3",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "AND",
      "T2.product_id",
      "=",
      "T3.product_id",
      "GROUP",
      "BY",
      "T3.product_id"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "product_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "join",
      "products",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "and",
      "t2",
      ".",
      "product_id",
      "=",
      "t3",
      ".",
      "product_id",
      "group",
      "by",
      "t3",
      ".",
      "product_id"
    ],
    "question": "List the name and count of each product in all orders.",
    "question_toks": [
      "List",
      "the",
      "name",
      "and",
      "count",
      "of",
      "each",
      "product",
      "in",
      "all",
      "orders",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
    "query_toks": [
      "SELECT",
      "T3.product_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "JOIN",
      "products",
      "AS",
      "T3",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "AND",
      "T2.product_id",
      "=",
      "T3.product_id",
      "GROUP",
      "BY",
      "T3.product_id"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "product_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "join",
      "products",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "and",
      "t2",
      ".",
      "product_id",
      "=",
      "t3",
      ".",
      "product_id",
      "group",
      "by",
      "t3",
      ".",
      "product_id"
    ],
    "question": "For each product, show its name and the number of times it was ordered.",
    "question_toks": [
      "For",
      "each",
      "product",
      ",",
      "show",
      "its",
      "name",
      "and",
      "the",
      "number",
      "of",
      "times",
      "it",
      "was",
      "ordered",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Find the ids of orders which are shipped after 2000-01-01.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "orders",
      "which",
      "are",
      "shipped",
      "after",
      "2000-01-01",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
    "question_toks": [
      "Which",
      "orders",
      "have",
      "shipment",
      "after",
      "2000-01-01",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "ids",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "shipment_date",
      ")",
      "FROM",
      "shipments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      "=",
      "(",
      "select",
      "max",
      "(",
      "shipment_date",
      ")",
      "from",
      "shipments",
      ")"
    ],
    "question": "Find the id of the order which is shipped most recently.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "which",
      "is",
      "shipped",
      "most",
      "recently",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      "=",
      "(",
      "SELECT",
      "max",
      "(",
      "shipment_date",
      ")",
      "FROM",
      "shipments",
      ")"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      "=",
      "(",
      "select",
      "max",
      "(",
      "shipment_date",
      ")",
      "from",
      "shipments",
      ")"
    ],
    "question": "Which order has the most recent shipment? Give me the order id.",
    "question_toks": [
      "Which",
      "order",
      "has",
      "the",
      "most",
      "recent",
      "shipment",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "id",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "products",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_name"
    ],
    "question": "List the names of all distinct products in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "products",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "products",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_name"
    ],
    "question": "Sort all the distinct products in alphabetical order.",
    "question_toks": [
      "Sort",
      "all",
      "the",
      "distinct",
      "products",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed"
    ],
    "question": "List the ids of all distinct orders ordered by placed date.",
    "question_toks": [
      "List",
      "the",
      "ids",
      "of",
      "all",
      "distinct",
      "orders",
      "ordered",
      "by",
      "placed",
      "date",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed"
    ],
    "question": "What are ids of the all distinct orders, sorted by placement date?",
    "question_toks": [
      "What",
      "are",
      "ids",
      "of",
      "the",
      "all",
      "distinct",
      "orders",
      ",",
      "sorted",
      "by",
      "placement",
      "date",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.order_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "GROUP",
      "BY",
      "T1.order_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "order_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "group",
      "by",
      "t1",
      ".",
      "order_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the order which has the most items?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "order",
      "which",
      "has",
      "the",
      "most",
      "items",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.order_id",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "order_items",
      "AS",
      "T2",
      "ON",
      "T1.order_id",
      "=",
      "T2.order_id",
      "GROUP",
      "BY",
      "T1.order_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "order_id",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "order_items",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "order_id",
      "=",
      "t2",
      ".",
      "order_id",
      "group",
      "by",
      "t1",
      ".",
      "order_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which order deals with the most items? Return the order id.",
    "question_toks": [
      "Which",
      "order",
      "deals",
      "with",
      "the",
      "most",
      "items",
      "?",
      "Return",
      "the",
      "order",
      "id",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the customer who has the largest number of orders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "customer",
      "who",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "orders",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T1.customer_id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the customer who made the most orders.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "customer",
      "who",
      "made",
      "the",
      "most",
      "orders",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "invoice_number",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "invoice_number",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.",
    "question_toks": [
      "Find",
      "the",
      "invoice",
      "numbers",
      "which",
      "are",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "invoice_number",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "invoice_number",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?",
    "question_toks": [
      "What",
      "are",
      "the",
      "invoice",
      "numbers",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "invoice_details",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "invoice_details",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "details",
      "of",
      "invoices",
      "which",
      "are",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "invoice_details",
      "FROM",
      "invoices",
      "WHERE",
      "invoice_date",
      "<",
      "``",
      "1989-09-03",
      "''",
      "OR",
      "invoice_date",
      ">",
      "``",
      "2007-12-25",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "invoice_details",
      "from",
      "invoices",
      "where",
      "invoice_date",
      "<",
      "value",
      "or",
      "invoice_date",
      ">",
      "value"
    ],
    "question": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "details",
      "of",
      "invoices",
      "created",
      "before",
      "1989-09-03",
      "or",
      "after",
      "2007-12-25",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"1989-09-03\"",
          null
        ],
        "or",
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"2007-12-25\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.customer_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T2.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "customer_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t2",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
    "question_toks": [
      "For",
      "each",
      "customer",
      "who",
      "has",
      "at",
      "least",
      "two",
      "orders",
      ",",
      "find",
      "the",
      "customer",
      "name",
      "and",
      "number",
      "of",
      "orders",
      "made",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "T2.customer_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T2.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "customer_name",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t2",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "made",
      "at",
      "least",
      "two",
      "orders",
      "?",
      "Give",
      "me",
      "each",
      "customer",
      "name",
      "and",
      "number",
      "of",
      "orders",
      "made",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2",
    "query_toks": [
      "SELECT",
      "T2.customer_name",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T2.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "customer_name",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t2",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "Find the name of the customers who have at most two orders.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "at",
      "most",
      "two",
      "orders",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2",
    "query_toks": [
      "SELECT",
      "T2.customer_name",
      "FROM",
      "orders",
      "AS",
      "T1",
      "JOIN",
      "customers",
      "AS",
      "T2",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "GROUP",
      "BY",
      "T2.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "customer_name",
      "from",
      "orders",
      "as",
      "t1",
      "join",
      "customers",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "group",
      "by",
      "t2",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "What are the names of the customers who have made two or less orders?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "made",
      "two",
      "or",
      "less",
      "orders",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "JOIN",
      "order_items",
      "AS",
      "T3",
      "JOIN",
      "products",
      "AS",
      "T4",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "AND",
      "T2.order_id",
      "=",
      "T3.order_id",
      "AND",
      "T3.product_id",
      "=",
      "T4.product_id",
      "WHERE",
      "T4.product_name",
      "=",
      "``",
      "food",
      "''",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "join",
      "order_items",
      "as",
      "t3",
      "join",
      "products",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "and",
      "t2",
      ".",
      "order_id",
      "=",
      "t3",
      ".",
      "order_id",
      "and",
      "t3",
      ".",
      "product_id",
      "=",
      "t4",
      ".",
      "product_id",
      "where",
      "t4",
      ".",
      "product_name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List the names of the customers who have once bought product \"food\".",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "customers",
      "who",
      "have",
      "once",
      "bought",
      "product",
      "``",
      "food",
      "''",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "JOIN",
      "order_items",
      "AS",
      "T3",
      "JOIN",
      "products",
      "AS",
      "T4",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "AND",
      "T2.order_id",
      "=",
      "T3.order_id",
      "AND",
      "T3.product_id",
      "=",
      "T4.product_id",
      "WHERE",
      "T4.product_name",
      "=",
      "``",
      "food",
      "''",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "join",
      "order_items",
      "as",
      "t3",
      "join",
      "products",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "and",
      "t2",
      ".",
      "order_id",
      "=",
      "t3",
      ".",
      "order_id",
      "and",
      "t3",
      ".",
      "product_id",
      "=",
      "t4",
      ".",
      "product_id",
      "where",
      "t4",
      ".",
      "product_name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of the customers who bought product \"food\" at least once?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "customers",
      "who",
      "bought",
      "product",
      "``",
      "food",
      "''",
      "at",
      "least",
      "once",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "JOIN",
      "order_items",
      "AS",
      "T3",
      "JOIN",
      "products",
      "AS",
      "T4",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "AND",
      "T2.order_id",
      "=",
      "T3.order_id",
      "AND",
      "T3.product_id",
      "=",
      "T4.product_id",
      "WHERE",
      "T3.order_item_status",
      "=",
      "``",
      "Cancel",
      "''",
      "AND",
      "T4.product_name",
      "=",
      "``",
      "food",
      "''",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "join",
      "order_items",
      "as",
      "t3",
      "join",
      "products",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "and",
      "t2",
      ".",
      "order_id",
      "=",
      "t3",
      ".",
      "order_id",
      "and",
      "t3",
      ".",
      "product_id",
      "=",
      "t4",
      ".",
      "product_id",
      "where",
      "t3",
      ".",
      "order_item_status",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "product_name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "customers",
      "who",
      "have",
      "once",
      "canceled",
      "the",
      "purchase",
      "of",
      "the",
      "product",
      "``",
      "food",
      "''",
      "(",
      "the",
      "item",
      "status",
      "is",
      "``",
      "Cancel",
      "''",
      ")",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Cancel\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
    "query_toks": [
      "SELECT",
      "T1.customer_name",
      "FROM",
      "customers",
      "AS",
      "T1",
      "JOIN",
      "orders",
      "AS",
      "T2",
      "JOIN",
      "order_items",
      "AS",
      "T3",
      "JOIN",
      "products",
      "AS",
      "T4",
      "ON",
      "T1.customer_id",
      "=",
      "T2.customer_id",
      "AND",
      "T2.order_id",
      "=",
      "T3.order_id",
      "AND",
      "T3.product_id",
      "=",
      "T4.product_id",
      "WHERE",
      "T3.order_item_status",
      "=",
      "``",
      "Cancel",
      "''",
      "AND",
      "T4.product_name",
      "=",
      "``",
      "food",
      "''",
      "GROUP",
      "BY",
      "T1.customer_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "customer_name",
      "from",
      "customers",
      "as",
      "t1",
      "join",
      "orders",
      "as",
      "t2",
      "join",
      "order_items",
      "as",
      "t3",
      "join",
      "products",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "customer_id",
      "=",
      "t2",
      ".",
      "customer_id",
      "and",
      "t2",
      ".",
      "order_id",
      "=",
      "t3",
      ".",
      "order_id",
      "and",
      "t3",
      ".",
      "product_id",
      "=",
      "t4",
      ".",
      "product_id",
      "where",
      "t3",
      ".",
      "order_item_status",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "product_name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "customer_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "ever",
      "canceled",
      "the",
      "purchase",
      "of",
      "the",
      "product",
      "``",
      "food",
      "''",
      "(",
      "the",
      "item",
      "status",
      "is",
      "``",
      "Cancel",
      "''",
      ")",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              8,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ],
          "and",
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              12,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Cancel\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT count(*) FROM architect WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "architect",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "architect",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many architects are female?",
    "question_toks": [
      "How",
      "many",
      "architects",
      "are",
      "female",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "nationality",
      ",",
      "id",
      "FROM",
      "architect",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "nationality",
      ",",
      "id",
      "from",
      "architect",
      "where",
      "gender",
      "=",
      "value",
      "order",
      "by",
      "name"
    ],
    "question": "List the name, nationality and id of all male architects ordered by their names lexicographically.",
    "question_toks": [
      "List",
      "the",
      "name",
      ",",
      "nationality",
      "and",
      "id",
      "of",
      "all",
      "male",
      "architects",
      "ordered",
      "by",
      "their",
      "names",
      "lexicographically",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"male\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "T1.length_meters",
      ")",
      ",",
      "T2.name",
      "FROM",
      "bridge",
      "AS",
      "T1",
      "JOIN",
      "architect",
      "AS",
      "T2",
      "ON",
      "T1.architect_id",
      "=",
      "T2.id"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "t1",
      ".",
      "length_meters",
      ")",
      ",",
      "t2",
      ".",
      "name",
      "from",
      "bridge",
      "as",
      "t1",
      "join",
      "architect",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "architect_id",
      "=",
      "t2",
      ".",
      "id"
    ],
    "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "length",
      "in",
      "meters",
      "for",
      "the",
      "bridges",
      "and",
      "what",
      "are",
      "the",
      "architects",
      "'",
      "names",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT avg(length_feet) FROM bridge",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "length_feet",
      ")",
      "FROM",
      "bridge"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "length_feet",
      ")",
      "from",
      "bridge"
    ],
    "question": "What is the average length in feet of the bridges?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "length",
      "in",
      "feet",
      "of",
      "the",
      "bridges",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'",
    "query_toks": [
      "SELECT",
      "name",
      ",",
      "built_year",
      "FROM",
      "mill",
      "WHERE",
      "TYPE",
      "=",
      "'Grondzeiler",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      ",",
      "built_year",
      "from",
      "mill",
      "where",
      "type",
      "=",
      "value"
    ],
    "question": "What are the names and year of construction for the mills of 'Grondzeiler' type?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "and",
      "year",
      "of",
      "construction",
      "for",
      "the",
      "mills",
      "of",
      "'Grondzeiler",
      "'",
      "type",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Grondzeiler\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.name",
      ",",
      "T1.nationality",
      "FROM",
      "architect",
      "AS",
      "T1",
      "JOIN",
      "mill",
      "AS",
      "t2",
      "ON",
      "T1.id",
      "=",
      "T2.architect_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "nationality",
      "from",
      "architect",
      "as",
      "t1",
      "join",
      "mill",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "architect_id"
    ],
    "question": "What are the distinct names and nationalities of the architects who have ever built a mill?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "names",
      "and",
      "nationalities",
      "of",
      "the",
      "architects",
      "who",
      "have",
      "ever",
      "built",
      "a",
      "mill",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "'Donceel",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the mills which are not located in 'Donceel'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "mills",
      "which",
      "are",
      "not",
      "located",
      "in",
      "'Donceel",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Donceel\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.type",
      "FROM",
      "mill",
      "AS",
      "T1",
      "JOIN",
      "architect",
      "AS",
      "t2",
      "ON",
      "T1.architect_id",
      "=",
      "T2.id",
      "WHERE",
      "T2.nationality",
      "=",
      "'American",
      "'",
      "OR",
      "T2.nationality",
      "=",
      "'Canadian",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "type",
      "from",
      "mill",
      "as",
      "t1",
      "join",
      "architect",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "architect_id",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "nationality",
      "=",
      "value",
      "or",
      "t2",
      ".",
      "nationality",
      "=",
      "value"
    ],
    "question": "What are the distinct types of mills that are built by American or Canadian architects?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "types",
      "of",
      "mills",
      "that",
      "are",
      "built",
      "by",
      "American",
      "or",
      "Canadian",
      "architects",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"American\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Canadian\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      "FROM",
      "architect",
      "AS",
      "T1",
      "JOIN",
      "bridge",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.architect_id",
      "GROUP",
      "BY",
      "T1.id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "architect",
      "as",
      "t1",
      "join",
      "bridge",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "architect_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the ids and names of the architects who built at least 3 bridges ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "and",
      "names",
      "of",
      "the",
      "architects",
      "who",
      "built",
      "at",
      "least",
      "3",
      "bridges",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      ",",
      "T1.nationality",
      "FROM",
      "architect",
      "AS",
      "T1",
      "JOIN",
      "mill",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.architect_id",
      "GROUP",
      "BY",
      "T1.id",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "nationality",
      "from",
      "architect",
      "as",
      "t1",
      "join",
      "mill",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "architect_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id, name and nationality of the architect who built most mills?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      ",",
      "name",
      "and",
      "nationality",
      "of",
      "the",
      "architect",
      "who",
      "built",
      "most",
      "mills",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1",
    "query_toks": [
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      ",",
      "T1.gender",
      "FROM",
      "architect",
      "AS",
      "T1",
      "JOIN",
      "bridge",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.architect_id",
      "GROUP",
      "BY",
      "T1.id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2",
      "UNION",
      "SELECT",
      "T1.id",
      ",",
      "T1.name",
      ",",
      "T1.gender",
      "FROM",
      "architect",
      "AS",
      "T1",
      "JOIN",
      "mill",
      "AS",
      "T2",
      "ON",
      "T1.id",
      "=",
      "T2.architect_id",
      "GROUP",
      "BY",
      "T1.id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "gender",
      "from",
      "architect",
      "as",
      "t1",
      "join",
      "bridge",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "architect_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value",
      "union",
      "select",
      "t1",
      ".",
      "id",
      ",",
      "t1",
      ".",
      "name",
      ",",
      "t1",
      ".",
      "gender",
      "from",
      "architect",
      "as",
      "t1",
      "join",
      "mill",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "architect_id",
      "group",
      "by",
      "t1",
      ".",
      "id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What are the ids, names and genders of the architects who built two bridges or one mill?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      ",",
      "names",
      "and",
      "genders",
      "of",
      "the",
      "architects",
      "who",
      "built",
      "two",
      "bridges",
      "or",
      "one",
      "mill",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": {
        "except": null,
        "from": {
          "conds": [
            [
              false,
              2,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ],
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          "table_units": [
            [
              "table_unit",
              0
            ],
            [
              "table_unit",
              2
            ]
          ]
        },
        "groupBy": [
          [
            0,
            1,
            false
          ]
        ],
        "having": [
          [
            false,
            2,
            [
              0,
              [
                3,
                0,
                false
              ],
              null
            ],
            1.0,
            null
          ]
        ],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  1,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  2,
                  false
                ],
                null
              ]
            ],
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": []
      },
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "bridge",
      "WHERE",
      "name",
      "=",
      "'Kolob",
      "Arch",
      "'",
      "OR",
      "name",
      "=",
      "'Rainbow",
      "Bridge",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "bridge",
      "where",
      "name",
      "=",
      "value",
      "or",
      "name",
      "=",
      "value"
    ],
    "question": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "bridge",
      "named",
      "'Kolob",
      "Arch",
      "'",
      "or",
      "'Rainbow",
      "Bridge",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Kolob Arch\"",
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Rainbow Bridge\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Moulin",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the mill names contains the french word 'Moulin'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "mill",
      "names",
      "contains",
      "the",
      "french",
      "word",
      "'Moulin",
      "'",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"%Moulin%\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "T1.name",
      "FROM",
      "mill",
      "AS",
      "T1",
      "JOIN",
      "architect",
      "AS",
      "t2",
      "ON",
      "T1.architect_id",
      "=",
      "T2.id",
      "JOIN",
      "bridge",
      "AS",
      "T3",
      "ON",
      "T3.architect_id",
      "=",
      "T2.id",
      "WHERE",
      "T3.length_meters",
      ">",
      "80"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "name",
      "from",
      "mill",
      "as",
      "t1",
      "join",
      "architect",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "architect_id",
      "=",
      "t2",
      ".",
      "id",
      "join",
      "bridge",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "architect_id",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t3",
      ".",
      "length_meters",
      ">",
      "value"
    ],
    "question": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "name",
      "of",
      "the",
      "mills",
      "built",
      "by",
      "the",
      "architects",
      "who",
      "have",
      "also",
      "built",
      "a",
      "bridge",
      "longer",
      "than",
      "80",
      "meters",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          80.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "TYPE",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "mill",
      "GROUP",
      "BY",
      "TYPE",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "mill",
      "group",
      "by",
      "type",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the most common mill type, and how many are there?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "common",
      "mill",
      "type",
      ",",
      "and",
      "how",
      "many",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "architect",
      "WHERE",
      "id",
      "NOT",
      "IN",
      "(",
      "SELECT",
      "architect_id",
      "FROM",
      "mill",
      "WHERE",
      "built_year",
      "<",
      "1850",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "architect",
      "where",
      "id",
      "not",
      "in",
      "(",
      "select",
      "architect_id",
      "from",
      "mill",
      "where",
      "built_year",
      "<",
      "value",
      ")"
    ],
    "question": "How many architects haven't built a mill before year 1850?",
    "question_toks": [
      "How",
      "many",
      "architects",
      "have",
      "n't",
      "built",
      "a",
      "mill",
      "before",
      "year",
      "1850",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          true,
          8,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      11,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                4,
                [
                  0,
                  [
                    0,
                    16,
                    false
                  ],
                  null
                ],
                1850.0,
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "bridge",
      "AS",
      "t1",
      "JOIN",
      "architect",
      "AS",
      "t2",
      "ON",
      "t1.architect_id",
      "=",
      "t2.id",
      "WHERE",
      "t2.nationality",
      "=",
      "'American",
      "'",
      "ORDER",
      "BY",
      "t1.length_feet"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "bridge",
      "as",
      "t1",
      "join",
      "architect",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "architect_id",
      "=",
      "t2",
      ".",
      "id",
      "where",
      "t2",
      ".",
      "nationality",
      "=",
      "value",
      "order",
      "by",
      "t1",
      ".",
      "length_feet"
    ],
    "question": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.",
    "question_toks": [
      "show",
      "the",
      "name",
      "of",
      "all",
      "bridges",
      "that",
      "was",
      "designed",
      "by",
      "american",
      "archtect",
      ",",
      "and",
      "sort",
      "the",
      "result",
      "by",
      "the",
      "bridge",
      "feet",
      "length",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"American\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "How many book clubs are there?",
    "question_toks": [
      "How",
      "many",
      "book",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "Count the number of book clubs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "book",
      "clubs",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
    "query_toks": [
      "SELECT",
      "book_title",
      ",",
      "author_or_editor",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "book_title",
      ",",
      "author_or_editor",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "show the titles, and authors or editors for all books made after the year 1989.",
    "question_toks": [
      "show",
      "the",
      "titles",
      ",",
      "and",
      "authors",
      "or",
      "editors",
      "for",
      "all",
      "books",
      "made",
      "after",
      "the",
      "year",
      "1989",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
    "query_toks": [
      "SELECT",
      "book_title",
      ",",
      "author_or_editor",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "book_title",
      ",",
      "author_or_editor",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "What are the titles and authors or editors that correspond to books made after 1989?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "and",
      "authors",
      "or",
      "editors",
      "that",
      "correspond",
      "to",
      "books",
      "made",
      "after",
      "1989",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT DISTINCT publisher FROM book_club",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "publisher",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "publisher",
      "from",
      "book_club"
    ],
    "question": "Show all distinct publishers for books.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "publishers",
      "for",
      "books",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT DISTINCT publisher FROM book_club",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "publisher",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "publisher",
      "from",
      "book_club"
    ],
    "question": "What are all the different book publishers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "different",
      "book",
      "publishers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC",
    "query_toks": [
      "SELECT",
      "YEAR",
      ",",
      "book_title",
      ",",
      "publisher",
      "FROM",
      "book_club",
      "ORDER",
      "BY",
      "YEAR",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      ",",
      "book_title",
      ",",
      "publisher",
      "from",
      "book_club",
      "order",
      "by",
      "year",
      "desc"
    ],
    "question": "Show the years, book titles, and publishers for all books, in descending order by year.",
    "question_toks": [
      "Show",
      "the",
      "years",
      ",",
      "book",
      "titles",
      ",",
      "and",
      "publishers",
      "for",
      "all",
      "books",
      ",",
      "in",
      "descending",
      "order",
      "by",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC",
    "query_toks": [
      "SELECT",
      "YEAR",
      ",",
      "book_title",
      ",",
      "publisher",
      "FROM",
      "book_club",
      "ORDER",
      "BY",
      "YEAR",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      ",",
      "book_title",
      ",",
      "publisher",
      "from",
      "book_club",
      "order",
      "by",
      "year",
      "desc"
    ],
    "question": "What are the years, titles, and publishers for all books, ordered by year descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "years",
      ",",
      "titles",
      ",",
      "and",
      "publishers",
      "for",
      "all",
      "books",
      ",",
      "ordered",
      "by",
      "year",
      "descending",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher",
    "query_toks": [
      "SELECT",
      "publisher",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "publisher"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club",
      "group",
      "by",
      "publisher"
    ],
    "question": "Show all publishers and the number of books for each publisher.",
    "question_toks": [
      "Show",
      "all",
      "publishers",
      "and",
      "the",
      "number",
      "of",
      "books",
      "for",
      "each",
      "publisher",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher",
    "query_toks": [
      "SELECT",
      "publisher",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "publisher"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club",
      "group",
      "by",
      "publisher"
    ],
    "question": "How many books are there for each publisher?",
    "question_toks": [
      "How",
      "many",
      "books",
      "are",
      "there",
      "for",
      "each",
      "publisher",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "publisher",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "group",
      "by",
      "publisher",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the publisher with most number of books?",
    "question_toks": [
      "What",
      "is",
      "the",
      "publisher",
      "with",
      "most",
      "number",
      "of",
      "books",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "publisher",
      "ORDER",
      "BY",
      "count",
      "(",
      "*",
      ")",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "group",
      "by",
      "publisher",
      "order",
      "by",
      "count",
      "(",
      "*",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the publisher that has published the most books.",
    "question_toks": [
      "Return",
      "the",
      "publisher",
      "that",
      "has",
      "published",
      "the",
      "most",
      "books",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category ,  count(*) FROM book_club GROUP BY category",
    "query_toks": [
      "SELECT",
      "category",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "category"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club",
      "group",
      "by",
      "category"
    ],
    "question": "Show all book categories and the number of books in each category.",
    "question_toks": [
      "Show",
      "all",
      "book",
      "categories",
      "and",
      "the",
      "number",
      "of",
      "books",
      "in",
      "each",
      "category",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category ,  count(*) FROM book_club GROUP BY category",
    "query_toks": [
      "SELECT",
      "category",
      ",",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club",
      "GROUP",
      "BY",
      "category"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      ",",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club",
      "group",
      "by",
      "category"
    ],
    "question": "How many books fall into each category?",
    "question_toks": [
      "How",
      "many",
      "books",
      "fall",
      "into",
      "each",
      "category",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "category",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989",
      "GROUP",
      "BY",
      "category",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List categories that have at least two books after year 1989.",
    "question_toks": [
      "List",
      "categories",
      "that",
      "have",
      "at",
      "least",
      "two",
      "books",
      "after",
      "year",
      "1989",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "category",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989",
      "GROUP",
      "BY",
      "category",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What categories have two or more corresponding books that were made after 1989?",
    "question_toks": [
      "What",
      "categories",
      "have",
      "two",
      "or",
      "more",
      "corresponding",
      "books",
      "that",
      "were",
      "made",
      "after",
      "1989",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1989",
      "INTERSECT",
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1990"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Show publishers with a book published in 1989 and a book in 1990.",
    "question_toks": [
      "Show",
      "publishers",
      "with",
      "a",
      "book",
      "published",
      "in",
      "1989",
      "and",
      "a",
      "book",
      "in",
      "1990",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            1990.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1989",
      "INTERSECT",
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1990"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the publishers who have published a book in both 1989 and 1990?",
    "question_toks": [
      "What",
      "are",
      "the",
      "publishers",
      "who",
      "have",
      "published",
      "a",
      "book",
      "in",
      "both",
      "1989",
      "and",
      "1990",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            1990.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "EXCEPT",
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "except",
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Show all publishers which do not have a book in 1989.",
    "question_toks": [
      "Show",
      "all",
      "publishers",
      "which",
      "do",
      "not",
      "have",
      "a",
      "book",
      "in",
      "1989",
      "."
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            1989.0,
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989",
    "query_toks": [
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "EXCEPT",
      "SELECT",
      "publisher",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      "=",
      "1989"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "book_club",
      "except",
      "select",
      "publisher",
      "from",
      "book_club",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Which publishers did not publish a book in 1989?",
    "question_toks": [
      "Which",
      "publishers",
      "did",
      "not",
      "publish",
      "a",
      "book",
      "in",
      "1989",
      "?"
    ],
    "sql": {
      "except": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              0
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ],
            1989.0,
            null
          ]
        ]
      },
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "YEAR",
      ",",
      "director",
      "FROM",
      "movie",
      "ORDER",
      "BY",
      "budget_million"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "year",
      ",",
      "director",
      "from",
      "movie",
      "order",
      "by",
      "budget_million"
    ],
    "question": "Show all movie titles, years, and directors, ordered by budget.",
    "question_toks": [
      "Show",
      "all",
      "movie",
      "titles",
      ",",
      "years",
      ",",
      "and",
      "directors",
      ",",
      "ordered",
      "by",
      "budget",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "YEAR",
      ",",
      "director",
      "FROM",
      "movie",
      "ORDER",
      "BY",
      "budget_million"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "year",
      ",",
      "director",
      "from",
      "movie",
      "order",
      "by",
      "budget_million"
    ],
    "question": "What are the titles, years, and directors of all movies, ordered by budget in millions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      ",",
      "years",
      ",",
      "and",
      "directors",
      "of",
      "all",
      "movies",
      ",",
      "ordered",
      "by",
      "budget",
      "in",
      "millions",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "How many movie directors are there?",
    "question_toks": [
      "How",
      "many",
      "movie",
      "directors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "Count the number of different directors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "directors",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "=",
      "2000",
      "ORDER",
      "BY",
      "gross_worldwide",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "=",
      "value",
      "order",
      "by",
      "gross_worldwide",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?",
    "question_toks": [
      "What",
      "is",
      "the",
      "title",
      "and",
      "director",
      "for",
      "the",
      "movie",
      "with",
      "highest",
      "worldwide",
      "gross",
      "in",
      "the",
      "year",
      "2000",
      "or",
      "before",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "title",
      ",",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "=",
      "2000",
      "ORDER",
      "BY",
      "gross_worldwide",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      ",",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "=",
      "value",
      "order",
      "by",
      "gross_worldwide",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.",
    "question_toks": [
      "Return",
      "the",
      "title",
      "and",
      "director",
      "of",
      "the",
      "movie",
      "released",
      "in",
      "the",
      "year",
      "2000",
      "or",
      "earlier",
      "that",
      "had",
      "the",
      "highest",
      "worldwide",
      "gross",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "2000",
      "INTERSECT",
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Show all director names who have a movie in both year 1999 and 2000.",
    "question_toks": [
      "Show",
      "all",
      "director",
      "names",
      "who",
      "have",
      "a",
      "movie",
      "in",
      "both",
      "year",
      "1999",
      "and",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            1999.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "2000",
      "INTERSECT",
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "intersect",
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Which directors had a movie both in the year 1999 and 2000?",
    "question_toks": [
      "Which",
      "directors",
      "had",
      "a",
      "movie",
      "both",
      "in",
      "the",
      "year",
      "1999",
      "and",
      "2000",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": {
        "except": null,
        "from": {
          "conds": [],
          "table_units": [
            [
              "table_unit",
              1
            ]
          ]
        },
        "groupBy": [],
        "having": [],
        "intersect": null,
        "limit": null,
        "orderBy": [],
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  11,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "union": null,
        "where": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            1999.0,
            null
          ]
        ]
      },
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999",
      "OR",
      "YEAR",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "Show all director names who have a movie in the year 1999 or 2000.",
    "question_toks": [
      "Show",
      "all",
      "director",
      "names",
      "who",
      "have",
      "a",
      "movie",
      "in",
      "the",
      "year",
      "1999",
      "or",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000",
    "query_toks": [
      "SELECT",
      "director",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "=",
      "1999",
      "OR",
      "YEAR",
      "=",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "director",
      "from",
      "movie",
      "where",
      "year",
      "=",
      "value",
      "or",
      "year",
      "=",
      "value"
    ],
    "question": "Which directors had a movie in either 1999 or 2000?",
    "question_toks": [
      "Which",
      "directors",
      "had",
      "a",
      "movie",
      "in",
      "either",
      "1999",
      "or",
      "2000",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ],
        "or",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What is the average, maximum, and minimum budget for all movies before 2000.",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "budget",
      "for",
      "all",
      "movies",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "budget_million",
      ")",
      ",",
      "max",
      "(",
      "budget_million",
      ")",
      ",",
      "min",
      "(",
      "budget_million",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.",
    "question_toks": [
      "Return",
      "the",
      "average",
      ",",
      "maximum",
      ",",
      "and",
      "minimum",
      "budgets",
      "in",
      "millions",
      "for",
      "movies",
      "made",
      "before",
      "the",
      "year",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'",
    "query_toks": [
      "SELECT",
      "T1.company_name",
      "FROM",
      "culture_company",
      "AS",
      "T1",
      "JOIN",
      "book_club",
      "AS",
      "T2",
      "ON",
      "T1.book_club_id",
      "=",
      "T2.book_club_id",
      "WHERE",
      "T2.publisher",
      "=",
      "'Alyson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "company_name",
      "from",
      "culture_company",
      "as",
      "t1",
      "join",
      "book_club",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "book_club_id",
      "=",
      "t2",
      ".",
      "book_club_id",
      "where",
      "t2",
      ".",
      "publisher",
      "=",
      "value"
    ],
    "question": "List all company names with a book published by Alyson.",
    "question_toks": [
      "List",
      "all",
      "company",
      "names",
      "with",
      "a",
      "book",
      "published",
      "by",
      "Alyson",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Alyson\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'",
    "query_toks": [
      "SELECT",
      "T1.company_name",
      "FROM",
      "culture_company",
      "AS",
      "T1",
      "JOIN",
      "book_club",
      "AS",
      "T2",
      "ON",
      "T1.book_club_id",
      "=",
      "T2.book_club_id",
      "WHERE",
      "T2.publisher",
      "=",
      "'Alyson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "company_name",
      "from",
      "culture_company",
      "as",
      "t1",
      "join",
      "book_club",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "book_club_id",
      "=",
      "t2",
      ".",
      "book_club_id",
      "where",
      "t2",
      ".",
      "publisher",
      "=",
      "value"
    ],
    "question": "What are all the company names that have a book published by Alyson?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "company",
      "names",
      "that",
      "have",
      "a",
      "book",
      "published",
      "by",
      "Alyson",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Alyson\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'",
    "query_toks": [
      "SELECT",
      "T1.title",
      ",",
      "T3.book_title",
      "FROM",
      "movie",
      "AS",
      "T1",
      "JOIN",
      "culture_company",
      "AS",
      "T2",
      "ON",
      "T1.movie_id",
      "=",
      "T2.movie_id",
      "JOIN",
      "book_club",
      "AS",
      "T3",
      "ON",
      "T3.book_club_id",
      "=",
      "T2.book_club_id",
      "WHERE",
      "T2.incorporated_in",
      "=",
      "'China",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "title",
      ",",
      "t3",
      ".",
      "book_title",
      "from",
      "movie",
      "as",
      "t1",
      "join",
      "culture_company",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "movie_id",
      "=",
      "t2",
      ".",
      "movie_id",
      "join",
      "book_club",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "book_club_id",
      "=",
      "t2",
      ".",
      "book_club_id",
      "where",
      "t2",
      ".",
      "incorporated_in",
      "=",
      "value"
    ],
    "question": "Show the movie titles and book titles for all companies in China.",
    "question_toks": [
      "Show",
      "the",
      "movie",
      "titles",
      "and",
      "book",
      "titles",
      "for",
      "all",
      "companies",
      "in",
      "China",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'",
    "query_toks": [
      "SELECT",
      "T1.title",
      ",",
      "T3.book_title",
      "FROM",
      "movie",
      "AS",
      "T1",
      "JOIN",
      "culture_company",
      "AS",
      "T2",
      "ON",
      "T1.movie_id",
      "=",
      "T2.movie_id",
      "JOIN",
      "book_club",
      "AS",
      "T3",
      "ON",
      "T3.book_club_id",
      "=",
      "T2.book_club_id",
      "WHERE",
      "T2.incorporated_in",
      "=",
      "'China",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "title",
      ",",
      "t3",
      ".",
      "book_title",
      "from",
      "movie",
      "as",
      "t1",
      "join",
      "culture_company",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "movie_id",
      "=",
      "t2",
      ".",
      "movie_id",
      "join",
      "book_club",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "book_club_id",
      "=",
      "t2",
      ".",
      "book_club_id",
      "where",
      "t2",
      ".",
      "incorporated_in",
      "=",
      "value"
    ],
    "question": "What are the titles of movies and books corresponding to companies incorporated in China?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "movies",
      "and",
      "books",
      "corresponding",
      "to",
      "companies",
      "incorporated",
      "in",
      "China",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999",
    "query_toks": [
      "SELECT",
      "T2.company_name",
      "FROM",
      "movie",
      "AS",
      "T1",
      "JOIN",
      "culture_company",
      "AS",
      "T2",
      "ON",
      "T1.movie_id",
      "=",
      "T2.movie_id",
      "WHERE",
      "T1.year",
      "=",
      "1999"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "company_name",
      "from",
      "movie",
      "as",
      "t1",
      "join",
      "culture_company",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "movie_id",
      "=",
      "t2",
      ".",
      "movie_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Show all company names with a movie directed in year 1999.",
    "question_toks": [
      "Show",
      "all",
      "company",
      "names",
      "with",
      "a",
      "movie",
      "directed",
      "in",
      "year",
      "1999",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999",
    "query_toks": [
      "SELECT",
      "T2.company_name",
      "FROM",
      "movie",
      "AS",
      "T1",
      "JOIN",
      "culture_company",
      "AS",
      "T2",
      "ON",
      "T1.movie_id",
      "=",
      "T2.movie_id",
      "WHERE",
      "T1.year",
      "=",
      "1999"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "company_name",
      "from",
      "movie",
      "as",
      "t1",
      "join",
      "culture_company",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "movie_id",
      "=",
      "t2",
      ".",
      "movie_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are all company names that have a corresponding movie directed in the year 1999?",
    "question_toks": [
      "What",
      "are",
      "all",
      "company",
      "names",
      "that",
      "have",
      "a",
      "corresponding",
      "movie",
      "directed",
      "in",
      "the",
      "year",
      "1999",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1999.0,
          null
        ]
      ]
    }
  }
]